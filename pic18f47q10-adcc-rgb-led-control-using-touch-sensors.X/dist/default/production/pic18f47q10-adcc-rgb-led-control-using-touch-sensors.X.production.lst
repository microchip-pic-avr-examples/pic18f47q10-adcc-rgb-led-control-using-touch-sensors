

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Oct 01 11:08:04 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   125                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   127  0000                     
   128                           ; Version 2.30
   129                           ; Generated 02/06/2020 GMT
   130                           ; 
   131                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F47Q10 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     
   163                           	psect	idataCOMRAM
   164  003842                     __pidataCOMRAM:
   165                           	callstack 0
   166                           
   167                           ;initializer for _callback_notPressed
   168  003842  48                 	db	low _Button_DefaultCallback
   169  003843  38                 	db	high _Button_DefaultCallback
   170  003844  00                 	db	low (_Button_DefaultCallback shr (0+16))
   171                           
   172                           	psect	idataBANK0
   173  003762                     __pidataBANK0:
   174                           	callstack 0
   175                           
   176                           ;initializer for _Button_StateMachine
   177  003762  32                 	db	low _Button_State_Initializing
   178  003763  25                 	db	high _Button_State_Initializing
   179  003764  00                 	db	low (_Button_State_Initializing shr (0+16))
   180  003765  34                 	db	low _Button_State_NotPressed
   181  003766  1D                 	db	high _Button_State_NotPressed
   182  003767  00                 	db	low (_Button_State_NotPressed shr (0+16))
   183  003768  3E                 	db	low _Button_State_Pressed
   184  003769  22                 	db	high _Button_State_Pressed
   185  00376A  00                 	db	low (_Button_State_Pressed shr (0+16))
   186                           
   187                           ;initializer for _callback_pressed
   188  00376B  48                 	db	low _Button_DefaultCallback
   189  00376C  38                 	db	high _Button_DefaultCallback
   190  00376D  00                 	db	low (_Button_DefaultCallback shr (0+16))
   191                           
   192                           ;initializer for _freq_hop
   193  00376E  00                 	db	0
   194  00376F  3C                 	db	60
   195  003770  78                 	db	120
   196                           
   197                           ;initializer for _callback_sampled
   198  003771  46                 	db	low _Sensor_DefaultCallback
   199  003772  38                 	db	high _Sensor_DefaultCallback
   200  003773  00                 	db	low (_Sensor_DefaultCallback shr (0+16))
   201                           
   202                           ;initializer for _gBrightnessLevel
   203  003774  01                 	db	1
   204                           
   205                           	psect	smallconst
   206  000F00                     __psmallconst:
   207                           	callstack 0
   208  000F00  00                 	db	0
   209  000F01                     _mtouch_button_init:
   210                           	callstack 0
   211  000F01  00                 	db	0
   212  000F02  00                 	db	0
   213  000F03  00                 	db	0
   214  000F04  0000               	dw	0
   215  000F06  0000               	dw	0
   216  000F08  0000               	dw	0
   217  000F0A  00                 	db	0
   218  000F0B  0000               	dw	0
   219  000F0D  0000               	dw	0
   220  000F0F  64                 	db	100
   221  000F10  01                 	db	1
   222  000F11  01                 	db	1
   223  000F12  01                 	db	1
   224  000F13  00                 	db	0
   225  000F14  0000               	dw	0
   226  000F16  0000               	dw	0
   227  000F18  0000               	dw	0
   228  000F1A  00                 	db	0
   229  000F1B  0000               	dw	0
   230  000F1D  0000               	dw	0
   231  000F1F  64                 	db	100
   232  000F20  01                 	db	1
   233  000F21                     __end_of_mtouch_button_init:
   234                           	callstack 0
   235  000F21                     _mtouch_sensor_init:
   236                           	callstack 0
   237  000F21  00                 	db	0
   238  000F22  02                 	db	2
   239  000F23  80                 	db	128
   240  000F24  80                 	db	128
   241  000F25  20                 	db	32
   242  000F26  00                 	db	0
   243  000F27  0000               	dw	0
   244  000F29  00                 	db	0
   245  000F2A  01                 	db	1
   246  000F2B  1F                 	db	31
   247  000F2C  80                 	db	128
   248  000F2D  80                 	db	128
   249  000F2E  20                 	db	32
   250  000F2F  00                 	db	0
   251  000F30  0000               	dw	0
   252  000F32  00                 	db	0
   253  000F33                     __end_of_mtouch_sensor_init:
   254                           	callstack 0
   255  000F33  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	nvCOMRAM
   258  000043                     __pnvCOMRAM:
   259                           	callstack 0
   260  000043                     _timer3ReloadVal:
   261                           	callstack 0
   262  000043                     	ds	2
   263  000045                     _timer1ReloadVal:
   264                           	callstack 0
   265  000045                     	ds	2
   266                           
   267                           	psect	nvBANK0
   268  0000ED                     __pnvBANK0:
   269                           	callstack 0
   270  0000ED                     _TMR3_InterruptHandler:
   271                           	callstack 0
   272  0000ED                     	ds	3
   273  0000F0                     _TMR1_InterruptHandler:
   274                           	callstack 0
   275  0000F0                     	ds	3
   276  0000F3                     _ADCC_ADTI_InterruptHandler:
   277                           	callstack 0
   278  0000F3                     	ds	3
   279  0000                     _PMD5	set	3809
   280  0000                     _PMD4	set	3808
   281  0000                     _PMD3	set	3807
   282  0000                     _PMD2	set	3806
   283  0000                     _PMD1	set	3805
   284  0000                     _PMD0	set	3804
   285  0000                     _OSCTUNE	set	3800
   286  0000                     _OSCFRQ	set	3801
   287  0000                     _OSCEN	set	3799
   288  0000                     _OSCCON3	set	3797
   289  0000                     _OSCCON1	set	3795
   290  0000                     _PIE4bits	set	3777
   291  0000                     _PIR4bits	set	3785
   292  0000                     _PIE1bits	set	3774
   293  0000                     _PIR1bits	set	3782
   294  0000                     _ADCON1bits	set	3924
   295  0000                     _ADPREVL	set	3932
   296  0000                     _ADPREVH	set	3933
   297  0000                     _ADCON2bits	set	3925
   298  0000                     _ADCON3bits	set	3926
   299  0000                     _ADRESL	set	3934
   300  0000                     _ADRESH	set	3935
   301  0000                     _ADACT	set	3921
   302  0000                     _INLVLE	set	3877
   303  0000                     _INLVLD	set	3869
   304  0000                     _INLVLC	set	3864
   305  0000                     _INLVLB	set	3856
   306  0000                     _INLVLA	set	3848
   307  0000                     _SLRCONE	set	3878
   308  0000                     _SLRCOND	set	3870
   309  0000                     _SLRCONC	set	3865
   310  0000                     _SLRCONB	set	3857
   311  0000                     _SLRCONA	set	3849
   312  0000                     _ODCOND	set	3871
   313  0000                     _ODCONC	set	3866
   314  0000                     _ODCONB	set	3858
   315  0000                     _ODCONA	set	3850
   316  0000                     _ODCONE	set	3879
   317  0000                     _WPUC	set	3867
   318  0000                     _WPUA	set	3851
   319  0000                     _WPUB	set	3859
   320  0000                     _WPUE	set	3880
   321  0000                     _WPUD	set	3872
   322  0000                     _ANSELA	set	3852
   323  0000                     _ANSELE	set	3881
   324  0000                     _ANSELB	set	3860
   325  0000                     _ANSELC	set	3868
   326  0000                     _ANSELD	set	3873
   327  0000                     _ADCON0bits	set	3931
   328  0000                     _ADPCH	set	3930
   329  0000                     _ADPRE	set	3929
   330  0000                     _ADACQ	set	3927
   331  0000                     _ADCON0	set	3931
   332  0000                     _ADCON3	set	3926
   333  0000                     _ADCON2	set	3925
   334  0000                     _ADCON1	set	3924
   335  0000                     _ADCAP	set	3928
   336  0000                     _ADREF	set	3923
   337  0000                     _ADCLK	set	3922
   338  0000                     _ADFLTR	set	3949
   339  0000                     _ADACC	set	3947
   340  0000                     _LATAbits	set	3970
   341  0000                     _LATBbits	set	3971
   342  0000                     _LATDbits	set	3973
   343  0000                     _INTCONbits	set	4082
   344  0000                     _T3GCONbits	set	4041
   345  0000                     _T3CONbits	set	4040
   346  0000                     _T3CON	set	4040
   347  0000                     _TMR3L	set	4038
   348  0000                     _TMR3H	set	4039
   349  0000                     _T3CLK	set	4043
   350  0000                     _T3GATE	set	4042
   351  0000                     _T3GCON	set	4041
   352  0000                     _T1GCONbits	set	4047
   353  0000                     _T1CONbits	set	4046
   354  0000                     _T1CON	set	4046
   355  0000                     _TMR1L	set	4044
   356  0000                     _TMR1H	set	4045
   357  0000                     _T1CLK	set	4049
   358  0000                     _T1GATE	set	4048
   359  0000                     _T1GCON	set	4047
   360  0000                     _ADERRL	set	3945
   361  0000                     _ADERRH	set	3946
   362  0000                     _ADFLTRL	set	3949
   363  0000                     _ADFLTRH	set	3950
   364  0000                     _ADSTATbits	set	3936
   365  0000                     _ADACCL	set	3947
   366  0000                     _ADACCH	set	3948
   367  0000                     _ADCNT	set	3938
   368  0000                     _ADSTAT	set	3936
   369  0000                     _TRISD	set	3978
   370  0000                     _TRISC	set	3977
   371  0000                     _TRISB	set	3976
   372  0000                     _TRISA	set	3975
   373  0000                     _TRISE	set	3979
   374  0000                     _LATC	set	3972
   375  0000                     _LATB	set	3971
   376  0000                     _LATA	set	3970
   377  0000                     _LATD	set	3973
   378  0000                     _LATE	set	3974
   379  0000                     _ADRPT	set	3937
   380  0000                     _ADSTPTH	set	3940
   381  0000                     _ADSTPTL	set	3939
   382  0000                     _ADUTHH	set	3944
   383  0000                     _ADUTHL	set	3943
   384  0000                     _ADLTHH	set	3942
   385  0000                     _ADLTHL	set	3941
   386  0000                     _TRISDbits	set	3978
   387  0000                     _TRISAbits	set	3975
   388  0000                     _GIE	set	32663
   389                           
   390                           ; #config settings
   391                           
   392                           	psect	cinit
   393  002AD0                     __pcinit:
   394                           	callstack 0
   395  002AD0                     start_initialization:
   396                           	callstack 0
   397  002AD0                     __initialization:
   398                           	callstack 0
   399                           
   400                           ; Initialize objects allocated to BANK0 (19 bytes)
   401                           ; load TBLPTR registers with __pidataBANK0
   402  002AD0  0E62               	movlw	low __pidataBANK0
   403  002AD2  6EF6               	movwf	tblptrl,c
   404  002AD4  0E37               	movlw	high __pidataBANK0
   405  002AD6  6EF7               	movwf	tblptrh,c
   406  002AD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   407  002ADA  6EF8               	movwf	tblptru,c
   408  002ADC  EE00  F0DA         	lfsr	0,__pdataBANK0
   409  002AE0  EE10 F013          	lfsr	1,19
   410  002AE4                     copy_data0:
   411  002AE4  0009               	tblrd		*+
   412  002AE6  CFF5 FFEE          	movff	tablat,postinc0
   413  002AEA  50E5               	movf	postdec1,w,c
   414  002AEC  50E1               	movf	fsr1l,w,c
   415  002AEE  E1FA               	bnz	copy_data0
   416                           
   417                           ; Initialize objects allocated to COMRAM (3 bytes)
   418                           ; load TBLPTR registers with __pidataCOMRAM
   419  002AF0  0E42               	movlw	low __pidataCOMRAM
   420  002AF2  6EF6               	movwf	tblptrl,c
   421  002AF4  0E38               	movlw	high __pidataCOMRAM
   422  002AF6  6EF7               	movwf	tblptrh,c
   423  002AF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   424  002AFA  6EF8               	movwf	tblptru,c
   425  002AFC  0009               	tblrd		*+	;fetch initializer
   426  002AFE  CFF5 F047          	movff	tablat,__pdataCOMRAM
   427  002B02  0009               	tblrd		*+	;fetch initializer
   428  002B04  CFF5 F048          	movff	tablat,__pdataCOMRAM+1
   429  002B08  0009               	tblrd		*+	;fetch initializer
   430  002B0A  CFF5 F049          	movff	tablat,__pdataCOMRAM+2
   431                           
   432                           ; Clear objects allocated to BANK1 (64 bytes)
   433  002B0E  EE01  F000         	lfsr	0,__pbssBANK1
   434  002B12  0E40               	movlw	64
   435  002B14                     clear_0:
   436  002B14  6AEE               	clrf	postinc0,c
   437  002B16  06E8               	decf	wreg,f,c
   438  002B18  E1FD               	bnz	clear_0
   439                           
   440                           ; Clear objects allocated to BANK0 (70 bytes)
   441  002B1A  EE00  F060         	lfsr	0,__pbssBANK0
   442  002B1E  0E46               	movlw	70
   443  002B20                     clear_1:
   444  002B20  6AEE               	clrf	postinc0,c
   445  002B22  06E8               	decf	wreg,f,c
   446  002B24  E1FD               	bnz	clear_1
   447                           
   448                           ; Clear objects allocated to COMRAM (14 bytes)
   449  002B26  EE00  F035         	lfsr	0,__pbssCOMRAM
   450  002B2A  0E0E               	movlw	14
   451  002B2C                     clear_2:
   452  002B2C  6AEE               	clrf	postinc0,c
   453  002B2E  06E8               	decf	wreg,f,c
   454  002B30  E1FD               	bnz	clear_2
   455  002B32                     end_of_initialization:
   456                           	callstack 0
   457  002B32                     __end_of__initialization:
   458                           	callstack 0
   459  002B32  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   460  002B34  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   461  002B36  0100               	movlb	0
   462  002B38  EFF5  F019         	goto	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMRAM
   465  000035                     __pbssCOMRAM:
   466                           	callstack 0
   467  000035                     _packet_sample:
   468                           	callstack 0
   469  000035                     	ds	4
   470  000039                     medianFilter@bufferIndex:
   471                           	callstack 0
   472  000039                     	ds	2
   473  00003B                     _sample_delay:
   474                           	callstack 0
   475  00003B                     	ds	1
   476  00003C                     _freq_index:
   477                           	callstack 0
   478  00003C                     	ds	1
   479  00003D                     _lowpowerActivated:
   480                           	callstack 0
   481  00003D                     	ds	1
   482  00003E                     _scanInterrupted:
   483                           	callstack 0
   484  00003E                     	ds	1
   485  00003F                     _sampling_flag:
   486                           	callstack 0
   487  00003F                     	ds	1
   488  000040                     _currentScanSensor:
   489                           	callstack 0
   490  000040                     	ds	1
   491  000041                     _mtouch_request_init:
   492                           	callstack 0
   493  000041                     	ds	1
   494  000042                     _mtouch_time_toScan:
   495                           	callstack 0
   496  000042                     	ds	1
   497                           
   498                           	psect	dataCOMRAM
   499  000047                     __pdataCOMRAM:
   500                           	callstack 0
   501  000047                     _callback_notPressed:
   502                           	callstack 0
   503  000047                     	ds	3
   504                           
   505                           	psect	bssBANK0
   506  000060                     __pbssBANK0:
   507                           	callstack 0
   508  000060                     _sensor_medianBuffer:
   509                           	callstack 0
   510  000060                     	ds	12
   511  00006C                     Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter:
   512                           	callstack 0
   513  00006C                     	ds	3
   514  00006F                     _gWaitingForButton2Release:
   515                           	callstack 0
   516  00006F                     	ds	1
   517  000070                     _gWaitingForButton1Release:
   518                           	callstack 0
   519  000070                     	ds	1
   520  000071                     _gButton2Pressed:
   521                           	callstack 0
   522  000071                     	ds	1
   523  000072                     _gButton1Pressed:
   524                           	callstack 0
   525  000072                     	ds	1
   526  000073                     _gColorMask:
   527                           	callstack 0
   528  000073                     	ds	1
   529  000074                     _mtouch_button:
   530                           	callstack 0
   531  000074                     	ds	32
   532  000094                     _mtouch_sensor:
   533                           	callstack 0
   534  000094                     	ds	18
   535                           
   536                           	psect	dataBANK0
   537  0000DA                     __pdataBANK0:
   538                           	callstack 0
   539  0000DA                     _Button_StateMachine:
   540                           	callstack 0
   541  0000DA                     	ds	9
   542  0000E3                     _callback_pressed:
   543                           	callstack 0
   544  0000E3                     	ds	3
   545  0000E6                     _freq_hop:
   546                           	callstack 0
   547  0000E6                     	ds	3
   548  0000E9                     _callback_sampled:
   549                           	callstack 0
   550  0000E9                     	ds	3
   551  0000EC                     _gBrightnessLevel:
   552                           	callstack 0
   553  0000EC                     	ds	1
   554                           
   555                           	psect	bssBANK1
   556  000100                     __pbssBANK1:
   557                           	callstack 0
   558  000100                     _DiodeArray:
   559                           	callstack 0
   560  000100                     	ds	64
   561                           
   562                           	psect	cstackBANK0
   563  0000A6                     __pcstackBANK0:
   564                           	callstack 0
   565  0000A6                     RGBLed_SetDiode@AColor:
   566                           	callstack 0
   567                           
   568                           ; 4 bytes @ 0x0
   569  0000A6                     	ds	4
   570  0000AA                     RGBLed_SetDiode@AdiodeArray:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574  0000AA                     	ds	2
   575  0000AC                     ??_RGBLed_SetDiode:
   576                           
   577                           ; 1 bytes @ 0x6
   578  0000AC                     	ds	4
   579  0000B0                     FillScreen@AColor:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0xA
   583  0000B0                     	ds	4
   584  0000B4                     updateLED@colorMask:
   585                           	callstack 0
   586                           
   587                           ; 3 bytes @ 0xE
   588  0000B4                     	ds	3
   589  0000B7                     ??_updateLED:
   590                           
   591                           ; 1 bytes @ 0x11
   592  0000B7                     	ds	11
   593  0000C2                     updateLED@replicateBrightness:
   594                           	callstack 0
   595                           
   596                           ; 3 bytes @ 0x1C
   597  0000C2                     	ds	3
   598  0000C5                     updateLED@color:
   599                           	callstack 0
   600                           
   601                           ; 3 bytes @ 0x1F
   602  0000C5                     	ds	3
   603  0000C8                     updateLED@brightnessLevel:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x22
   607  0000C8                     	ds	1
   608  0000C9                     ??_processButtonRelease:
   609                           
   610                           ; 1 bytes @ 0x23
   611  0000C9                     	ds	2
   612  0000CB                     processButtonRelease@button:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x25
   616  0000CB                     	ds	1
   617  0000CC                     processButtonRelease@timerCount:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x26
   621  0000CC                     	ds	2
   622  0000CE                     Button_State_Initializing@button:
   623                           	callstack 0
   624  0000CE                     Button_State_NotPressed@button:
   625                           	callstack 0
   626  0000CE                     Button_State_Pressed@button:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x28
   630  0000CE                     	ds	2
   631  0000D0                     ??_Button_State_Initializing:
   632  0000D0                     ??_Button_State_NotPressed:
   633  0000D0                     ??_Button_State_Pressed:
   634                           
   635                           ; 1 bytes @ 0x2A
   636  0000D0                     	ds	5
   637  0000D5                     ??_Button_Service:
   638                           
   639                           ; 1 bytes @ 0x2F
   640  0000D5                     	ds	1
   641  0000D6                     Button_Service@name:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x30
   645  0000D6                     	ds	1
   646  0000D7                     Button_Service@button:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x31
   650  0000D7                     	ds	2
   651  0000D9                     MTOUCH_Button_ServiceAll@button:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x33
   655  0000D9                     	ds	1
   656                           
   657                           	psect	cstackCOMRAM
   658  000001                     __pcstackCOMRAM:
   659                           	callstack 0
   660  000001                     ?i2_abs:
   661                           	callstack 0
   662  000001                     i2Sensor_SetTrisBit@TrisBit:
   663                           	callstack 0
   664  000001                     i2MTOUCH_Sensor_isEnabled@sensor:
   665                           	callstack 0
   666  000001                     i2MTOUCH_Sensor_wasSampled@sensor:
   667                           	callstack 0
   668  000001                     Sensor_setCalibrated@sensor:
   669                           	callstack 0
   670  000001                     Sensor_setCalibratAcqTime@sensor:
   671                           	callstack 0
   672  000001                     Sensor_setSampled@sensor:
   673                           	callstack 0
   674  000001                     i2Sensor_isCalibrated@sensor:
   675                           	callstack 0
   676  000001                     i2Sensor_isCalibratingAcqTime@sensor:
   677                           	callstack 0
   678  000001                     i2TMR1_WriteTimer@timerVal:
   679                           	callstack 0
   680  000001                     i2TMR3_WriteTimer@timerVal:
   681                           	callstack 0
   682  000001                     i2abs@a:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x0
   686  000001                     	ds	1
   687  000002                     ??i2_Sensor_SetTrisBit:
   688                           
   689                           ; 1 bytes @ 0x1
   690  000002                     	ds	1
   691  000003                     ??i2_abs:
   692                           
   693                           ; 1 bytes @ 0x2
   694  000003                     	ds	1
   695  000004                     i2Sensor_SetTrisBit@sensor:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x3
   699  000004                     	ds	1
   700  000005                     ??i2_Sensor_scheduleNextScan:
   701  000005                     Sensor_autoCalibration@sensor:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x4
   705  000005                     	ds	2
   706  000007                     ??_Sensor_autoCalibration:
   707  000007                     i2Sensor_scheduleNextScan@state:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x6
   711  000007                     	ds	1
   712  000008                     i2Sensor_scheduleNextScan@skipScan:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x7
   716  000008                     	ds	1
   717  000009                     i2Sensor_scheduleNextScan@sensor:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x8
   721  000009                     	ds	2
   722  00000B                     Sensor_autoCalibration@name:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0xA
   726  00000B                     	ds	1
   727  00000C                     ??_MTOUCH_Sensor_Service:
   728                           
   729                           ; 1 bytes @ 0xB
   730  00000C                     	ds	2
   731  00000E                     MTOUCH_Sensor_Service@sensor:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0xD
   735  00000E                     	ds	2
   736  000010                     ??_INTERRUPT_InterruptManager:
   737                           
   738                           ; 1 bytes @ 0xF
   739  000010                     	ds	6
   740  000016                     ??_processButtonTouch:
   741  000016                     ??_getBrightnessLevel:
   742  000016                     ??_reverse:
   743  000016                     ?_abs:
   744                           	callstack 0
   745  000016                     ?_medianFilter:
   746                           	callstack 0
   747  000016                     ?_MTOUCH_Sensor_RawSample_Get:
   748                           	callstack 0
   749  000016                     ?_TMR1_ReadTimer:
   750                           	callstack 0
   751  000016                     ?_TMR3_ReadTimer:
   752                           	callstack 0
   753  000016                     ?_getColorMask:
   754                           	callstack 0
   755  000016                     Sensor_SetTrisBit@TrisBit:
   756                           	callstack 0
   757  000016                     MTOUCH_Sensor_Enable@sensor:
   758                           	callstack 0
   759  000016                     MTOUCH_Sensor_isEnabled@sensor:
   760                           	callstack 0
   761  000016                     MTOUCH_Sensor_Calibrate@sensor:
   762                           	callstack 0
   763  000016                     MTOUCH_Sensor_isCalibrated@sensor:
   764                           	callstack 0
   765  000016                     MTOUCH_Sensor_wasSampled@sensor:
   766                           	callstack 0
   767  000016                     Sensor_isCalibrated@sensor:
   768                           	callstack 0
   769  000016                     Sensor_isCalibratingAcqTime@sensor:
   770                           	callstack 0
   771  000016                     Sensor_Sampled_Reset@sensor:
   772                           	callstack 0
   773  000016                     Button_Tick_helper@button:
   774                           	callstack 0
   775  000016                     Button_Deviation_Update@button:
   776                           	callstack 0
   777  000016                     Button_Baseline_Update@button:
   778                           	callstack 0
   779  000016                     TMR1_WriteTimer@timerVal:
   780                           	callstack 0
   781  000016                     TMR3_WriteTimer@timerVal:
   782                           	callstack 0
   783  000016                     RGBLed_SetColor@AdiodeArray:
   784                           	callstack 0
   785  000016                     abs@a:
   786                           	callstack 0
   787  000016                     memcpy@d1:
   788                           	callstack 0
   789  000016                     MTOUCH_Button_SetPressedCallback@callback:
   790                           	callstack 0
   791  000016                     MTOUCH_Button_SetNotPressedCallback@callback:
   792                           	callstack 0
   793  000016                     ADCC_SetADTIInterruptHandler@InterruptHandler:
   794                           	callstack 0
   795  000016                     TMR1_SetInterruptHandler@InterruptHandler:
   796                           	callstack 0
   797  000016                     TMR3_SetInterruptHandler@InterruptHandler:
   798                           	callstack 0
   799                           
   800                           ; 3 bytes @ 0x15
   801  000016                     	ds	1
   802  000017                     ??_Sensor_SetTrisBit:
   803  000017                     MTOUCH_Button_Initialize@name:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x16
   807  000017                     	ds	1
   808  000018                     ??_abs:
   809  000018                     ??_medianFilter:
   810  000018                     ??_Button_Deviation_Update:
   811  000018                     ??_Button_Baseline_Update:
   812  000018                     ??_TMR1_ReadTimer:
   813  000018                     ??_TMR3_ReadTimer:
   814  000018                     MTOUCH_Sensor_Initialize@sensor:
   815                           	callstack 0
   816  000018                     MTOUCH_Sensor_RawSample_Get@name:
   817                           	callstack 0
   818  000018                     processButtonTouch@button:
   819                           	callstack 0
   820  000018                     reverse@b:
   821                           	callstack 0
   822  000018                     MTOUCH_Sensor_Sampled_ResetAll@sensor:
   823                           	callstack 0
   824  000018                     MTOUCH_Button_Initialize@button:
   825                           	callstack 0
   826  000018                     memcpy@s1:
   827                           	callstack 0
   828  000018                     RGBLed_SetColor@tempData:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x17
   832  000018                     	ds	1
   833  000019                     ??_getColorMask:
   834  000019                     ??_TMR1_Initialize:
   835  000019                     ??_TMR3_Initialize:
   836  000019                     Sensor_SetTrisBit@sensor:
   837                           	callstack 0
   838  000019                     Button_Reading_Update_Helper@button:
   839                           	callstack 0
   840  000019                     Button_Baseline_Initialize@button:
   841                           	callstack 0
   842  000019                     RGBLed_InitDiode@ARGBColor:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x18
   846  000019                     	ds	1
   847  00001A                     ??_Sensor_scheduleNextScan:
   848  00001A                     ??_Sensor_FrequencyHopping_Autotune_Process:
   849  00001A                     MTOUCH_Button_Tick@i:
   850                           	callstack 0
   851  00001A                     TMR1_ReadTimer@readVal:
   852                           	callstack 0
   853  00001A                     TMR3_ReadTimer@readVal:
   854                           	callstack 0
   855  00001A                     memcpy@n:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x19
   859  00001A                     	ds	1
   860  00001B                     ??_Button_Baseline_Initialize:
   861  00001B                     ??_Button_Reading_Update_Helper:
   862                           
   863                           ; 1 bytes @ 0x1A
   864  00001B                     	ds	1
   865  00001C                     Sensor_scheduleNextScan@state:
   866                           	callstack 0
   867  00001C                     TMR1_ReadTimer@readValHigh:
   868                           	callstack 0
   869  00001C                     TMR3_ReadTimer@readValHigh:
   870                           	callstack 0
   871  00001C                     memcpy@d:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x1B
   875  00001C                     	ds	1
   876  00001D                     Sensor_scheduleNextScan@skipScan:
   877                           	callstack 0
   878  00001D                     medianFilter@sensor:
   879                           	callstack 0
   880  00001D                     TMR1_ReadTimer@readValLow:
   881                           	callstack 0
   882  00001D                     TMR3_ReadTimer@readValLow:
   883                           	callstack 0
   884  00001D                     Button_Reading_Update@button:
   885                           	callstack 0
   886  00001D                     RGBLed_InitDiode@AdiodeArray:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x1C
   890  00001D                     	ds	1
   891  00001E                     Sensor_scheduleNextScan@sensor:
   892                           	callstack 0
   893  00001E                     Sensor_RawSample_Update@sensor:
   894                           	callstack 0
   895  00001E                     memcpy@s:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x1D
   899  00001E                     	ds	1
   900  00001F                     ??_RGBLed_InitDiode:
   901                           
   902                           ; 1 bytes @ 0x1E
   903  00001F                     	ds	1
   904  000020                     MTOUCH_Sensor_isSamplingComplete@sensor:
   905                           	callstack 0
   906  000020                     memcpy@tmp:
   907                           	callstack 0
   908  000020                     Sensor_RawSample_Update@result:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x1F
   912  000020                     	ds	1
   913  000021                     MTOUCH_Sensor_InitializeAll@sensor:
   914                           	callstack 0
   915  000021                     MTOUCH_Button_InitializeAll@button:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x20
   919  000021                     	ds	1
   920  000022                     MTOUCH_Sensor_postAcquisitionProcess@name:
   921                           	callstack 0
   922  000022                     Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound:
   923                           	callstack 0
   924  000022                     Button_Deviation_Update@deviation:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x21
   928  000022                     	ds	1
   929  000023                     Sensor_FrequencyHopping_Autotune_Process@variance:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x22
   933  000023                     	ds	2
   934  000025                     Sensor_FrequencyHopping_Autotune_Process@maxVariance:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x24
   938  000025                     	ds	2
   939  000027                     Sensor_FrequencyHopping_Autotune_Process@sensor:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x26
   943  000027                     	ds	1
   944  000028                     Sensor_FrequencyHopping_Autotune_Process@selectedFrequency:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x27
   948  000028                     	ds	1
   949  000029                     Sensor_FrequencyHopping_Autotune_Process@frequencyIndex:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x28
   953  000029                     	ds	1
   954  00002A                     
   955                           ; 1 bytes @ 0x29
   956  00002A                     	ds	8
   957  000032                     RGBLed_SetDiode@ANum:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x31
   961  000032                     	ds	1
   962  000033                     RGBLed_SetDiode@i:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x32
   966  000033                     	ds	1
   967  000034                     FillScreen@n:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x33
   971  000034                     	ds	1
   972  000035                     
   973                           ; 1 bytes @ 0x34
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 49 in file "main.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels required when called:   17
   999 ;; This function calls:
  1000 ;;		_MTOUCH_Button_SetNotPressedCallback
  1001 ;;		_MTOUCH_Button_SetPressedCallback
  1002 ;;		_SYSTEM_Initialize
  1003 ;;		_applicationTask
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010  0033EA                     __ptext0:
  1011                           	callstack 0
  1012  0033EA                     _main:
  1013                           	callstack 14
  1014  0033EA                     
  1015                           ;main.c: 52:     SYSTEM_Initialize();
  1016  0033EA  EC17  F01B         	call	_SYSTEM_Initialize	;wreg free
  1017  0033EE                     
  1018                           ;main.c: 59:     (INTCONbits.GIE = 1);
  1019  0033EE  8EF2               	bsf	242,7,c	;volatile
  1020  0033F0                     
  1021                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  1022  0033F0  8CF2               	bsf	242,6,c	;volatile
  1023  0033F2                     
  1024                           ;main.c: 71:     MTOUCH_Button_SetPressedCallback(processButtonTouch);
  1025  0033F2  0E30               	movlw	low _processButtonTouch
  1026  0033F4  6E16               	movwf	MTOUCH_Button_SetPressedCallback@callback^0,c
  1027  0033F6  0E28               	movlw	high _processButtonTouch
  1028  0033F8  6E17               	movwf	(MTOUCH_Button_SetPressedCallback@callback+1)^0,c
  1029  0033FA  0E00               	movlw	low (_processButtonTouch shr (0+16))
  1030  0033FC  6E18               	movwf	(MTOUCH_Button_SetPressedCallback@callback+2)^0,c
  1031  0033FE  ECF2  F01B         	call	_MTOUCH_Button_SetPressedCallback	;wreg free
  1032  003402                     
  1033                           ;main.c: 72:     MTOUCH_Button_SetNotPressedCallback(processButtonRelease);
  1034  003402  0E30               	movlw	low _processButtonRelease
  1035  003404  6E16               	movwf	MTOUCH_Button_SetNotPressedCallback@callback^0,c
  1036  003406  0E18               	movlw	high _processButtonRelease
  1037  003408  6E17               	movwf	(MTOUCH_Button_SetNotPressedCallback@callback+1)^0,c
  1038  00340A  0E00               	movlw	low (_processButtonRelease shr (0+16))
  1039  00340C  6E18               	movwf	(MTOUCH_Button_SetNotPressedCallback@callback+2)^0,c
  1040  00340E  ECF9  F01B         	call	_MTOUCH_Button_SetNotPressedCallback	;wreg free
  1041  003412                     l5893:
  1042                           
  1043                           ;main.c: 75:         applicationTask();
  1044  003412  EC0A  F01C         	call	_applicationTask	;wreg free
  1045  003416  EF09  F01A         	goto	l5893
  1046  00341A  EF5D  F000         	goto	start
  1047  00341E                     __end_of_main:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _applicationTask *****************
  1051 ;; Defined at:
  1052 ;;		line 4 in file "application.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:   16
  1073 ;; This function calls:
  1074 ;;		_MTOUCH_Service_Mainloop
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text1
  1081  003814                     __ptext1:
  1082                           	callstack 0
  1083  003814                     _applicationTask:
  1084                           	callstack 14
  1085  003814                     
  1086                           ;application.c: 6:     MTOUCH_Service_Mainloop();
  1087  003814  ECDF  F017         	call	_MTOUCH_Service_Mainloop	;wreg free
  1088  003818  0012               	return		;funcret
  1089  00381A                     __end_of_applicationTask:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _MTOUCH_Service_Mainloop *****************
  1093 ;; Defined at:
  1094 ;;		line 97 in file "mcc_generated_files/mtouch/mtouch.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      _Bool 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:   15
  1115 ;; This function calls:
  1116 ;;		_MTOUCH_Button_ServiceAll
  1117 ;;		_MTOUCH_Initialize
  1118 ;;		_MTOUCH_Sensor_SampleAll
  1119 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  1120 ;;		_MTOUCH_Tick
  1121 ;;		_MTOUCH_needReburst
  1122 ;; This function is called by:
  1123 ;;		_applicationTask
  1124 ;;		_touch_example
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text2
  1129  002FBE                     __ptext2:
  1130                           	callstack 0
  1131  002FBE                     _MTOUCH_Service_Mainloop:
  1132                           	callstack 14
  1133  002FBE                     
  1134                           ;mcc_generated_files/mtouch/mtouch.c: 99:     if(mtouch_request_init)
  1135  002FBE  5041               	movf	_mtouch_request_init^0,w,c
  1136  002FC0  B4D8               	btfsc	status,2,c
  1137  002FC2  EFE5  F017         	goto	u4131
  1138  002FC6  EFE7  F017         	goto	u4130
  1139  002FCA                     u4131:
  1140  002FCA  EFEB  F017         	goto	l5847
  1141  002FCE                     u4130:
  1142  002FCE                     
  1143                           ;mcc_generated_files/mtouch/mtouch.c: 100:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          1:         MTOUCH_Initialize();
  1144  002FCE  ECC4  F01B         	call	_MTOUCH_Initialize	;wreg free
  1145  002FD2                     
  1146                           ;mcc_generated_files/mtouch/mtouch.c: 102:         mtouch_request_init = 0;
  1147  002FD2  0E00               	movlw	0
  1148  002FD4  6E41               	movwf	_mtouch_request_init^0,c
  1149  002FD6                     l5847:
  1150                           
  1151                           ;mcc_generated_files/mtouch/mtouch.c: 105:     mtouch_time_toScan = 1;
  1152  002FD6  0E01               	movlw	1
  1153  002FD8  6E42               	movwf	_mtouch_time_toScan^0,c
  1154  002FDA                     
  1155                           ;mcc_generated_files/mtouch/mtouch.c: 108:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          9:             if(MTOUCH_Sensor_SampleAll() == 0)
  1156  002FDA  ECE1  F01A         	call	_MTOUCH_Sensor_SampleAll	;wreg free
  1157  002FDE  0900               	iorlw	0
  1158  002FE0  A4D8               	btfss	status,2,c
  1159  002FE2  EFF5  F017         	goto	u4141
  1160  002FE6  EFF7  F017         	goto	u4140
  1161  002FEA                     u4141:
  1162  002FEA  EFFA  F017         	goto	l5857
  1163  002FEE                     u4140:
  1164  002FEE                     
  1165                           ;mcc_generated_files/mtouch/mtouch.c: 110:                 return 0;
  1166  002FEE  0E00               	movlw	0
  1167  002FF0  EF04  F018         	goto	l44
  1168  002FF4                     l5857:
  1169                           
  1170                           ;mcc_generated_files/mtouch/mtouch.c: 111:             MTOUCH_Button_ServiceAll();
  1171  002FF4  EC06  F01B         	call	_MTOUCH_Button_ServiceAll	;wreg free
  1172  002FF8                     
  1173                           ;mcc_generated_files/mtouch/mtouch.c: 112:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  1174  002FF8  EC13  F01C         	call	_MTOUCH_needReburst	;wreg free
  1175  002FFC  6E42               	movwf	_mtouch_time_toScan^0,c
  1176  002FFE                     
  1177                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Sensor_Sampled_ResetAll();
  1178  002FFE  EC41  F017         	call	_MTOUCH_Sensor_Sampled_ResetAll	;wreg free
  1179  003002                     
  1180                           ;mcc_generated_files/mtouch/mtouch.c: 114:             MTOUCH_Tick();
  1181  003002  EC0D  F01C         	call	_MTOUCH_Tick	;wreg free
  1182  003006                     
  1183                           ;mcc_generated_files/mtouch/mtouch.c: 115:             return 1;
  1184  003006  0E01               	movlw	1
  1185  003008                     l44:
  1186  003008  0012               	return		;funcret
  1187  00300A                     __end_of_MTOUCH_Service_Mainloop:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _MTOUCH_needReburst *****************
  1191 ;; Defined at:
  1192 ;;		line 138 in file "mcc_generated_files/mtouch/mtouch.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  needReburst     1    0        _Bool 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      _Bool 
  1199 ;; Registers used:
  1200 ;;		wreg
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1210 ;;Total ram usage:        1 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    6
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_MTOUCH_Service_Mainloop
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text3
  1221  003826                     __ptext3:
  1222                           	callstack 0
  1223  003826                     _MTOUCH_needReburst:
  1224                           	callstack 22
  1225  003826                     
  1226                           ;mcc_generated_files/mtouch/mtouch.c: 142:     return needReburst;
  1227  003826  0E00               	movlw	0
  1228  003828  0012               	return		;funcret
  1229  00382A                     __end_of_MTOUCH_needReburst:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _MTOUCH_Tick *****************
  1233 ;; Defined at:
  1234 ;;		line 128 in file "mcc_generated_files/mtouch/mtouch.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    8
  1255 ;; This function calls:
  1256 ;;		_MTOUCH_Button_Tick
  1257 ;; This function is called by:
  1258 ;;		_MTOUCH_Service_Mainloop
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text4
  1263  00381A                     __ptext4:
  1264                           	callstack 0
  1265  00381A                     _MTOUCH_Tick:
  1266                           	callstack 20
  1267  00381A                     
  1268                           ;mcc_generated_files/mtouch/mtouch.c: 130:     MTOUCH_Button_Tick();
  1269  00381A  EC3F  F01A         	call	_MTOUCH_Button_Tick	;wreg free
  1270  00381E  0012               	return		;funcret
  1271  003820                     __end_of_MTOUCH_Tick:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _MTOUCH_Button_Tick *****************
  1275 ;; Defined at:
  1276 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_button.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  i               1   25[COMRAM] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;Total ram usage:        1 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    7
  1297 ;; This function calls:
  1298 ;;		_Button_Tick_helper
  1299 ;; This function is called by:
  1300 ;;		_MTOUCH_Tick
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text5
  1305  00347E                     __ptext5:
  1306                           	callstack 0
  1307  00347E                     _MTOUCH_Button_Tick:
  1308                           	callstack 20
  1309  00347E                     
  1310                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 292:     for (i = 0; i < 2u; i++)
  1311  00347E  0E00               	movlw	0
  1312  003480  6E1A               	movwf	MTOUCH_Button_Tick@i^0,c
  1313  003482                     l5017:
  1314                           
  1315                           ;mcc_generated_files/mtouch/mtouch_button.c: 293:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 294:         Button_Tick_helper(&mtouch_button[i]);
  1316  003482  501A               	movf	MTOUCH_Button_Tick@i^0,w,c
  1317  003484  0D10               	mullw	16
  1318  003486  0E74               	movlw	low _mtouch_button
  1319  003488  24F3               	addwf	243,w,c
  1320  00348A  6E16               	movwf	Button_Tick_helper@button^0,c
  1321  00348C  0E00               	movlw	high _mtouch_button
  1322  00348E  20F4               	addwfc	prodh,w,c
  1323  003490  6E17               	movwf	(Button_Tick_helper@button+1)^0,c
  1324  003492  EC06  F016         	call	_Button_Tick_helper	;wreg free
  1325  003496                     
  1326                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:     }
  1327  003496  2A1A               	incf	MTOUCH_Button_Tick@i^0,f,c
  1328  003498  0E01               	movlw	1
  1329  00349A  641A               	cpfsgt	MTOUCH_Button_Tick@i^0,c
  1330  00349C  EF52  F01A         	goto	u3151
  1331  0034A0  EF54  F01A         	goto	u3150
  1332  0034A4                     u3151:
  1333  0034A4  EF41  F01A         	goto	l5017
  1334  0034A8                     u3150:
  1335  0034A8  0012               	return		;funcret
  1336  0034AA                     __end_of_MTOUCH_Button_Tick:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _Button_Tick_helper *****************
  1340 ;; Defined at:
  1341 ;;		line 297 in file "mcc_generated_files/mtouch/mtouch_button.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  button          2   21[COMRAM] PTR struct .
  1344 ;;		 -> mtouch_button(32), 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;Total ram usage:        4 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    6
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_MTOUCH_Button_Tick
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text6
  1371  002C0C                     __ptext6:
  1372                           	callstack 0
  1373  002C0C                     _Button_Tick_helper:
  1374                           	callstack 20
  1375  002C0C                     
  1376                           ;mcc_generated_files/mtouch/mtouch_button.c: 297: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 298: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 300:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  1377  002C0C  EE20 F002          	lfsr	2,2
  1378  002C10  5016               	movf	Button_Tick_helper@button^0,w,c
  1379  002C12  26D9               	addwf	fsr2l,f,c
  1380  002C14  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  1381  002C16  22DA               	addwfc	fsr2h,f,c
  1382  002C18  0E02               	movlw	2
  1383  002C1A  18DE               	xorwf	postinc2,w,c
  1384  002C1C  A4D8               	btfss	status,2,c
  1385  002C1E  EF13  F016         	goto	u3001
  1386  002C22  EF15  F016         	goto	u3000
  1387  002C26                     u3001:
  1388  002C26  EF37  F016         	goto	l531
  1389  002C2A                     u3000:
  1390  002C2A                     
  1391                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 302:         (button->counter)++;
  1392  002C2A  EE20 F00A          	lfsr	2,10
  1393  002C2E  5016               	movf	Button_Tick_helper@button^0,w,c
  1394  002C30  26D9               	addwf	fsr2l,f,c
  1395  002C32  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  1396  002C34  22DA               	addwfc	fsr2h,f,c
  1397  002C36  2ADE               	incf	postinc2,f,c
  1398  002C38  0E00               	movlw	0
  1399  002C3A  22DD               	addwfc	postdec2,f,c
  1400                           
  1401                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  1402  002C3C  EE20 F00A          	lfsr	2,10
  1403  002C40  5016               	movf	Button_Tick_helper@button^0,w,c
  1404  002C42  26D9               	addwf	fsr2l,f,c
  1405  002C44  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  1406  002C46  22DA               	addwfc	fsr2h,f,c
  1407  002C48  50DE               	movf	postinc2,w,c
  1408  002C4A  10DE               	iorwf	postinc2,w,c
  1409  002C4C  A4D8               	btfss	status,2,c
  1410  002C4E  EF2B  F016         	goto	u3011
  1411  002C52  EF2D  F016         	goto	u3010
  1412  002C56                     u3011:
  1413  002C56  EF37  F016         	goto	l531
  1414  002C5A                     u3010:
  1415  002C5A                     
  1416                           ;mcc_generated_files/mtouch/mtouch_button.c: 304:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 305:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  1417  002C5A  EE20 F00A          	lfsr	2,10
  1418  002C5E  5016               	movf	Button_Tick_helper@button^0,w,c
  1419  002C60  26D9               	addwf	fsr2l,f,c
  1420  002C62  5017               	movf	(Button_Tick_helper@button+1)^0,w,c
  1421  002C64  22DA               	addwfc	fsr2h,f,c
  1422  002C66  0EFF               	movlw	255
  1423  002C68  6EDE               	movwf	postinc2,c
  1424  002C6A  0EFF               	movlw	255
  1425  002C6C  6EDD               	movwf	postdec2,c
  1426  002C6E                     l531:
  1427  002C6E  0012               	return		;funcret
  1428  002C70                     __end_of_Button_Tick_helper:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  1432 ;; Defined at:
  1433 ;;		line 307 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      _Bool 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    9
  1454 ;; This function calls:
  1455 ;;		_MTOUCH_Sensor_isSamplingComplete
  1456 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  1457 ;;		_Sensor_FrequencyHopping
  1458 ;; This function is called by:
  1459 ;;		_MTOUCH_Service_Mainloop
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text7
  1464  0035C2                     __ptext7:
  1465                           	callstack 0
  1466  0035C2                     _MTOUCH_Sensor_SampleAll:
  1467                           	callstack 19
  1468  0035C2                     
  1469                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 309:     if(MTOUCH_Sensor_isSamplingComplet
      +                          e() == 0)
  1470  0035C2  EC38  F016         	call	_MTOUCH_Sensor_isSamplingComplete	;wreg free
  1471  0035C6  0900               	iorlw	0
  1472  0035C8  A4D8               	btfss	status,2,c
  1473  0035CA  EFE9  F01A         	goto	u3401
  1474  0035CE  EFEB  F01A         	goto	u3400
  1475  0035D2                     u3401:
  1476  0035D2  EFEE  F01A         	goto	l5175
  1477  0035D6                     u3400:
  1478  0035D6                     
  1479                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 310:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 311:         return 0;
  1480  0035D6  0E00               	movlw	0
  1481  0035D8  EFF3  F01A         	goto	l207
  1482  0035DC                     l5175:
  1483                           
  1484                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 315:     Sensor_FrequencyHopping();
  1485  0035DC  EC00  F01C         	call	_Sensor_FrequencyHopping	;wreg free
  1486  0035E0                     
  1487                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 316:     MTOUCH_Sensor_postAcquisitionProce
      +                          ss();
  1488  0035E0  ECEF  F016         	call	_MTOUCH_Sensor_postAcquisitionProcess	;wreg free
  1489  0035E4                     
  1490                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 318:     return 1;
  1491  0035E4  0E01               	movlw	1
  1492  0035E6                     l207:
  1493  0035E6  0012               	return		;funcret
  1494  0035E8                     __end_of_MTOUCH_Sensor_SampleAll:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _Sensor_FrequencyHopping *****************
  1498 ;; Defined at:
  1499 ;;		line 647 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    8
  1520 ;; This function calls:
  1521 ;;		_Sensor_FrequencyHopping_Autotune_Process
  1522 ;;		_Sensor_setSamplePeriod
  1523 ;; This function is called by:
  1524 ;;		_MTOUCH_Sensor_SampleAll
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text8
  1529  003800                     __ptext8:
  1530                           	callstack 0
  1531  003800                     _Sensor_FrequencyHopping:
  1532                           	callstack 19
  1533  003800                     
  1534                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 650:     Sensor_FrequencyHopping_Autotune_P
      +                          rocess();
  1535  003800  EC28  F00B         	call	_Sensor_FrequencyHopping_Autotune_Process	;wreg free
  1536  003804                     
  1537                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 652:     Sensor_setSamplePeriod();
  1538  003804  EC55  F01A         	call	_Sensor_setSamplePeriod	;wreg free
  1539  003808  0012               	return		;funcret
  1540  00380A                     __end_of_Sensor_FrequencyHopping:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _Sensor_setSamplePeriod *****************
  1544 ;; Defined at:
  1545 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    6
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_Sensor_FrequencyHopping
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text9
  1574  0034AA                     __ptext9:
  1575                           	callstack 0
  1576  0034AA                     _Sensor_setSamplePeriod:
  1577                           	callstack 20
  1578  0034AA                     
  1579                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 560:     if(++freq_index >= sizeof(freq_hop
      +                          ) )
  1580  0034AA  2A3C               	incf	_freq_index^0,f,c
  1581  0034AC  0E02               	movlw	2
  1582  0034AE  643C               	cpfsgt	_freq_index^0,c
  1583  0034B0  EF5C  F01A         	goto	u2681
  1584  0034B4  EF5E  F01A         	goto	u2680
  1585  0034B8                     u2681:
  1586  0034B8  EF60  F01A         	goto	l4771
  1587  0034BC                     u2680:
  1588  0034BC                     
  1589                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:         freq_index = 0;
  1590  0034BC  0E00               	movlw	0
  1591  0034BE  6E3C               	movwf	_freq_index^0,c
  1592  0034C0                     l4771:
  1593                           
  1594                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 563:     sample_delay = freq_hop[freq_index
      +                          ];
  1595  0034C0  0EE6               	movlw	low _freq_hop
  1596  0034C2  243C               	addwf	_freq_index^0,w,c
  1597  0034C4  6ED9               	movwf	fsr2l,c
  1598  0034C6  6ADA               	clrf	fsr2h,c
  1599  0034C8  0E00               	movlw	high _freq_hop
  1600  0034CA  22DA               	addwfc	fsr2h,f,c
  1601  0034CC  50DF               	movf	indf2,w,c
  1602  0034CE  6E3B               	movwf	_sample_delay^0,c
  1603  0034D0  0012               	return		;funcret
  1604  0034D2                     __end_of_Sensor_setSamplePeriod:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _Sensor_FrequencyHopping_Autotune_Process *****************
  1608 ;; Defined at:
  1609 ;;		line 661 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  maxVariance     2   36[COMRAM] unsigned short 
  1614 ;;  variance        2   34[COMRAM] unsigned short 
  1615 ;;  frequencyInd    1   40[COMRAM] unsigned char 
  1616 ;;  selectedFreq    1   39[COMRAM] unsigned char 
  1617 ;;  sensor          1   38[COMRAM] enum E12860
  1618 ;;  newfrequency    1   33[COMRAM] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;Total ram usage:       16 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    7
  1635 ;; This function calls:
  1636 ;;		_abs
  1637 ;; This function is called by:
  1638 ;;		_Sensor_FrequencyHopping
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text10
  1643  001650                     __ptext10:
  1644                           	callstack 0
  1645  001650                     _Sensor_FrequencyHopping_Autotune_Process:
  1646                           	callstack 19
  1647  001650                     
  1648                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 663:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 664:     uint8_t frequencyIndex;;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 665:     uint8_t newfrequencyFound,selectedFrequency;;mc
      +                          c_generated_files/mtouch/mtouch_sensor.c: 666:     uint16_t variance,maxVariance;;mcc_ge
      +                          nerated_files/mtouch/mtouch_sensor.c: 669:     static uint8_t varianceOverLimitCounter[3
      +                          ] = {0,0,0};;mcc_generated_files/mtouch/mtouch_sensor.c: 671:     maxVariance = 0;
  1649  001650  0E00               	movlw	0
  1650  001652  6E26               	movwf	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,c
  1651  001654  0E00               	movlw	0
  1652  001656  6E25               	movwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,c
  1653                           
  1654                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 673:     for(sensor = 0; sensor < 2u; senso
      +                          r++)
  1655  001658  0E00               	movlw	0
  1656  00165A  6E27               	movwf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,c
  1657  00165C                     l4779:
  1658                           
  1659                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 674:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 675:         variance = (mtouch_sensor_packetsample_t)abs(packet_sample[sens
      +                          or] - sensor_medianBuffer[sensor][freq_index]);
  1660  00165C  503C               	movf	_freq_index^0,w,c
  1661  00165E  0D02               	mullw	2
  1662  001660  CFF3 F01A          	movff	prodl,??_Sensor_FrequencyHopping_Autotune_Process
  1663  001664  CFF4 F01B          	movff	prodh,??_Sensor_FrequencyHopping_Autotune_Process+1
  1664  001668  5027               	movf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,w,c
  1665  00166A  0D06               	mullw	6
  1666  00166C  0E60               	movlw	low _sensor_medianBuffer
  1667  00166E  6E1C               	movwf	(??_Sensor_FrequencyHopping_Autotune_Process+2)^0,c
  1668  001670  0E00               	movlw	high _sensor_medianBuffer
  1669  001672  6E1D               	movwf	(??_Sensor_FrequencyHopping_Autotune_Process+3)^0,c
  1670  001674  50F3               	movf	243,w,c
  1671  001676  261C               	addwf	(??_Sensor_FrequencyHopping_Autotune_Process+2)^0,f,c
  1672  001678  50F4               	movf	244,w,c
  1673  00167A  221D               	addwfc	(??_Sensor_FrequencyHopping_Autotune_Process+3)^0,f,c
  1674  00167C  501A               	movf	??_Sensor_FrequencyHopping_Autotune_Process^0,w,c
  1675  00167E  241C               	addwf	(??_Sensor_FrequencyHopping_Autotune_Process+2)^0,w,c
  1676  001680  6ED9               	movwf	fsr2l,c
  1677  001682  501B               	movf	(??_Sensor_FrequencyHopping_Autotune_Process+1)^0,w,c
  1678  001684  201D               	addwfc	(??_Sensor_FrequencyHopping_Autotune_Process+3)^0,w,c
  1679  001686  6EDA               	movwf	fsr2h,c
  1680  001688  CFDE F01E          	movff	postinc2,??_Sensor_FrequencyHopping_Autotune_Process+4
  1681  00168C  CFDD F01F          	movff	postdec2,??_Sensor_FrequencyHopping_Autotune_Process+5
  1682  001690  5027               	movf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,w,c
  1683  001692  0D02               	mullw	2
  1684  001694  0E35               	movlw	low _packet_sample
  1685  001696  24F3               	addwf	243,w,c
  1686  001698  6ED9               	movwf	fsr2l,c
  1687  00169A  0E00               	movlw	high _packet_sample
  1688  00169C  20F4               	addwfc	prodh,w,c
  1689  00169E  6EDA               	movwf	fsr2h,c
  1690  0016A0  CFDE F020          	movff	postinc2,??_Sensor_FrequencyHopping_Autotune_Process+6
  1691  0016A4  CFDD F021          	movff	postdec2,??_Sensor_FrequencyHopping_Autotune_Process+7
  1692  0016A8  501E               	movf	(??_Sensor_FrequencyHopping_Autotune_Process+4)^0,w,c
  1693  0016AA  5C20               	subwf	(??_Sensor_FrequencyHopping_Autotune_Process+6)^0,w,c
  1694  0016AC  6E16               	movwf	abs@a^0,c
  1695  0016AE  501F               	movf	(??_Sensor_FrequencyHopping_Autotune_Process+5)^0,w,c
  1696  0016B0  5821               	subwfb	(??_Sensor_FrequencyHopping_Autotune_Process+7)^0,w,c
  1697  0016B2  6E17               	movwf	(abs@a+1)^0,c
  1698  0016B4  EC8D  F018         	call	_abs	;wreg free
  1699  0016B8  C016  F023         	movff	?_abs,Sensor_FrequencyHopping_Autotune_Process@variance
  1700  0016BC  C017  F024         	movff	?_abs+1,Sensor_FrequencyHopping_Autotune_Process@variance+1
  1701  0016C0                     
  1702                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 676:         if(variance > maxVariance)
  1703  0016C0  5023               	movf	Sensor_FrequencyHopping_Autotune_Process@variance^0,w,c
  1704  0016C2  5C25               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,w,c
  1705  0016C4  5024               	movf	(Sensor_FrequencyHopping_Autotune_Process@variance+1)^0,w,c
  1706  0016C6  5826               	subwfb	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,w,c
  1707  0016C8  B0D8               	btfsc	status,0,c
  1708  0016CA  EF69  F00B         	goto	u2691
  1709  0016CE  EF6B  F00B         	goto	u2690
  1710  0016D2                     u2691:
  1711  0016D2  EF6F  F00B         	goto	l4785
  1712  0016D6                     u2690:
  1713  0016D6                     
  1714                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 677:             maxVariance = variance;
  1715  0016D6  C023  F025         	movff	Sensor_FrequencyHopping_Autotune_Process@variance,Sensor_FrequencyHopping_Autotun
      +                          e_Process@maxVariance
  1716  0016DA  C024  F026         	movff	Sensor_FrequencyHopping_Autotune_Process@variance+1,Sensor_FrequencyHopping_Autot
      +                          une_Process@maxVariance+1
  1717  0016DE                     l4785:
  1718                           
  1719                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 678:     }
  1720  0016DE  2A27               	incf	Sensor_FrequencyHopping_Autotune_Process@sensor^0,f,c
  1721  0016E0  0E01               	movlw	1
  1722  0016E2  6427               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@sensor^0,c
  1723  0016E4  EF76  F00B         	goto	u2701
  1724  0016E8  EF78  F00B         	goto	u2700
  1725  0016EC                     u2701:
  1726  0016EC  EF2E  F00B         	goto	l4779
  1727  0016F0                     u2700:
  1728  0016F0                     
  1729                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 680:     if(maxVariance > (mtouch_sensor_pa
      +                          cketsample_t)100)
  1730  0016F0  5026               	movf	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,w,c
  1731  0016F2  E109               	bnz	u2710
  1732  0016F4  0E65               	movlw	101
  1733  0016F6  5C25               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,w,c
  1734  0016F8  A0D8               	btfss	status,0,c
  1735  0016FA  EF81  F00B         	goto	u2711
  1736  0016FE  EF83  F00B         	goto	u2710
  1737  001702                     u2711:
  1738  001702  EFF7  F00B         	goto	l4835
  1739  001706                     u2710:
  1740  001706                     
  1741                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 681:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 682:         if(++varianceOverLimitCounter[freq_index] >= (uint8_t)6)
  1742  001706  0E6C               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1743  001708  243C               	addwf	_freq_index^0,w,c
  1744  00170A  6ED9               	movwf	fsr2l,c
  1745  00170C  6ADA               	clrf	fsr2h,c
  1746  00170E  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1747  001710  22DA               	addwfc	fsr2h,f,c
  1748  001712  2ADF               	incf	indf2,f,c
  1749  001714  0E05               	movlw	5
  1750  001716  64DF               	cpfsgt	indf2,c
  1751  001718  EF90  F00B         	goto	u2721
  1752  00171C  EF92  F00B         	goto	u2720
  1753  001720                     u2721:
  1754  001720  EF17  F00C         	goto	l332
  1755  001724                     u2720:
  1756  001724                     
  1757                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 685:             selectedFrequency = freq_h
      +                          op[freq_index];
  1758  001724  0EE6               	movlw	low _freq_hop
  1759  001726  243C               	addwf	_freq_index^0,w,c
  1760  001728  6ED9               	movwf	fsr2l,c
  1761  00172A  6ADA               	clrf	fsr2h,c
  1762  00172C  0E00               	movlw	high _freq_hop
  1763  00172E  22DA               	addwfc	fsr2h,f,c
  1764  001730  50DF               	movf	indf2,w,c
  1765  001732  6E28               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  1766  001734                     l4797:
  1767                           
  1768                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 687:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 688:                 if(selectedFrequency > ((uint8_t)((mtouch_senso
      +                          r_time_t)0 << (uint8_t)3) + ((mtouch_sensor_time_t)1 << (uint8_t)3)))
  1769  001734  0E08               	movlw	8
  1770  001736  6428               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  1771  001738  EFA0  F00B         	goto	u2731
  1772  00173C  EFA2  F00B         	goto	u2730
  1773  001740                     u2731:
  1774  001740  EFA7  F00B         	goto	l4801
  1775  001744                     u2730:
  1776  001744                     
  1777                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 689:                     selectedFrequency 
      +                          = selectedFrequency - ((mtouch_sensor_time_t)1 << (uint8_t)3);
  1778  001744  5028               	movf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,w,c
  1779  001746  0FF8               	addlw	248
  1780  001748  6E28               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  1781  00174A  EFA9  F00B         	goto	l318
  1782  00174E                     l4801:
  1783                           
  1784                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 691:                     selectedFrequency 
      +                          = (uint8_t)((mtouch_sensor_time_t)15 << (uint8_t)3);
  1785  00174E  0E78               	movlw	120
  1786  001750  6E28               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,c
  1787  001752                     l318:
  1788                           
  1789                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 693:                 newfrequencyFound = 1;
  1790  001752  0E01               	movlw	1
  1791  001754  6E22               	movwf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound^0,c
  1792                           
  1793                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 695:                 for(frequencyIndex = 0
      +                          ;frequencyIndex < sizeof(freq_hop);frequencyIndex++)
  1794  001756  0E00               	movlw	0
  1795  001758  6E29               	movwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  1796  00175A                     l4807:
  1797                           
  1798                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 696:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 697:                     if(frequencyIndex == freq_index)
  1799  00175A  503C               	movf	_freq_index^0,w,c
  1800  00175C  1829               	xorwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,w,c
  1801  00175E  A4D8               	btfss	status,2,c
  1802  001760  EFB4  F00B         	goto	u2741
  1803  001764  EFB6  F00B         	goto	u2740
  1804  001768                     u2741:
  1805  001768  EFB8  F00B         	goto	l4811
  1806  00176C                     u2740:
  1807  00176C  EFC9  F00B         	goto	l4815
  1808  001770                     l4811:
  1809  001770  0EE6               	movlw	low _freq_hop
  1810  001772  2429               	addwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,w,c
  1811  001774  6ED9               	movwf	fsr2l,c
  1812  001776  6ADA               	clrf	fsr2h,c
  1813  001778  0E00               	movlw	high _freq_hop
  1814  00177A  22DA               	addwfc	fsr2h,f,c
  1815  00177C  5028               	movf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency^0,w,c
  1816  00177E  18DE               	xorwf	postinc2,w,c
  1817  001780  A4D8               	btfss	status,2,c
  1818  001782  EFC5  F00B         	goto	u2751
  1819  001786  EFC7  F00B         	goto	u2750
  1820  00178A                     u2751:
  1821  00178A  EFC9  F00B         	goto	l4815
  1822  00178E                     u2750:
  1823  00178E                     
  1824                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 702:                     {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 703:                         newfrequencyFound = 0;
  1825  00178E  0E00               	movlw	0
  1826  001790  6E22               	movwf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound^0,c
  1827  001792                     l4815:
  1828                           
  1829                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 709:                 }
  1830  001792  2A29               	incf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,f,c
  1831  001794  0E02               	movlw	2
  1832  001796  6429               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  1833  001798  EFD0  F00B         	goto	u2761
  1834  00179C  EFD2  F00B         	goto	u2760
  1835  0017A0                     u2761:
  1836  0017A0  EFAD  F00B         	goto	l4807
  1837  0017A4                     u2760:
  1838  0017A4                     
  1839                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 711:             }while(!newfrequencyFound)
      +                          ;
  1840  0017A4  5022               	movf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound^0,w,c
  1841  0017A6  B4D8               	btfsc	status,2,c
  1842  0017A8  EFD8  F00B         	goto	u2771
  1843  0017AC  EFDA  F00B         	goto	u2770
  1844  0017B0                     u2771:
  1845  0017B0  EF9A  F00B         	goto	l4797
  1846  0017B4                     u2770:
  1847  0017B4                     
  1848                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 713:             freq_hop[freq_index] = sel
      +                          ectedFrequency;
  1849  0017B4  0EE6               	movlw	low _freq_hop
  1850  0017B6  243C               	addwf	_freq_index^0,w,c
  1851  0017B8  6ED9               	movwf	fsr2l,c
  1852  0017BA  6ADA               	clrf	fsr2h,c
  1853  0017BC  0E00               	movlw	high _freq_hop
  1854  0017BE  22DA               	addwfc	fsr2h,f,c
  1855  0017C0  C028  FFDF         	movff	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency,indf2
  1856  0017C4                     
  1857                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 715:             for(frequencyIndex = 0;fre
      +                          quencyIndex < sizeof(freq_hop);frequencyIndex++)
  1858  0017C4  0E00               	movlw	0
  1859  0017C6  6E29               	movwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  1860  0017C8                     l4829:
  1861                           
  1862                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 716:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 717:                 varianceOverLimitCounter[frequencyIndex] = 0;
  1863  0017C8  0E6C               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1864  0017CA  2429               	addwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,w,c
  1865  0017CC  6ED9               	movwf	fsr2l,c
  1866  0017CE  6ADA               	clrf	fsr2h,c
  1867  0017D0  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1868  0017D2  22DA               	addwfc	fsr2h,f,c
  1869  0017D4  0E00               	movlw	0
  1870  0017D6  6EDF               	movwf	indf2,c
  1871  0017D8                     
  1872                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 718:             }
  1873  0017D8  2A29               	incf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,f,c
  1874  0017DA  0E02               	movlw	2
  1875  0017DC  6429               	cpfsgt	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex^0,c
  1876  0017DE  EFF3  F00B         	goto	u2781
  1877  0017E2  EFF5  F00B         	goto	u2780
  1878  0017E6                     u2781:
  1879  0017E6  EFE4  F00B         	goto	l4829
  1880  0017EA                     u2780:
  1881  0017EA  EF17  F00C         	goto	l332
  1882  0017EE                     l4835:
  1883  0017EE  5026               	movf	(Sensor_FrequencyHopping_Autotune_Process@maxVariance+1)^0,w,c
  1884  0017F0  E107               	bnz	u2791
  1885  0017F2  0E32               	movlw	50
  1886  0017F4  5C25               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance^0,w,c
  1887  0017F6  B0D8               	btfsc	status,0,c
  1888  0017F8  EF00  F00C         	goto	u2791
  1889  0017FC  EF02  F00C         	goto	u2790
  1890  001800                     u2791:
  1891  001800  EF17  F00C         	goto	l332
  1892  001804                     u2790:
  1893  001804                     
  1894                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 722:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 724:         if(varianceOverLimitCounter[freq_index] > 0)
  1895  001804  0E6C               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1896  001806  243C               	addwf	_freq_index^0,w,c
  1897  001808  6ED9               	movwf	fsr2l,c
  1898  00180A  6ADA               	clrf	fsr2h,c
  1899  00180C  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1900  00180E  22DA               	addwfc	fsr2h,f,c
  1901  001810  50DF               	movf	indf2,w,c
  1902  001812  B4D8               	btfsc	status,2,c
  1903  001814  EF0E  F00C         	goto	u2801
  1904  001818  EF10  F00C         	goto	u2800
  1905  00181C                     u2801:
  1906  00181C  EF17  F00C         	goto	l332
  1907  001820                     u2800:
  1908  001820                     
  1909                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 725:             varianceOverLimitCounter[f
      +                          req_index]--;
  1910  001820  0E6C               	movlw	low Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1911  001822  243C               	addwf	_freq_index^0,w,c
  1912  001824  6ED9               	movwf	fsr2l,c
  1913  001826  6ADA               	clrf	fsr2h,c
  1914  001828  0E00               	movlw	high Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter
  1915  00182A  22DA               	addwfc	fsr2h,f,c
  1916  00182C  06DF               	decf	indf2,f,c
  1917  00182E                     l332:
  1918  00182E  0012               	return		;funcret
  1919  001830                     __end_of_Sensor_FrequencyHopping_Autotune_Process:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _abs *****************
  1923 ;; Defined at:
  1924 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  a               2   21[COMRAM] int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2   21[COMRAM] int 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;Total ram usage:        4 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    6
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_Sensor_FrequencyHopping_Autotune_Process
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text11
  1953  00311A                     __ptext11:
  1954                           	callstack 0
  1955  00311A                     _abs:
  1956                           	callstack 19
  1957  00311A  BE17               	btfsc	(abs@a+1)^0,7,c
  1958  00311C  EF9A  F018         	goto	u2320
  1959  003120  5017               	movf	(abs@a+1)^0,w,c
  1960  003122  E106               	bnz	u2321
  1961  003124  0416               	decf	abs@a^0,w,c
  1962  003126  B0D8               	btfsc	status,0,c
  1963  003128  EF98  F018         	goto	u2321
  1964  00312C  EF9A  F018         	goto	u2320
  1965  003130                     u2321:
  1966  003130  EFA8  F018         	goto	l2206
  1967  003134                     u2320:
  1968  003134  C016  F018         	movff	abs@a,??_abs
  1969  003138  C017  F019         	movff	abs@a+1,??_abs+1
  1970  00313C  1E18               	comf	??_abs^0,f,c
  1971  00313E  1E19               	comf	(??_abs+1)^0,f,c
  1972  003140  4A18               	infsnz	??_abs^0,f,c
  1973  003142  2A19               	incf	(??_abs+1)^0,f,c
  1974  003144  C018  F016         	movff	??_abs,?_abs
  1975  003148  C019  F017         	movff	??_abs+1,?_abs+1
  1976  00314C  EFAC  F018         	goto	l2209
  1977  003150                     l2206:
  1978  003150  C016  F016         	movff	abs@a,?_abs
  1979  003154  C017  F017         	movff	abs@a+1,?_abs+1
  1980  003158                     l2209:
  1981  003158  0012               	return		;funcret
  1982  00315A                     __end_of_abs:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _MTOUCH_Sensor_postAcquisitionProcess *****************
  1986 ;; Defined at:
  1987 ;;		line 475 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  name            1   33[COMRAM] enum E12860
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    8
  2008 ;; This function calls:
  2009 ;;		_Sensor_DefaultCallback
  2010 ;;		_Sensor_RawSample_Update
  2011 ;; This function is called by:
  2012 ;;		_MTOUCH_Sensor_SampleAll
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text12
  2017  002DDE                     __ptext12:
  2018                           	callstack 0
  2019  002DDE                     _MTOUCH_Sensor_postAcquisitionProcess:
  2020                           	callstack 19
  2021  002DDE                     
  2022                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 477:     enum mtouch_sensor_names name;;mcc
      +                          _generated_files/mtouch/mtouch_sensor.c: 479:     for (name = 0; name < 2u; name++)
  2023  002DDE  0E00               	movlw	0
  2024  002DE0  6E22               	movwf	MTOUCH_Sensor_postAcquisitionProcess@name^0,c
  2025  002DE2                     l5059:
  2026                           
  2027                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 480:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 481:         if(mtouch_sensor[name].sampled)
  2028  002DE2  5022               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  2029  002DE4  0D09               	mullw	9
  2030  002DE6  0E9C               	movlw	low (_mtouch_sensor+8)
  2031  002DE8  24F3               	addwf	243,w,c
  2032  002DEA  6ED9               	movwf	fsr2l,c
  2033  002DEC  0E00               	movlw	high (_mtouch_sensor+8)
  2034  002DEE  20F4               	addwfc	prodh,w,c
  2035  002DF0  6EDA               	movwf	fsr2h,c
  2036  002DF2  0100               	movlb	0	; () banked
  2037  002DF4  A2DF               	btfss	indf2,1,c
  2038  002DF6  EFFF  F016         	goto	u3201
  2039  002DFA  EF01  F017         	goto	u3200
  2040  002DFE                     u3201:
  2041  002DFE  EF0E  F017         	goto	l5065
  2042  002E02                     u3200:
  2043  002E02                     
  2044                           ; BSR set to: 0
  2045                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 482:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 483:             Sensor_RawSample_Update(&mtouch_sensor[name]);
  2046  002E02  5022               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  2047  002E04  0D09               	mullw	9
  2048  002E06  0E94               	movlw	low _mtouch_sensor
  2049  002E08  24F3               	addwf	243,w,c
  2050  002E0A  6E1E               	movwf	Sensor_RawSample_Update@sensor^0,c
  2051  002E0C  0E00               	movlw	high _mtouch_sensor
  2052  002E0E  20F4               	addwfc	prodh,w,c
  2053  002E10  6E1F               	movwf	(Sensor_RawSample_Update@sensor+1)^0,c
  2054  002E12  EC99  F016         	call	_Sensor_RawSample_Update	;wreg free
  2055  002E16                     
  2056                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484:             callback_sampled(name);
  2057  002E16  5022               	movf	MTOUCH_Sensor_postAcquisitionProcess@name^0,w,c
  2058  002E18  EC23  F01C         	call	_Sensor_DefaultCallback
  2059  002E1C                     l5065:
  2060                           
  2061                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 486:     }
  2062  002E1C  2A22               	incf	MTOUCH_Sensor_postAcquisitionProcess@name^0,f,c
  2063  002E1E  0E01               	movlw	1
  2064  002E20  6422               	cpfsgt	MTOUCH_Sensor_postAcquisitionProcess@name^0,c
  2065  002E22  EF15  F017         	goto	u3211
  2066  002E26  EF17  F017         	goto	u3210
  2067  002E2A                     u3211:
  2068  002E2A  EFF1  F016         	goto	l5059
  2069  002E2E                     u3210:
  2070  002E2E  0012               	return		;funcret
  2071  002E30                     __end_of_MTOUCH_Sensor_postAcquisitionProcess:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _Sensor_RawSample_Update *****************
  2075 ;; Defined at:
  2076 ;;		line 589 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  sensor          2   29[COMRAM] PTR struct .
  2079 ;;		 -> mtouch_sensor(18), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  result          2   31[COMRAM] unsigned short 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2095 ;;Total ram usage:        4 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    7
  2098 ;; This function calls:
  2099 ;;		_medianFilter
  2100 ;; This function is called by:
  2101 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text13
  2106  002D32                     __ptext13:
  2107                           	callstack 0
  2108  002D32                     _Sensor_RawSample_Update:
  2109                           	callstack 19
  2110  002D32                     
  2111                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 589: static void Sensor_RawSample_Update(mt
      +                          ouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 590: {;mcc_generated_
      +                          files/mtouch/mtouch_sensor.c: 591:     mtouch_sensor_sample_t result = medianFilter(sens
      +                          or->sensor_name);
  2112  002D32  C01E  FFD9         	movff	Sensor_RawSample_Update@sensor,fsr2l
  2113  002D36  C01F  FFDA         	movff	Sensor_RawSample_Update@sensor+1,fsr2h
  2114  002D3A  50DF               	movf	indf2,w,c
  2115  002D3C  EC2F  F00A         	call	_medianFilter
  2116  002D40  C016  F020         	movff	?_medianFilter,Sensor_RawSample_Update@result
  2117  002D44  C017  F021         	movff	?_medianFilter+1,Sensor_RawSample_Update@result+1
  2118  002D48                     
  2119                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 593:     if (GIE == (uint8_t)1)
  2120  002D48  AEF2               	btfss	4082,7,c	;volatile
  2121  002D4A  EFA9  F016         	goto	u2671
  2122  002D4E  EFAB  F016         	goto	u2670
  2123  002D52                     u2671:
  2124  002D52  EFB9  F016         	goto	l4765
  2125  002D56                     u2670:
  2126  002D56                     
  2127                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 594:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 595:         GIE = (uint8_t)0;
  2128  002D56  9EF2               	bcf	4082,7,c	;volatile
  2129  002D58                     
  2130                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 596:         sensor->rawSample = result;
  2131  002D58  EE20 F006          	lfsr	2,6
  2132  002D5C  501E               	movf	Sensor_RawSample_Update@sensor^0,w,c
  2133  002D5E  26D9               	addwf	fsr2l,f,c
  2134  002D60  501F               	movf	(Sensor_RawSample_Update@sensor+1)^0,w,c
  2135  002D62  22DA               	addwfc	fsr2h,f,c
  2136  002D64  C020  FFDE         	movff	Sensor_RawSample_Update@result,postinc2
  2137  002D68  C021  FFDD         	movff	Sensor_RawSample_Update@result+1,postdec2
  2138  002D6C                     
  2139                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 597:         GIE = (uint8_t)1;
  2140  002D6C  8EF2               	bsf	4082,7,c	;volatile
  2141                           
  2142                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 598:     }
  2143  002D6E  EFC3  F016         	goto	l287
  2144  002D72                     l4765:
  2145                           
  2146                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 600:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 601:         sensor->rawSample = result;
  2147  002D72  EE20 F006          	lfsr	2,6
  2148  002D76  501E               	movf	Sensor_RawSample_Update@sensor^0,w,c
  2149  002D78  26D9               	addwf	fsr2l,f,c
  2150  002D7A  501F               	movf	(Sensor_RawSample_Update@sensor+1)^0,w,c
  2151  002D7C  22DA               	addwfc	fsr2h,f,c
  2152  002D7E  C020  FFDE         	movff	Sensor_RawSample_Update@result,postinc2
  2153  002D82  C021  FFDD         	movff	Sensor_RawSample_Update@result+1,postdec2
  2154  002D86                     l287:
  2155  002D86  0012               	return		;funcret
  2156  002D88                     __end_of_Sensor_RawSample_Update:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _medianFilter *****************
  2160 ;; Defined at:
  2161 ;;		line 606 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  sensor          1    wreg     enum E12860
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  sensor          1   28[COMRAM] enum E12860
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2   21[COMRAM] unsigned short 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;Total ram usage:        8 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    6
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_Sensor_RawSample_Update
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text14
  2190  00145E                     __ptext14:
  2191                           	callstack 0
  2192  00145E                     _medianFilter:
  2193                           	callstack 19
  2194                           
  2195                           ;incstack = 0
  2196                           ;medianFilter@sensor stored from wreg
  2197  00145E  6E1D               	movwf	medianFilter@sensor^0,c
  2198  001460                     
  2199                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 606: static mtouch_sensor_packetsample_t me
      +                          dianFilter(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          607: {;mcc_generated_files/mtouch/mtouch_sensor.c: 608:     static uint8_t bufferIndex[2
      +                          u];;mcc_generated_files/mtouch/mtouch_sensor.c: 610:     sensor_medianBuffer[sensor][buf
      +                          ferIndex[sensor]++] = packet_sample[sensor];
  2200  001460  501D               	movf	medianFilter@sensor^0,w,c
  2201  001462  0D02               	mullw	2
  2202  001464  0E35               	movlw	low _packet_sample
  2203  001466  24F3               	addwf	243,w,c
  2204  001468  6ED9               	movwf	fsr2l,c
  2205  00146A  0E00               	movlw	high _packet_sample
  2206  00146C  20F4               	addwfc	prodh,w,c
  2207  00146E  6EDA               	movwf	fsr2h,c
  2208  001470  0E39               	movlw	low medianFilter@bufferIndex
  2209  001472  241D               	addwf	medianFilter@sensor^0,w,c
  2210  001474  6EE1               	movwf	fsr1l,c
  2211  001476  6AE2               	clrf	fsr1h,c
  2212  001478  0E00               	movlw	high medianFilter@bufferIndex
  2213  00147A  22E2               	addwfc	fsr1h,f,c
  2214  00147C  CFE7 F018          	movff	indf1,??_medianFilter
  2215  001480  0E01               	movlw	1
  2216  001482  26E7               	addwf	indf1,f,c
  2217  001484  5018               	movf	??_medianFilter^0,w,c
  2218  001486  0D02               	mullw	2
  2219  001488  CFF3 F019          	movff	prodl,??_medianFilter+1
  2220  00148C  CFF4 F01A          	movff	prodh,??_medianFilter+2
  2221  001490  501D               	movf	medianFilter@sensor^0,w,c
  2222  001492  0D06               	mullw	6
  2223  001494  0E60               	movlw	low _sensor_medianBuffer
  2224  001496  6E1B               	movwf	(??_medianFilter+3)^0,c
  2225  001498  0E00               	movlw	high _sensor_medianBuffer
  2226  00149A  6E1C               	movwf	(??_medianFilter+4)^0,c
  2227  00149C  50F3               	movf	243,w,c
  2228  00149E  261B               	addwf	(??_medianFilter+3)^0,f,c
  2229  0014A0  50F4               	movf	244,w,c
  2230  0014A2  221C               	addwfc	(??_medianFilter+4)^0,f,c
  2231  0014A4  5019               	movf	(??_medianFilter+1)^0,w,c
  2232  0014A6  241B               	addwf	(??_medianFilter+3)^0,w,c
  2233  0014A8  6EE1               	movwf	fsr1l,c
  2234  0014AA  501A               	movf	(??_medianFilter+2)^0,w,c
  2235  0014AC  201C               	addwfc	(??_medianFilter+4)^0,w,c
  2236  0014AE  6EE2               	movwf	fsr1h,c
  2237  0014B0  CFDE FFE6          	movff	postinc2,postinc1
  2238  0014B4  CFDD FFE5          	movff	postdec2,postdec1
  2239  0014B8                     
  2240                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 612:     if(bufferIndex[sensor]>=3)
  2241  0014B8  0E39               	movlw	low medianFilter@bufferIndex
  2242  0014BA  241D               	addwf	medianFilter@sensor^0,w,c
  2243  0014BC  6ED9               	movwf	fsr2l,c
  2244  0014BE  6ADA               	clrf	fsr2h,c
  2245  0014C0  0E00               	movlw	high medianFilter@bufferIndex
  2246  0014C2  22DA               	addwfc	fsr2h,f,c
  2247  0014C4  0E02               	movlw	2
  2248  0014C6  64DF               	cpfsgt	indf2,c
  2249  0014C8  EF68  F00A         	goto	u2331
  2250  0014CC  EF6A  F00A         	goto	u2330
  2251  0014D0                     u2331:
  2252  0014D0  EF72  F00A         	goto	l4495
  2253  0014D4                     u2330:
  2254  0014D4                     
  2255                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 613:         bufferIndex[sensor] = 0;
  2256  0014D4  0E39               	movlw	low medianFilter@bufferIndex
  2257  0014D6  241D               	addwf	medianFilter@sensor^0,w,c
  2258  0014D8  6ED9               	movwf	fsr2l,c
  2259  0014DA  6ADA               	clrf	fsr2h,c
  2260  0014DC  0E00               	movlw	high medianFilter@bufferIndex
  2261  0014DE  22DA               	addwfc	fsr2h,f,c
  2262  0014E0  0E00               	movlw	0
  2263  0014E2  6EDF               	movwf	indf2,c
  2264  0014E4                     l4495:
  2265                           
  2266                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 615:     if(sensor_medianBuffer[sensor][0]>
      +                          =sensor_medianBuffer[sensor][1])
  2267  0014E4  501D               	movf	medianFilter@sensor^0,w,c
  2268  0014E6  0D06               	mullw	6
  2269  0014E8  0E62               	movlw	low (_sensor_medianBuffer+2)
  2270  0014EA  24F3               	addwf	243,w,c
  2271  0014EC  6ED9               	movwf	fsr2l,c
  2272  0014EE  0E00               	movlw	high (_sensor_medianBuffer+2)
  2273  0014F0  20F4               	addwfc	prodh,w,c
  2274  0014F2  6EDA               	movwf	fsr2h,c
  2275  0014F4  501D               	movf	medianFilter@sensor^0,w,c
  2276  0014F6  0D06               	mullw	6
  2277  0014F8  0E60               	movlw	low _sensor_medianBuffer
  2278  0014FA  24F3               	addwf	243,w,c
  2279  0014FC  6EE1               	movwf	fsr1l,c
  2280  0014FE  0E00               	movlw	high _sensor_medianBuffer
  2281  001500  20F4               	addwfc	prodh,w,c
  2282  001502  6EE2               	movwf	fsr1h,c
  2283  001504  50DE               	movf	postinc2,w,c
  2284  001506  5CE6               	subwf	postinc1,w,c
  2285  001508  50DE               	movf	postinc2,w,c
  2286  00150A  58E6               	subwfb	postinc1,w,c
  2287  00150C  A0D8               	btfss	status,0,c
  2288  00150E  EF8B  F00A         	goto	u2341
  2289  001512  EF8D  F00A         	goto	u2340
  2290  001516                     u2341:
  2291  001516  EFED  F00A         	goto	l4517
  2292  00151A                     u2340:
  2293  00151A                     
  2294                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 616:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 617:         if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[sensor][
      +                          2])
  2295  00151A  501D               	movf	medianFilter@sensor^0,w,c
  2296  00151C  0D06               	mullw	6
  2297  00151E  0E64               	movlw	low (_sensor_medianBuffer+4)
  2298  001520  24F3               	addwf	243,w,c
  2299  001522  6ED9               	movwf	fsr2l,c
  2300  001524  0E00               	movlw	high (_sensor_medianBuffer+4)
  2301  001526  20F4               	addwfc	prodh,w,c
  2302  001528  6EDA               	movwf	fsr2h,c
  2303  00152A  501D               	movf	medianFilter@sensor^0,w,c
  2304  00152C  0D06               	mullw	6
  2305  00152E  0E62               	movlw	low (_sensor_medianBuffer+2)
  2306  001530  24F3               	addwf	243,w,c
  2307  001532  6EE1               	movwf	fsr1l,c
  2308  001534  0E00               	movlw	high (_sensor_medianBuffer+2)
  2309  001536  20F4               	addwfc	prodh,w,c
  2310  001538  6EE2               	movwf	fsr1h,c
  2311  00153A  50DE               	movf	postinc2,w,c
  2312  00153C  5CE6               	subwf	postinc1,w,c
  2313  00153E  50DE               	movf	postinc2,w,c
  2314  001540  58E6               	subwfb	postinc1,w,c
  2315  001542  A0D8               	btfss	status,0,c
  2316  001544  EFA6  F00A         	goto	u2351
  2317  001548  EFA8  F00A         	goto	u2350
  2318  00154C                     u2351:
  2319  00154C  EFB6  F00A         	goto	l4505
  2320  001550                     u2350:
  2321  001550                     l4499:
  2322                           
  2323                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 618:             return sensor_medianBuffer
      +                          [sensor][1];
  2324  001550  501D               	movf	medianFilter@sensor^0,w,c
  2325  001552  0D06               	mullw	6
  2326  001554  0E62               	movlw	low (_sensor_medianBuffer+2)
  2327  001556  24F3               	addwf	243,w,c
  2328  001558  6ED9               	movwf	fsr2l,c
  2329  00155A  0E00               	movlw	high (_sensor_medianBuffer+2)
  2330  00155C  20F4               	addwfc	prodh,w,c
  2331  00155E  6EDA               	movwf	fsr2h,c
  2332  001560  CFDE F016          	movff	postinc2,?_medianFilter
  2333  001564  CFDD F017          	movff	postdec2,?_medianFilter+1
  2334  001568  EF27  F00B         	goto	l295
  2335  00156C                     l4505:
  2336                           
  2337                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 620:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 621:             if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[
      +                          sensor][2])
  2338  00156C  501D               	movf	medianFilter@sensor^0,w,c
  2339  00156E  0D06               	mullw	6
  2340  001570  0E64               	movlw	low (_sensor_medianBuffer+4)
  2341  001572  24F3               	addwf	243,w,c
  2342  001574  6ED9               	movwf	fsr2l,c
  2343  001576  0E00               	movlw	high (_sensor_medianBuffer+4)
  2344  001578  20F4               	addwfc	prodh,w,c
  2345  00157A  6EDA               	movwf	fsr2h,c
  2346  00157C  501D               	movf	medianFilter@sensor^0,w,c
  2347  00157E  0D06               	mullw	6
  2348  001580  0E60               	movlw	low _sensor_medianBuffer
  2349  001582  24F3               	addwf	243,w,c
  2350  001584  6EE1               	movwf	fsr1l,c
  2351  001586  0E00               	movlw	high _sensor_medianBuffer
  2352  001588  20F4               	addwfc	prodh,w,c
  2353  00158A  6EE2               	movwf	fsr1h,c
  2354  00158C  50DE               	movf	postinc2,w,c
  2355  00158E  5CE6               	subwf	postinc1,w,c
  2356  001590  50DE               	movf	postinc2,w,c
  2357  001592  58E6               	subwfb	postinc1,w,c
  2358  001594  A0D8               	btfss	status,0,c
  2359  001596  EFCF  F00A         	goto	u2361
  2360  00159A  EFD1  F00A         	goto	u2360
  2361  00159E                     u2361:
  2362  00159E  EFDF  F00A         	goto	l4513
  2363  0015A2                     u2360:
  2364  0015A2                     l4507:
  2365                           
  2366                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 622:                 return sensor_medianBu
      +                          ffer[sensor][2];
  2367  0015A2  501D               	movf	medianFilter@sensor^0,w,c
  2368  0015A4  0D06               	mullw	6
  2369  0015A6  0E64               	movlw	low (_sensor_medianBuffer+4)
  2370  0015A8  24F3               	addwf	243,w,c
  2371  0015AA  6ED9               	movwf	fsr2l,c
  2372  0015AC  0E00               	movlw	high (_sensor_medianBuffer+4)
  2373  0015AE  20F4               	addwfc	prodh,w,c
  2374  0015B0  6EDA               	movwf	fsr2h,c
  2375  0015B2  CFDE F016          	movff	postinc2,?_medianFilter
  2376  0015B6  CFDD F017          	movff	postdec2,?_medianFilter+1
  2377  0015BA  EF27  F00B         	goto	l295
  2378  0015BE                     l4513:
  2379                           
  2380                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 624:                 return sensor_medianBu
      +                          ffer[sensor][0];
  2381  0015BE  501D               	movf	medianFilter@sensor^0,w,c
  2382  0015C0  0D06               	mullw	6
  2383  0015C2  0E60               	movlw	low _sensor_medianBuffer
  2384  0015C4  24F3               	addwf	243,w,c
  2385  0015C6  6ED9               	movwf	fsr2l,c
  2386  0015C8  0E00               	movlw	high _sensor_medianBuffer
  2387  0015CA  20F4               	addwfc	prodh,w,c
  2388  0015CC  6EDA               	movwf	fsr2h,c
  2389  0015CE  CFDE F016          	movff	postinc2,?_medianFilter
  2390  0015D2  CFDD F017          	movff	postdec2,?_medianFilter+1
  2391  0015D6  EF27  F00B         	goto	l295
  2392  0015DA                     l4517:
  2393                           
  2394                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 629:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 630:         if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[sensor][
      +                          2])
  2395  0015DA  501D               	movf	medianFilter@sensor^0,w,c
  2396  0015DC  0D06               	mullw	6
  2397  0015DE  0E64               	movlw	low (_sensor_medianBuffer+4)
  2398  0015E0  24F3               	addwf	243,w,c
  2399  0015E2  6ED9               	movwf	fsr2l,c
  2400  0015E4  0E00               	movlw	high (_sensor_medianBuffer+4)
  2401  0015E6  20F4               	addwfc	prodh,w,c
  2402  0015E8  6EDA               	movwf	fsr2h,c
  2403  0015EA  501D               	movf	medianFilter@sensor^0,w,c
  2404  0015EC  0D06               	mullw	6
  2405  0015EE  0E60               	movlw	low _sensor_medianBuffer
  2406  0015F0  24F3               	addwf	243,w,c
  2407  0015F2  6EE1               	movwf	fsr1l,c
  2408  0015F4  0E00               	movlw	high _sensor_medianBuffer
  2409  0015F6  20F4               	addwfc	prodh,w,c
  2410  0015F8  6EE2               	movwf	fsr1h,c
  2411  0015FA  50DE               	movf	postinc2,w,c
  2412  0015FC  5CE6               	subwf	postinc1,w,c
  2413  0015FE  50DE               	movf	postinc2,w,c
  2414  001600  58E6               	subwfb	postinc1,w,c
  2415  001602  A0D8               	btfss	status,0,c
  2416  001604  EF06  F00B         	goto	u2371
  2417  001608  EF08  F00B         	goto	u2370
  2418  00160C                     u2371:
  2419  00160C  EF0A  F00B         	goto	l4525
  2420  001610                     u2370:
  2421  001610  EFDF  F00A         	goto	l4513
  2422  001614                     l4525:
  2423                           
  2424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 633:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 634:             if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[
      +                          sensor][2])
  2425  001614  501D               	movf	medianFilter@sensor^0,w,c
  2426  001616  0D06               	mullw	6
  2427  001618  0E64               	movlw	low (_sensor_medianBuffer+4)
  2428  00161A  24F3               	addwf	243,w,c
  2429  00161C  6ED9               	movwf	fsr2l,c
  2430  00161E  0E00               	movlw	high (_sensor_medianBuffer+4)
  2431  001620  20F4               	addwfc	prodh,w,c
  2432  001622  6EDA               	movwf	fsr2h,c
  2433  001624  501D               	movf	medianFilter@sensor^0,w,c
  2434  001626  0D06               	mullw	6
  2435  001628  0E62               	movlw	low (_sensor_medianBuffer+2)
  2436  00162A  24F3               	addwf	243,w,c
  2437  00162C  6EE1               	movwf	fsr1l,c
  2438  00162E  0E00               	movlw	high (_sensor_medianBuffer+2)
  2439  001630  20F4               	addwfc	prodh,w,c
  2440  001632  6EE2               	movwf	fsr1h,c
  2441  001634  50DE               	movf	postinc2,w,c
  2442  001636  5CE6               	subwf	postinc1,w,c
  2443  001638  50DE               	movf	postinc2,w,c
  2444  00163A  58E6               	subwfb	postinc1,w,c
  2445  00163C  A0D8               	btfss	status,0,c
  2446  00163E  EF23  F00B         	goto	u2381
  2447  001642  EF25  F00B         	goto	u2380
  2448  001646                     u2381:
  2449  001646  EFA8  F00A         	goto	l4499
  2450  00164A                     u2380:
  2451  00164A  EFD1  F00A         	goto	l4507
  2452  00164E                     l295:
  2453  00164E  0012               	return		;funcret
  2454  001650                     __end_of_medianFilter:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _Sensor_DefaultCallback *****************
  2458 ;; Defined at:
  2459 ;;		line 738 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  sensor          1    wreg     enum E12860
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  sensor          1    0[COMRAM] enum E12860
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    6
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text15
  2488  003846                     __ptext15:
  2489                           	callstack 0
  2490  003846                     _Sensor_DefaultCallback:
  2491                           	callstack 20
  2492  003846  0012               	return		;funcret
  2493  003848                     __end_of_Sensor_DefaultCallback:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _MTOUCH_Sensor_isSamplingComplete *****************
  2497 ;; Defined at:
  2498 ;;		line 288 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  sensor          1   31[COMRAM] enum E12860
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      _Bool 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;Total ram usage:        1 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    8
  2519 ;; This function calls:
  2520 ;;		_MTOUCH_Sensor_isEnabled
  2521 ;;		_MTOUCH_Sensor_isSampling
  2522 ;;		_MTOUCH_Sensor_wasSampled
  2523 ;;		_Sensor_scheduleNextScan
  2524 ;; This function is called by:
  2525 ;;		_MTOUCH_Sensor_SampleAll
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text16
  2530  002C70                     __ptext16:
  2531                           	callstack 0
  2532  002C70                     _MTOUCH_Sensor_isSamplingComplete:
  2533                           	callstack 19
  2534  002C70                     
  2535                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 290:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 292:     for (sensor = 0; sensor < 2u; sensor
      +                          ++)
  2536  002C70  0E00               	movlw	0
  2537  002C72  6E20               	movwf	MTOUCH_Sensor_isSamplingComplete@sensor^0,c
  2538  002C74                     l5029:
  2539                           
  2540                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 294:         if(MTOUCH_Sensor_wasSampled(sensor)==0 && MTOUCH_Sensor_isEnabl
      +                          ed(sensor))
  2541  002C74  5020               	movf	MTOUCH_Sensor_isSamplingComplete@sensor^0,w,c
  2542  002C76  ECEC  F018         	call	_MTOUCH_Sensor_wasSampled
  2543  002C7A  0900               	iorlw	0
  2544  002C7C  A4D8               	btfss	status,2,c
  2545  002C7E  EF43  F016         	goto	u3161
  2546  002C82  EF45  F016         	goto	u3160
  2547  002C86                     u3161:
  2548  002C86  EF5F  F016         	goto	l5041
  2549  002C8A                     u3160:
  2550  002C8A  5020               	movf	MTOUCH_Sensor_isSamplingComplete@sensor^0,w,c
  2551  002C8C  ECCD  F018         	call	_MTOUCH_Sensor_isEnabled
  2552  002C90  0900               	iorlw	0
  2553  002C92  B4D8               	btfsc	status,2,c
  2554  002C94  EF4E  F016         	goto	u3171
  2555  002C98  EF50  F016         	goto	u3170
  2556  002C9C                     u3171:
  2557  002C9C  EF5F  F016         	goto	l5041
  2558  002CA0                     u3170:
  2559  002CA0                     
  2560                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 295:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 296:             if(MTOUCH_Sensor_isSampling() == 0)
  2561  002CA0  EC15  F01C         	call	_MTOUCH_Sensor_isSampling	;wreg free
  2562  002CA4  0900               	iorlw	0
  2563  002CA6  A4D8               	btfss	status,2,c
  2564  002CA8  EF58  F016         	goto	u3181
  2565  002CAC  EF5A  F016         	goto	u3180
  2566  002CB0                     u3181:
  2567  002CB0  EF5C  F016         	goto	l5037
  2568  002CB4                     u3180:
  2569  002CB4                     
  2570                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 298:                 Sensor_scheduleNextScan();
  2571  002CB4  EC04  F00D         	call	_Sensor_scheduleNextScan	;wreg free
  2572  002CB8                     l5037:
  2573                           
  2574                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:             return 0;
  2575  002CB8  0E00               	movlw	0
  2576  002CBA  EF69  F016         	goto	l203
  2577  002CBE                     l5041:
  2578                           
  2579                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 302:     }
  2580  002CBE  2A20               	incf	MTOUCH_Sensor_isSamplingComplete@sensor^0,f,c
  2581  002CC0  0E01               	movlw	1
  2582  002CC2  6420               	cpfsgt	MTOUCH_Sensor_isSamplingComplete@sensor^0,c
  2583  002CC4  EF66  F016         	goto	u3191
  2584  002CC8  EF68  F016         	goto	u3190
  2585  002CCC                     u3191:
  2586  002CCC  EF3A  F016         	goto	l5029
  2587  002CD0                     u3190:
  2588  002CD0                     
  2589                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 304:     return 1;
  2590  002CD0  0E01               	movlw	1
  2591  002CD2                     l203:
  2592  002CD2  0012               	return		;funcret
  2593  002CD4                     __end_of_MTOUCH_Sensor_isSamplingComplete:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _Sensor_scheduleNextScan *****************
  2597 ;; Defined at:
  2598 ;;		line 362 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  sensor          2   29[COMRAM] PTR struct .
  2603 ;;		 -> mtouch_sensor(18), 
  2604 ;;  skipScan        1   28[COMRAM] _Bool 
  2605 ;;  state           1   27[COMRAM] _Bool 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;Total ram usage:        6 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    7
  2622 ;; This function calls:
  2623 ;;		_MTOUCH_Sensor_isEnabled
  2624 ;;		_MTOUCH_Sensor_wasSampled
  2625 ;;		_Sensor_SetTrisBit
  2626 ;;		_Sensor_isCalibrated
  2627 ;;		_Sensor_isCalibratingAcqTime
  2628 ;; This function is called by:
  2629 ;;		_MTOUCH_Sensor_isSamplingComplete
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text17
  2634  001A08                     __ptext17:
  2635                           	callstack 0
  2636  001A08                     _Sensor_scheduleNextScan:
  2637                           	callstack 19
  2638  001A08                     
  2639                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 365:     _Bool skipScan = (_Bool)0;
  2640  001A08  0E00               	movlw	0
  2641  001A0A  6E1D               	movwf	Sensor_scheduleNextScan@skipScan^0,c
  2642                           
  2643                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     _Bool state = (_Bool)GIE;
  2644  001A0C  0E00               	movlw	0
  2645  001A0E  BEF2               	btfsc	4082,7,c	;volatile
  2646  001A10  0E01               	movlw	1
  2647  001A12  6E1C               	movwf	Sensor_scheduleNextScan@state^0,c
  2648                           
  2649                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  2650  001A14  EF1E  F00D         	goto	l4709
  2651  001A18                     l4705:
  2652                           
  2653                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 370:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 371:         if(++currentScanSensor == 2u)
  2654  001A18  2A40               	incf	_currentScanSensor^0,f,c
  2655  001A1A  0E02               	movlw	2
  2656  001A1C  1840               	xorwf	_currentScanSensor^0,w,c
  2657  001A1E  A4D8               	btfss	status,2,c
  2658  001A20  EF14  F00D         	goto	u2591
  2659  001A24  EF16  F00D         	goto	u2590
  2660  001A28                     u2591:
  2661  001A28  EF1E  F00D         	goto	l4709
  2662  001A2C                     u2590:
  2663  001A2C                     
  2664                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 372:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 373:             currentScanSensor = 0;
  2665  001A2C  0E00               	movlw	0
  2666  001A2E  6E40               	movwf	_currentScanSensor^0,c
  2667                           
  2668                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:             sampling_flag = 0;
  2669  001A30  0E00               	movlw	0
  2670  001A32  6E3F               	movwf	_sampling_flag^0,c
  2671                           
  2672                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 375:             skipScan = 1;
  2673  001A34  0E01               	movlw	1
  2674  001A36  6E1D               	movwf	Sensor_scheduleNextScan@skipScan^0,c
  2675                           
  2676                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 376:             break;
  2677  001A38  EF34  F00D         	goto	l4713
  2678  001A3C                     l4709:
  2679                           
  2680                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  2681  001A3C  5040               	movf	_currentScanSensor^0,w,c
  2682  001A3E  ECEC  F018         	call	_MTOUCH_Sensor_wasSampled
  2683  001A42  0900               	iorlw	0
  2684  001A44  A4D8               	btfss	status,2,c
  2685  001A46  EF27  F00D         	goto	u2601
  2686  001A4A  EF29  F00D         	goto	u2600
  2687  001A4E                     u2601:
  2688  001A4E  EF0C  F00D         	goto	l4705
  2689  001A52                     u2600:
  2690  001A52  5040               	movf	_currentScanSensor^0,w,c
  2691  001A54  ECCD  F018         	call	_MTOUCH_Sensor_isEnabled
  2692  001A58  0900               	iorlw	0
  2693  001A5A  B4D8               	btfsc	status,2,c
  2694  001A5C  EF32  F00D         	goto	u2611
  2695  001A60  EF34  F00D         	goto	u2610
  2696  001A64                     u2611:
  2697  001A64  EF0C  F00D         	goto	l4705
  2698  001A68                     u2610:
  2699  001A68                     l4713:
  2700                           
  2701                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:     if(skipScan==0)
  2702  001A68  501D               	movf	Sensor_scheduleNextScan@skipScan^0,w,c
  2703  001A6A  A4D8               	btfss	status,2,c
  2704  001A6C  EF3A  F00D         	goto	u2621
  2705  001A70  EF3C  F00D         	goto	u2620
  2706  001A74                     u2621:
  2707  001A74  EFCE  F00D         	goto	l234
  2708  001A78                     u2620:
  2709  001A78                     
  2710                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 383:         sensor = &mtouch_sensor[currentScanSensor];
  2711  001A78  5040               	movf	_currentScanSensor^0,w,c
  2712  001A7A  0D09               	mullw	9
  2713  001A7C  0E94               	movlw	low _mtouch_sensor
  2714  001A7E  24F3               	addwf	243,w,c
  2715  001A80  6E1E               	movwf	Sensor_scheduleNextScan@sensor^0,c
  2716  001A82  0E00               	movlw	high _mtouch_sensor
  2717  001A84  20F4               	addwfc	prodh,w,c
  2718  001A86  6E1F               	movwf	(Sensor_scheduleNextScan@sensor+1)^0,c
  2719  001A88                     
  2720                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:         if(Sensor_isCalibrated(sensor)
      +                          )
  2721  001A88  C01E  F016         	movff	Sensor_scheduleNextScan@sensor,Sensor_isCalibrated@sensor
  2722  001A8C  C01F  F017         	movff	Sensor_scheduleNextScan@sensor+1,Sensor_isCalibrated@sensor+1
  2723  001A90  EC38  F01B         	call	_Sensor_isCalibrated	;wreg free
  2724  001A94  0900               	iorlw	0
  2725  001A96  B4D8               	btfsc	status,2,c
  2726  001A98  EF50  F00D         	goto	u2631
  2727  001A9C  EF52  F00D         	goto	u2630
  2728  001AA0                     u2631:
  2729  001AA0  EF65  F00D         	goto	l4721
  2730  001AA4                     u2630:
  2731  001AA4                     
  2732                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 385:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 386:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
  2733  001AA4  EE20 F003          	lfsr	2,3
  2734  001AA8  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2735  001AAA  26D9               	addwf	fsr2l,f,c
  2736  001AAC  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2737  001AAE  22DA               	addwfc	fsr2h,f,c
  2738  001AB0  50DF               	movf	indf2,w,c
  2739  001AB2  010F               	movlb	15	; () banked
  2740  001AB4  6F57               	movwf	87,b	;volatile
  2741                           
  2742                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 387:             ADPRE = (mtouch_sensor_tim
      +                          e_t)sensor->precharge_time;
  2743  001AB6  EE20 F002          	lfsr	2,2
  2744  001ABA  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2745  001ABC  26D9               	addwf	fsr2l,f,c
  2746  001ABE  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2747  001AC0  22DA               	addwfc	fsr2h,f,c
  2748  001AC2  50DF               	movf	indf2,w,c
  2749  001AC4  6F59               	movwf	89,b	;volatile
  2750                           
  2751                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 388:         }
  2752  001AC6  EF8B  F00D         	goto	l4727
  2753  001ACA                     l4721:
  2754                           
  2755                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 390:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 391:             if(Sensor_isCalibratingAcqTime(sensor))
  2756  001ACA  C01E  F016         	movff	Sensor_scheduleNextScan@sensor,Sensor_isCalibratingAcqTime@sensor
  2757  001ACE  C01F  F017         	movff	Sensor_scheduleNextScan@sensor+1,Sensor_isCalibratingAcqTime@sensor+1
  2758  001AD2  EC28  F01B         	call	_Sensor_isCalibratingAcqTime	;wreg free
  2759  001AD6  0900               	iorlw	0
  2760  001AD8  B4D8               	btfsc	status,2,c
  2761  001ADA  EF71  F00D         	goto	u2641
  2762  001ADE  EF73  F00D         	goto	u2640
  2763  001AE2                     u2641:
  2764  001AE2  EF86  F00D         	goto	l4725
  2765  001AE6                     u2640:
  2766  001AE6                     
  2767                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 392:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 393:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge
      +                          _time;
  2768  001AE6  EE20 F002          	lfsr	2,2
  2769  001AEA  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2770  001AEC  26D9               	addwf	fsr2l,f,c
  2771  001AEE  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2772  001AF0  22DA               	addwfc	fsr2h,f,c
  2773  001AF2  50DF               	movf	indf2,w,c
  2774  001AF4  010F               	movlb	15	; () banked
  2775  001AF6  6F59               	movwf	89,b	;volatile
  2776                           
  2777                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 394:                 ADACQ = (mtouch_sensor
      +                          _time_t)sensor->acquisition_time;
  2778  001AF8  EE20 F003          	lfsr	2,3
  2779  001AFC  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2780  001AFE  26D9               	addwf	fsr2l,f,c
  2781  001B00  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2782  001B02  22DA               	addwfc	fsr2h,f,c
  2783  001B04  50DF               	movf	indf2,w,c
  2784  001B06  6F57               	movwf	87,b	;volatile
  2785                           
  2786                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:             }
  2787  001B08  EF8B  F00D         	goto	l4727
  2788  001B0C                     l4725:
  2789                           
  2790                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 397:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 398:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_
      +                          time_t)24 << (uint8_t)3));
  2791  001B0C  0EC0               	movlw	192
  2792  001B0E  010F               	movlb	15	; () banked
  2793  001B10  6F59               	movwf	89,b	;volatile
  2794                           
  2795                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 399:                 ADACQ = ((mtouch_senso
      +                          r_time_t)((mtouch_sensor_time_t)24 << (uint8_t)3));
  2796  001B12  0EC0               	movlw	192
  2797  001B14  6F57               	movwf	87,b	;volatile
  2798  001B16                     l4727:
  2799                           
  2800                           ; BSR set to: 15
  2801                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 403:         ADPRE +=(uint8_t)sample_delay;
  2802  001B16  503B               	movf	_sample_delay^0,w,c	;volatile
  2803  001B18  2759               	addwf	89,f,b	;volatile
  2804  001B1A                     
  2805                           ; BSR set to: 15
  2806                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:         ADPCH = (uint8_t)sensor->adpch
      +                          ;
  2807  001B1A  EE20 F001          	lfsr	2,1
  2808  001B1E  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2809  001B20  26D9               	addwf	fsr2l,f,c
  2810  001B22  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2811  001B24  22DA               	addwfc	fsr2h,f,c
  2812  001B26  50DF               	movf	indf2,w,c
  2813  001B28  6F5A               	movwf	90,b	;volatile
  2814  001B2A                     
  2815                           ; BSR set to: 15
  2816                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:         ADRPT = (uint8_t)(sensor->over
      +                          sampling>>1);
  2817  001B2A  EE20 F004          	lfsr	2,4
  2818  001B2E  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2819  001B30  26D9               	addwf	fsr2l,f,c
  2820  001B32  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2821  001B34  22DA               	addwfc	fsr2h,f,c
  2822  001B36  50DF               	movf	indf2,w,c
  2823  001B38  6E1A               	movwf	??_Sensor_scheduleNextScan^0,c
  2824  001B3A  90D8               	bcf	status,0,c
  2825  001B3C  301A               	rrcf	??_Sensor_scheduleNextScan^0,w,c
  2826  001B3E  6E61               	movwf	97,c	;volatile
  2827  001B40                     
  2828                           ; BSR set to: 15
  2829                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 406:         ADCAP = (uint8_t)sensor->addca
      +                          p;
  2830  001B40  EE20 F005          	lfsr	2,5
  2831  001B44  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2832  001B46  26D9               	addwf	fsr2l,f,c
  2833  001B48  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2834  001B4A  22DA               	addwfc	fsr2h,f,c
  2835  001B4C  50DF               	movf	indf2,w,c
  2836  001B4E  6F58               	movwf	88,b	;volatile
  2837  001B50                     
  2838                           ; BSR set to: 15
  2839                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 407:         ADCON0bits.ADON = 1;
  2840  001B50  8F5B               	bsf	91,7,b	;volatile
  2841  001B52                     
  2842                           ; BSR set to: 15
  2843                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 408:         sampling_flag= 1;
  2844  001B52  0E01               	movlw	1
  2845  001B54  6E3F               	movwf	_sampling_flag^0,c
  2846  001B56                     
  2847                           ; BSR set to: 15
  2848                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 409:         Sensor_SetTrisBit(currentScanS
      +                          ensor,1);
  2849  001B56  0E01               	movlw	1
  2850  001B58  6E16               	movwf	Sensor_SetTrisBit@TrisBit^0,c
  2851  001B5A  5040               	movf	_currentScanSensor^0,w,c
  2852  001B5C  EC6A  F017         	call	_Sensor_SetTrisBit
  2853  001B60                     
  2854                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 410:         GIE = 0;
  2855  001B60  9EF2               	bcf	4082,7,c	;volatile
  2856  001B62                     
  2857                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 411:         ADCON0bits.GO = 1;
  2858  001B62  010F               	movlb	15	; () banked
  2859  001B64  815B               	bsf	91,0,b	;volatile
  2860  001B66                     
  2861                           ; BSR set to: 15
  2862                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 412:         ADACC = ((mtouch_sensor_packet
      +                          sample_t)(sensor->oversampling)<<9);
  2863  001B66  EE20 F004          	lfsr	2,4
  2864  001B6A  501E               	movf	Sensor_scheduleNextScan@sensor^0,w,c
  2865  001B6C  26D9               	addwf	fsr2l,f,c
  2866  001B6E  501F               	movf	(Sensor_scheduleNextScan@sensor+1)^0,w,c
  2867  001B70  22DA               	addwfc	fsr2h,f,c
  2868  001B72  50DF               	movf	indf2,w,c
  2869  001B74  6E1A               	movwf	??_Sensor_scheduleNextScan^0,c
  2870  001B76  6A1B               	clrf	(??_Sensor_scheduleNextScan+1)^0,c
  2871  001B78  0E09               	movlw	9
  2872  001B7A                     u2655:
  2873  001B7A  90D8               	bcf	status,0,c
  2874  001B7C  361A               	rlcf	??_Sensor_scheduleNextScan^0,f,c
  2875  001B7E  361B               	rlcf	(??_Sensor_scheduleNextScan+1)^0,f,c
  2876  001B80  2EE8               	decfsz	wreg,f,c
  2877  001B82  EFBD  F00D         	goto	u2655
  2878  001B86  C01A  FF6B         	movff	??_Sensor_scheduleNextScan,3947	;volatile
  2879  001B8A  C01B  FF6C         	movff	??_Sensor_scheduleNextScan+1,3948	;volatile
  2880  001B8E                     
  2881                           ; BSR set to: 15
  2882                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 413:         GIE = state;
  2883  001B8E  B01C               	btfsc	Sensor_scheduleNextScan@state^0,0,c
  2884  001B90  D002               	bra	u2665
  2885  001B92  9EF2               	bcf	4082,7,c	;volatile
  2886  001B94  D001               	bra	u2666
  2887  001B96                     u2665:
  2888  001B96  8EF2               	bsf	4082,7,c	;volatile
  2889  001B98                     u2666:
  2890  001B98                     
  2891                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 414:         scanInterrupted = 0;
  2892  001B98  0E00               	movlw	0
  2893  001B9A  6E3E               	movwf	_scanInterrupted^0,c	;volatile
  2894  001B9C                     l234:
  2895  001B9C  0012               	return		;funcret
  2896  001B9E                     __end_of_Sensor_scheduleNextScan:
  2897                           	callstack 0
  2898                           
  2899 ;; *************** function _Sensor_isCalibratingAcqTime *****************
  2900 ;; Defined at:
  2901 ;;		line 855 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  sensor          2   21[COMRAM] PTR struct .
  2904 ;;		 -> mtouch_sensor(18), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      _Bool 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;Total ram usage:        2 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    6
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_Sensor_scheduleNextScan
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text18
  2931  003650                     __ptext18:
  2932                           	callstack 0
  2933  003650                     _Sensor_isCalibratingAcqTime:
  2934                           	callstack 19
  2935  003650                     
  2936                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 855: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_se
      +                          nsor.c: 856: {;mcc_generated_files/mtouch/mtouch_sensor.c: 857:     return (_Bool)sensor
      +                          ->acqTime_cal;
  2937  003650  EE20 F008          	lfsr	2,8
  2938  003654  5016               	movf	Sensor_isCalibratingAcqTime@sensor^0,w,c
  2939  003656  26D9               	addwf	fsr2l,f,c
  2940  003658  5017               	movf	(Sensor_isCalibratingAcqTime@sensor+1)^0,w,c
  2941  00365A  22DA               	addwfc	fsr2h,f,c
  2942  00365C  B8DF               	btfsc	indf2,4,c
  2943  00365E  EF33  F01B         	goto	u2311
  2944  003662  EF36  F01B         	goto	u2310
  2945  003666                     u2311:
  2946  003666  0E01               	movlw	1
  2947  003668  EF37  F01B         	goto	u2316
  2948  00366C                     u2310:
  2949  00366C  0E00               	movlw	0
  2950  00366E                     u2316:
  2951  00366E  0012               	return		;funcret
  2952  003670                     __end_of_Sensor_isCalibratingAcqTime:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _Sensor_isCalibrated *****************
  2956 ;; Defined at:
  2957 ;;		line 837 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  sensor          2   21[COMRAM] PTR struct .
  2960 ;;		 -> mtouch_sensor(18), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      _Bool 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    6
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_Sensor_scheduleNextScan
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text19
  2987  003670                     __ptext19:
  2988                           	callstack 0
  2989  003670                     _Sensor_isCalibrated:
  2990                           	callstack 19
  2991  003670                     
  2992                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 837: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          838: {;mcc_generated_files/mtouch/mtouch_sensor.c: 839:     return (_Bool)sensor->calibr
      +                          ated;
  2993  003670  EE20 F008          	lfsr	2,8
  2994  003674  5016               	movf	Sensor_isCalibrated@sensor^0,w,c
  2995  003676  26D9               	addwf	fsr2l,f,c
  2996  003678  5017               	movf	(Sensor_isCalibrated@sensor+1)^0,w,c
  2997  00367A  22DA               	addwfc	fsr2h,f,c
  2998  00367C  B6DF               	btfsc	indf2,3,c
  2999  00367E  EF43  F01B         	goto	u2301
  3000  003682  EF46  F01B         	goto	u2300
  3001  003686                     u2301:
  3002  003686  0E01               	movlw	1
  3003  003688  EF47  F01B         	goto	u2306
  3004  00368C                     u2300:
  3005  00368C  0E00               	movlw	0
  3006  00368E                     u2306:
  3007  00368E  0012               	return		;funcret
  3008  003690                     __end_of_Sensor_isCalibrated:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _Sensor_SetTrisBit *****************
  3012 ;; Defined at:
  3013 ;;		line 212 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  sensor          1    wreg     enum E12860
  3016 ;;  TrisBit         1   21[COMRAM] unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  sensor          1   24[COMRAM] enum E12860
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    6
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_Sensor_scheduleNextScan
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text20
  3043  002ED4                     __ptext20:
  3044                           	callstack 0
  3045  002ED4                     _Sensor_SetTrisBit:
  3046                           	callstack 19
  3047                           
  3048                           ;incstack = 0
  3049                           ;Sensor_SetTrisBit@sensor stored from wreg
  3050  002ED4  6E19               	movwf	Sensor_SetTrisBit@sensor^0,c
  3051  002ED6                     
  3052                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 212: static void Sensor_SetTrisBit(enum mto
      +                          uch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/mtouch/mtouch_sensor.c: 213
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 214:     switch(sensor)
  3053  002ED6  EF7B  F017         	goto	l4445
  3054  002EDA                     l184:
  3055                           
  3056                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 217:             TRISAbits.TRISA2 = TrisBit
      +                          ;
  3057  002EDA  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  3058  002EDC  D002               	bra	u2245
  3059  002EDE  9487               	bcf	135,2,c	;volatile
  3060  002EE0  D001               	bra	u2246
  3061  002EE2                     u2245:
  3062  002EE2  8487               	bsf	135,2,c	;volatile
  3063  002EE4                     u2246:
  3064                           
  3065                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 218:             break;
  3066  002EE4  EF90  F017         	goto	l188
  3067  002EE8                     l186:
  3068                           
  3069                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 220:             TRISDbits.TRISD7 = TrisBit
      +                          ;
  3070  002EE8  B016               	btfsc	Sensor_SetTrisBit@TrisBit^0,0,c
  3071  002EEA  D002               	bra	u2255
  3072  002EEC  9E8A               	bcf	138,7,c	;volatile
  3073  002EEE  D001               	bra	u2256
  3074  002EF0                     u2255:
  3075  002EF0  8E8A               	bsf	138,7,c	;volatile
  3076  002EF2                     u2256:
  3077                           
  3078                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 221:             break;
  3079  002EF2  EF90  F017         	goto	l188
  3080  002EF6                     l4445:
  3081  002EF6  5019               	movf	Sensor_SetTrisBit@sensor^0,w,c
  3082  002EF8  6E17               	movwf	??_Sensor_SetTrisBit^0,c
  3083  002EFA  6A18               	clrf	(??_Sensor_SetTrisBit+1)^0,c
  3084                           
  3085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3086                           ; Switch size 1, requested type "simple"
  3087                           ; Number of cases is 1, Range of values is 0 to 0
  3088                           ; switch strategies available:
  3089                           ; Name         Instructions Cycles
  3090                           ; simple_byte            4     3 (average)
  3091                           ;	Chosen strategy is simple_byte
  3092  002EFC  5018               	movf	(??_Sensor_SetTrisBit+1)^0,w,c
  3093  002EFE  0A00               	xorlw	0	; case 0
  3094  002F00  B4D8               	btfsc	status,2,c
  3095  002F02  EF85  F017         	goto	l6035
  3096  002F06  EF90  F017         	goto	l188
  3097  002F0A                     l6035:
  3098                           
  3099                           ; Switch size 1, requested type "simple"
  3100                           ; Number of cases is 2, Range of values is 0 to 1
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte            7     4 (average)
  3104                           ;	Chosen strategy is simple_byte
  3105  002F0A  5017               	movf	??_Sensor_SetTrisBit^0,w,c
  3106  002F0C  0A00               	xorlw	0	; case 0
  3107  002F0E  B4D8               	btfsc	status,2,c
  3108  002F10  EF6D  F017         	goto	l184
  3109  002F14  0A01               	xorlw	1	; case 1
  3110  002F16  B4D8               	btfsc	status,2,c
  3111  002F18  EF74  F017         	goto	l186
  3112  002F1C  EF90  F017         	goto	l188
  3113  002F20                     l188:
  3114  002F20  0012               	return		;funcret
  3115  002F22                     __end_of_Sensor_SetTrisBit:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _MTOUCH_Sensor_isEnabled *****************
  3119 ;; Defined at:
  3120 ;;		line 765 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  sensor          1    wreg     enum E12860
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  sensor          1   21[COMRAM] enum E12860
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      _Bool 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    6
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_MTOUCH_Sensor_isSamplingComplete
  3145 ;;		_Sensor_scheduleNextScan
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text21
  3150  00319A                     __ptext21:
  3151                           	callstack 0
  3152  00319A                     _MTOUCH_Sensor_isEnabled:
  3153                           	callstack 19
  3154                           
  3155                           ;incstack = 0
  3156                           ;MTOUCH_Sensor_isEnabled@sensor stored from wreg
  3157  00319A  6E16               	movwf	MTOUCH_Sensor_isEnabled@sensor^0,c
  3158  00319C                     
  3159                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 765: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 766: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 767:     if(sensor < 2u)
  3160  00319C  0E02               	movlw	2
  3161  00319E  6016               	cpfslt	MTOUCH_Sensor_isEnabled@sensor^0,c
  3162  0031A0  EFD4  F018         	goto	u2281
  3163  0031A4  EFD6  F018         	goto	u2280
  3164  0031A8                     u2281:
  3165  0031A8  EFEA  F018         	goto	l4473
  3166  0031AC                     u2280:
  3167  0031AC                     
  3168                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 768:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
  3169  0031AC  5016               	movf	MTOUCH_Sensor_isEnabled@sensor^0,w,c
  3170  0031AE  0D09               	mullw	9
  3171  0031B0  0E9C               	movlw	low (_mtouch_sensor+8)
  3172  0031B2  24F3               	addwf	243,w,c
  3173  0031B4  6ED9               	movwf	fsr2l,c
  3174  0031B6  0E00               	movlw	high (_mtouch_sensor+8)
  3175  0031B8  20F4               	addwfc	prodh,w,c
  3176  0031BA  6EDA               	movwf	fsr2h,c
  3177  0031BC  0100               	movlb	0	; () banked
  3178  0031BE  B0DF               	btfsc	indf2,0,c
  3179  0031C0  EFE4  F018         	goto	u2291
  3180  0031C4  EFE7  F018         	goto	u2290
  3181  0031C8                     u2291:
  3182  0031C8  0E01               	movlw	1
  3183  0031CA  EFE8  F018         	goto	u2296
  3184  0031CE                     u2290:
  3185  0031CE  0E00               	movlw	0
  3186  0031D0                     u2296:
  3187  0031D0  EFEB  F018         	goto	l350
  3188  0031D4                     l4473:
  3189                           
  3190                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 770:         return 0;
  3191  0031D4  0E00               	movlw	0
  3192  0031D6                     l350:
  3193  0031D6  0012               	return		;funcret
  3194  0031D8                     __end_of_MTOUCH_Sensor_isEnabled:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _MTOUCH_Sensor_isSampling *****************
  3198 ;; Defined at:
  3199 ;;		line 895 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      _Bool 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    6
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_MTOUCH_Sensor_isSamplingComplete
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text22
  3228  00382A                     __ptext22:
  3229                           	callstack 0
  3230  00382A                     _MTOUCH_Sensor_isSampling:
  3231                           	callstack 20
  3232  00382A                     
  3233                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 897:     return sampling_flag;
  3234  00382A  503F               	movf	_sampling_flag^0,w,c
  3235  00382C  0012               	return		;funcret
  3236  00382E                     __end_of_MTOUCH_Sensor_isSampling:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  3240 ;; Defined at:
  3241 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  button          1   51[BANK0 ] enum E12923
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;Total ram usage:        1 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:   14
  3262 ;; This function calls:
  3263 ;;		_Button_Service
  3264 ;; This function is called by:
  3265 ;;		_MTOUCH_Service_Mainloop
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text23
  3270  00360C                     __ptext23:
  3271                           	callstack 0
  3272  00360C                     _MTOUCH_Button_ServiceAll:
  3273                           	callstack 14
  3274  00360C                     
  3275                           ;mcc_generated_files/mtouch/mtouch_button.c: 183:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 186:     for (button = 0; button < 2u; button
      +                          ++)
  3276  00360C  0E00               	movlw	0
  3277  00360E  0100               	movlb	0	; () banked
  3278  003610  6FD9               	movwf	MTOUCH_Button_ServiceAll@button& (0+255),b
  3279  003612                     l5835:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;mcc_generated_files/mtouch/mtouch_button.c: 187:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 188:         Button_Service(button);
  3283  003612  51D9               	movf	MTOUCH_Button_ServiceAll@button& (0+255),w,b
  3284  003614  EC26  F012         	call	_Button_Service
  3285  003618                     
  3286                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     }
  3287  003618  0100               	movlb	0	; () banked
  3288  00361A  2BD9               	incf	MTOUCH_Button_ServiceAll@button& (0+255),f,b
  3289  00361C                     
  3290                           ; BSR set to: 0
  3291  00361C  0E01               	movlw	1
  3292  00361E  65D9               	cpfsgt	MTOUCH_Button_ServiceAll@button& (0+255),b
  3293  003620  EF14  F01B         	goto	u4121
  3294  003624  EF16  F01B         	goto	u4120
  3295  003628                     u4121:
  3296  003628  EF09  F01B         	goto	l5835
  3297  00362C                     u4120:
  3298  00362C                     
  3299                           ; BSR set to: 0
  3300  00362C  0012               	return		;funcret
  3301  00362E                     __end_of_MTOUCH_Button_ServiceAll:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _Button_Service *****************
  3305 ;; Defined at:
  3306 ;;		line 192 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  name            1    wreg     enum E12923
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  name            1   48[BANK0 ] enum E12923
  3311 ;;  button          2   49[BANK0 ] PTR struct .
  3312 ;;		 -> mtouch_button(32), 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;Total ram usage:        4 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:   13
  3329 ;; This function calls:
  3330 ;;		_Button_Deviation_Update
  3331 ;;		_Button_Reading_Update
  3332 ;;		_Button_State_Initializing
  3333 ;;		_Button_State_NotPressed
  3334 ;;		_Button_State_Pressed
  3335 ;;		_MTOUCH_Button_Initialize
  3336 ;;		_MTOUCH_Sensor_isCalibrated
  3337 ;;		_MTOUCH_Sensor_wasSampled
  3338 ;; This function is called by:
  3339 ;;		_MTOUCH_Button_ServiceAll
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text24
  3344  00244C                     __ptext24:
  3345                           	callstack 0
  3346  00244C                     _Button_Service:
  3347                           	callstack 14
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;incstack = 0
  3351                           ;Button_Service@name stored from wreg
  3352  00244C  0100               	movlb	0	; () banked
  3353  00244E  6FD6               	movwf	Button_Service@name& (0+255),b
  3354  002450                     
  3355                           ;mcc_generated_files/mtouch/mtouch_button.c: 192: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 193: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 194:     mtouch_button_t* button = &mtouch_button[name];
  3356  002450  0100               	movlb	0	; () banked
  3357  002452  51D6               	movf	Button_Service@name& (0+255),w,b
  3358  002454  0D10               	mullw	16
  3359  002456  0E74               	movlw	low _mtouch_button
  3360  002458  24F3               	addwf	243,w,c
  3361  00245A  6FD7               	movwf	Button_Service@button& (0+255),b
  3362  00245C  0E00               	movlw	high _mtouch_button
  3363  00245E  20F4               	addwfc	prodh,w,c
  3364  002460  6FD8               	movwf	(Button_Service@button+1)& (0+255),b
  3365  002462                     
  3366                           ; BSR set to: 0
  3367                           ;mcc_generated_files/mtouch/mtouch_button.c: 196:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  3368  002462  EE20 F001          	lfsr	2,1
  3369  002466  51D7               	movf	Button_Service@button& (0+255),w,b
  3370  002468  26D9               	addwf	fsr2l,f,c
  3371  00246A  51D8               	movf	(Button_Service@button+1)& (0+255),w,b
  3372  00246C  22DA               	addwfc	fsr2h,f,c
  3373  00246E  50DF               	movf	indf2,w,c
  3374  002470  ECEC  F018         	call	_MTOUCH_Sensor_wasSampled
  3375  002474  0900               	iorlw	0
  3376  002476  B4D8               	btfsc	status,2,c
  3377  002478  EF40  F012         	goto	u4081
  3378  00247C  EF42  F012         	goto	u4080
  3379  002480                     u4081:
  3380  002480  EF98  F012         	goto	l500
  3381  002484                     u4080:
  3382  002484  0100               	movlb	0	; () banked
  3383  002486  EE20 F001          	lfsr	2,1
  3384  00248A  51D7               	movf	Button_Service@button& (0+255),w,b
  3385  00248C  26D9               	addwf	fsr2l,f,c
  3386  00248E  51D8               	movf	(Button_Service@button+1)& (0+255),w,b
  3387  002490  22DA               	addwfc	fsr2h,f,c
  3388  002492  50DF               	movf	indf2,w,c
  3389  002494  EC0B  F019         	call	_MTOUCH_Sensor_isCalibrated
  3390  002498  0900               	iorlw	0
  3391  00249A  B4D8               	btfsc	status,2,c
  3392  00249C  EF52  F012         	goto	u4091
  3393  0024A0  EF54  F012         	goto	u4090
  3394  0024A4                     u4091:
  3395  0024A4  EF98  F012         	goto	l500
  3396  0024A8                     u4090:
  3397  0024A8                     
  3398                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 198:         Button_Reading_Update(button);
  3399  0024A8  C0D7  F01D         	movff	Button_Service@button,Button_Reading_Update@button
  3400  0024AC  C0D8  F01E         	movff	Button_Service@button+1,Button_Reading_Update@button+1
  3401  0024B0  EC0F  F01A         	call	_Button_Reading_Update	;wreg free
  3402  0024B4                     
  3403                           ;mcc_generated_files/mtouch/mtouch_button.c: 199:         Button_Deviation_Update(button
      +                          );
  3404  0024B4  C0D7  F016         	movff	Button_Service@button,Button_Deviation_Update@button
  3405  0024B8  C0D8  F017         	movff	Button_Service@button+1,Button_Deviation_Update@button+1
  3406  0024BC  EC02  F010         	call	_Button_Deviation_Update	;wreg free
  3407  0024C0                     
  3408                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  3409  0024C0  0100               	movlb	0	; () banked
  3410  0024C2  EE20 F002          	lfsr	2,2
  3411  0024C6  51D7               	movf	Button_Service@button& (0+255),w,b
  3412  0024C8  26D9               	addwf	fsr2l,f,c
  3413  0024CA  51D8               	movf	(Button_Service@button+1)& (0+255),w,b
  3414  0024CC  22DA               	addwfc	fsr2h,f,c
  3415  0024CE  0E02               	movlw	2
  3416  0024D0  64DF               	cpfsgt	indf2,c
  3417  0024D2  EF6D  F012         	goto	u4101
  3418  0024D6  EF6F  F012         	goto	u4100
  3419  0024DA                     u4101:
  3420  0024DA  EF76  F012         	goto	l5827
  3421  0024DE                     u4100:
  3422  0024DE                     
  3423                           ; BSR set to: 0
  3424                           ;mcc_generated_files/mtouch/mtouch_button.c: 202:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 203:             MTOUCH_Button_Initialize(button->name);
  3425  0024DE  C0D7  FFD9         	movff	Button_Service@button,fsr2l
  3426  0024E2  C0D8  FFDA         	movff	Button_Service@button+1,fsr2h
  3427  0024E6  50DF               	movf	indf2,w,c
  3428  0024E8  EC2F  F015         	call	_MTOUCH_Button_Initialize
  3429  0024EC                     l5827:
  3430                           
  3431                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  3432  0024EC  C0D7  F0CE         	movff	Button_Service@button,Button_State_Pressed@button
  3433  0024F0  C0D8  F0CF         	movff	Button_Service@button+1,Button_State_Pressed@button+1
  3434  0024F4  0100               	movlb	0	; () banked
  3435  0024F6  EE20 F002          	lfsr	2,2
  3436  0024FA  51D7               	movf	Button_Service@button& (0+255),w,b
  3437  0024FC  26D9               	addwf	fsr2l,f,c
  3438  0024FE  51D8               	movf	(Button_Service@button+1)& (0+255),w,b
  3439  002500  22DA               	addwfc	fsr2h,f,c
  3440  002502  50DF               	movf	indf2,w,c
  3441  002504  6FD5               	movwf	??_Button_Service& (0+255),b
  3442  002506  51D5               	movf	??_Button_Service& (0+255),w,b
  3443  002508  0D03               	mullw	3
  3444  00250A  0EDA               	movlw	low _Button_StateMachine
  3445  00250C  24F3               	addwf	243,w,c
  3446  00250E  6ED9               	movwf	fsr2l,c
  3447  002510  0E00               	movlw	high _Button_StateMachine
  3448  002512  20F4               	addwfc	prodh,w,c
  3449  002514  6EDA               	movwf	fsr2h,c
  3450  002516  D802               	call	u4118
  3451  002518  EF98  F012         	goto	u4119
  3452  00251C                     u4118:
  3453  00251C  0005               	push	
  3454  00251E  6EFA               	movwf	pclath,c
  3455  002520  50DE               	movf	postinc2,w,c
  3456  002522  6EFD               	movwf	tosl,c
  3457  002524  50DE               	movf	postinc2,w,c
  3458  002526  6EFE               	movwf	tosh,c
  3459  002528  50DE               	movf	postinc2,w,c
  3460  00252A  6EFF               	movwf	tosu,c
  3461  00252C  50FA               	movf	pclath,w,c
  3462  00252E  0012               	return		;indir
  3463  002530                     u4119:
  3464  002530                     l500:
  3465  002530  0012               	return		;funcret
  3466  002532                     __end_of_Button_Service:
  3467                           	callstack 0
  3468                           
  3469 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  3470 ;; Defined at:
  3471 ;;		line 877 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  sensor          1    wreg     enum E12860
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  sensor          1   21[COMRAM] enum E12860
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      _Bool 
  3478 ;; Registers used:
  3479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3489 ;;Total ram usage:        1 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    6
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_MTOUCH_Sensor_isSamplingComplete
  3496 ;;		_Sensor_scheduleNextScan
  3497 ;;		_Button_Service
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text25
  3502  0031D8                     __ptext25:
  3503                           	callstack 0
  3504  0031D8                     _MTOUCH_Sensor_wasSampled:
  3505                           	callstack 19
  3506                           
  3507                           ;incstack = 0
  3508                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  3509  0031D8  6E16               	movwf	MTOUCH_Sensor_wasSampled@sensor^0,c
  3510  0031DA                     
  3511                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 877: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 878: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 879:     if(sensor < 2u)
  3512  0031DA  0E02               	movlw	2
  3513  0031DC  6016               	cpfslt	MTOUCH_Sensor_wasSampled@sensor^0,c
  3514  0031DE  EFF3  F018         	goto	u2261
  3515  0031E2  EFF5  F018         	goto	u2260
  3516  0031E6                     u2261:
  3517  0031E6  EF09  F019         	goto	l4461
  3518  0031EA                     u2260:
  3519  0031EA                     
  3520                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 880:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  3521  0031EA  5016               	movf	MTOUCH_Sensor_wasSampled@sensor^0,w,c
  3522  0031EC  0D09               	mullw	9
  3523  0031EE  0E9C               	movlw	low (_mtouch_sensor+8)
  3524  0031F0  24F3               	addwf	243,w,c
  3525  0031F2  6ED9               	movwf	fsr2l,c
  3526  0031F4  0E00               	movlw	high (_mtouch_sensor+8)
  3527  0031F6  20F4               	addwfc	prodh,w,c
  3528  0031F8  6EDA               	movwf	fsr2h,c
  3529  0031FA  0100               	movlb	0	; () banked
  3530  0031FC  B2DF               	btfsc	indf2,1,c
  3531  0031FE  EF03  F019         	goto	u2271
  3532  003202  EF06  F019         	goto	u2270
  3533  003206                     u2271:
  3534  003206  0E01               	movlw	1
  3535  003208  EF07  F019         	goto	u2276
  3536  00320C                     u2270:
  3537  00320C  0E00               	movlw	0
  3538  00320E                     u2276:
  3539  00320E  EF0A  F019         	goto	l398
  3540  003212                     l4461:
  3541                           
  3542                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 882:         return 0;
  3543  003212  0E00               	movlw	0
  3544  003214                     l398:
  3545  003214  0012               	return		;funcret
  3546  003216                     __end_of_MTOUCH_Sensor_wasSampled:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  3550 ;; Defined at:
  3551 ;;		line 829 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  sensor          1    wreg     enum E12860
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  sensor          1   21[COMRAM] enum E12860
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      _Bool 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;Total ram usage:        1 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    6
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_Button_Service
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text26
  3580  003216                     __ptext26:
  3581                           	callstack 0
  3582  003216                     _MTOUCH_Sensor_isCalibrated:
  3583                           	callstack 20
  3584                           
  3585                           ;incstack = 0
  3586                           ;MTOUCH_Sensor_isCalibrated@sensor stored from wreg
  3587  003216  6E16               	movwf	MTOUCH_Sensor_isCalibrated@sensor^0,c
  3588  003218                     
  3589                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 829: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 830: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 831:     if(sensor < 2u)
  3590  003218  0E02               	movlw	2
  3591  00321A  6016               	cpfslt	MTOUCH_Sensor_isCalibrated@sensor^0,c
  3592  00321C  EF12  F019         	goto	u2811
  3593  003220  EF14  F019         	goto	u2810
  3594  003224                     u2811:
  3595  003224  EF28  F019         	goto	l4849
  3596  003228                     u2810:
  3597  003228                     
  3598                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 832:         return (_Bool)mtouch_sensor[se
      +                          nsor].calibrated;
  3599  003228  5016               	movf	MTOUCH_Sensor_isCalibrated@sensor^0,w,c
  3600  00322A  0D09               	mullw	9
  3601  00322C  0E9C               	movlw	low (_mtouch_sensor+8)
  3602  00322E  24F3               	addwf	243,w,c
  3603  003230  6ED9               	movwf	fsr2l,c
  3604  003232  0E00               	movlw	high (_mtouch_sensor+8)
  3605  003234  20F4               	addwfc	prodh,w,c
  3606  003236  6EDA               	movwf	fsr2h,c
  3607  003238  0100               	movlb	0	; () banked
  3608  00323A  B6DF               	btfsc	indf2,3,c
  3609  00323C  EF22  F019         	goto	u2821
  3610  003240  EF25  F019         	goto	u2820
  3611  003244                     u2821:
  3612  003244  0E01               	movlw	1
  3613  003246  EF26  F019         	goto	u2826
  3614  00324A                     u2820:
  3615  00324A  0E00               	movlw	0
  3616  00324C                     u2826:
  3617  00324C  EF29  F019         	goto	l376
  3618  003250                     l4849:
  3619                           
  3620                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 834:         return 0;
  3621  003250  0E00               	movlw	0
  3622  003252                     l376:
  3623  003252  0012               	return		;funcret
  3624  003254                     __end_of_MTOUCH_Sensor_isCalibrated:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function _Button_State_NotPressed *****************
  3628 ;; Defined at:
  3629 ;;		line 229 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  button          2   40[BANK0 ] PTR struct .
  3632 ;;		 -> mtouch_button(32), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;Total ram usage:        5 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    8
  3651 ;; This function calls:
  3652 ;;		_Button_Baseline_Update
  3653 ;;		_Button_DefaultCallback
  3654 ;;		_MTOUCH_Button_Initialize
  3655 ;;		_processButtonTouch
  3656 ;; This function is called by:
  3657 ;;		_Button_Service
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text27
  3662  001D34                     __ptext27:
  3663                           	callstack 0
  3664  001D34                     _Button_State_NotPressed:
  3665                           	callstack 18
  3666  001D34                     
  3667                           ;mcc_generated_files/mtouch/mtouch_button.c: 229: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 230: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 232:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  3668  001D34  0100               	movlb	0	; () banked
  3669  001D36  EE20 F00E          	lfsr	2,14
  3670  001D3A  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3671  001D3C  26D9               	addwf	fsr2l,f,c
  3672  001D3E  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3673  001D40  22DA               	addwfc	fsr2h,f,c
  3674  001D42  50DF               	movf	indf2,w,c
  3675  001D44  0800               	sublw	0
  3676  001D46  6FD0               	movwf	??_Button_State_NotPressed& (0+255),b
  3677  001D48  EE20 F009          	lfsr	2,9
  3678  001D4C  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3679  001D4E  26D9               	addwf	fsr2l,f,c
  3680  001D50  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3681  001D52  22DA               	addwfc	fsr2h,f,c
  3682  001D54  50DE               	movf	postinc2,w,c
  3683  001D56  0A80               	xorlw	128
  3684  001D58  6FD2               	movwf	(??_Button_State_NotPressed+2)& (0+255),b
  3685  001D5A  51D0               	movf	??_Button_State_NotPressed& (0+255),w,b
  3686  001D5C  0A80               	xorlw	128
  3687  001D5E  5DD2               	subwf	(??_Button_State_NotPressed+2)& (0+255),w,b
  3688  001D60  B0D8               	btfsc	status,0,c
  3689  001D62  EFB5  F00E         	goto	u3991
  3690  001D66  EFB7  F00E         	goto	u3990
  3691  001D6A                     u3991:
  3692  001D6A  EFE5  F00E         	goto	l5789
  3693  001D6E                     u3990:
  3694  001D6E                     
  3695                           ; BSR set to: 0
  3696                           ;mcc_generated_files/mtouch/mtouch_button.c: 233:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 234:         (button->counter)++;
  3697  001D6E  EE20 F00A          	lfsr	2,10
  3698  001D72  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3699  001D74  26D9               	addwf	fsr2l,f,c
  3700  001D76  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3701  001D78  22DA               	addwfc	fsr2h,f,c
  3702  001D7A  2ADE               	incf	postinc2,f,c
  3703  001D7C  0E00               	movlw	0
  3704  001D7E  22DD               	addwfc	postdec2,f,c
  3705                           
  3706                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)32u))
  3707  001D80  EE20 F00A          	lfsr	2,10
  3708  001D84  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3709  001D86  26D9               	addwf	fsr2l,f,c
  3710  001D88  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3711  001D8A  22DA               	addwfc	fsr2h,f,c
  3712  001D8C  0E01               	movlw	1
  3713  001D8E  50DB               	movf	plusw2,w,c
  3714  001D90  E109               	bnz	u4000
  3715  001D92  0E21               	movlw	33
  3716  001D94  5CDE               	subwf	postinc2,w,c
  3717  001D96  A0D8               	btfss	status,0,c
  3718  001D98  EFD0  F00E         	goto	u4001
  3719  001D9C  EFD2  F00E         	goto	u4000
  3720  001DA0                     u4001:
  3721  001DA0  EF33  F00F         	goto	l511
  3722  001DA4                     u4000:
  3723  001DA4                     
  3724                           ; BSR set to: 0
  3725                           ;mcc_generated_files/mtouch/mtouch_button.c: 236:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 237:             button->counter = (mtouch_button_statecounter_t)0;
  3726  001DA4  EE20 F00A          	lfsr	2,10
  3727  001DA8  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3728  001DAA  26D9               	addwf	fsr2l,f,c
  3729  001DAC  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3730  001DAE  22DA               	addwfc	fsr2h,f,c
  3731  001DB0  0E00               	movlw	0
  3732  001DB2  6EDE               	movwf	postinc2,c
  3733  001DB4  0E00               	movlw	0
  3734  001DB6  6EDD               	movwf	postdec2,c
  3735  001DB8                     
  3736                           ; BSR set to: 0
  3737                           ;mcc_generated_files/mtouch/mtouch_button.c: 238:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  3738  001DB8  C0CE  FFD9         	movff	Button_State_NotPressed@button,fsr2l
  3739  001DBC  C0CF  FFDA         	movff	Button_State_NotPressed@button+1,fsr2h
  3740  001DC0  50DF               	movf	indf2,w,c
  3741  001DC2  EC2F  F015         	call	_MTOUCH_Button_Initialize
  3742  001DC6  EF33  F00F         	goto	l511
  3743  001DCA                     l5789:
  3744                           
  3745                           ; BSR set to: 0
  3746  001DCA  EE20 F009          	lfsr	2,9
  3747  001DCE  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3748  001DD0  26D9               	addwf	fsr2l,f,c
  3749  001DD2  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3750  001DD4  22DA               	addwfc	fsr2h,f,c
  3751  001DD6  50DF               	movf	indf2,w,c
  3752  001DD8  6FD0               	movwf	??_Button_State_NotPressed& (0+255),b
  3753  001DDA  EE20 F00E          	lfsr	2,14
  3754  001DDE  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3755  001DE0  26D9               	addwf	fsr2l,f,c
  3756  001DE2  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3757  001DE4  22DA               	addwfc	fsr2h,f,c
  3758  001DE6  50DF               	movf	indf2,w,c
  3759  001DE8  6FD1               	movwf	(??_Button_State_NotPressed+1)& (0+255),b
  3760  001DEA  51D1               	movf	(??_Button_State_NotPressed+1)& (0+255),w,b
  3761  001DEC  80D8               	bsf	status,0,c
  3762  001DEE  84D8               	bsf	status,2,c
  3763  001DF0  AFD0               	btfss	??_Button_State_NotPressed& (0+255),7,b
  3764  001DF2  5DD0               	subwf	??_Button_State_NotPressed& (0+255),w,b
  3765  001DF4  A0D8               	btfss	status,0,c
  3766  001DF6  84D8               	bsf	status,2,c
  3767  001DF8  B4D8               	btfsc	status,2,c
  3768  001DFA  EF01  F00F         	goto	u4011
  3769  001DFE  EF03  F00F         	goto	u4010
  3770  001E02                     u4011:
  3771  001E02  EF29  F00F         	goto	l5795
  3772  001E06                     u4010:
  3773  001E06                     
  3774                           ; BSR set to: 0
  3775                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 245:         button->state = MTOUCH_BUTTON_STATE_pressed;
  3776  001E06  EE20 F002          	lfsr	2,2
  3777  001E0A  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3778  001E0C  26D9               	addwf	fsr2l,f,c
  3779  001E0E  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3780  001E10  22DA               	addwfc	fsr2h,f,c
  3781  001E12  0E02               	movlw	2
  3782  001E14  6EDF               	movwf	indf2,c
  3783                           
  3784                           ;mcc_generated_files/mtouch/mtouch_button.c: 246:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  3785  001E16  EE20 F00A          	lfsr	2,10
  3786  001E1A  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3787  001E1C  26D9               	addwf	fsr2l,f,c
  3788  001E1E  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3789  001E20  22DA               	addwfc	fsr2h,f,c
  3790  001E22  0E00               	movlw	0
  3791  001E24  6EDE               	movwf	postinc2,c
  3792  001E26  0E00               	movlw	0
  3793  001E28  6EDD               	movwf	postdec2,c
  3794  001E2A                     
  3795                           ; BSR set to: 0
  3796                           ;mcc_generated_files/mtouch/mtouch_button.c: 247:         callback_pressed(button->name)
      +                          ;
  3797  001E2A  D802               	call	u4028
  3798  001E2C  EF27  F00F         	goto	u4029
  3799  001E30                     u4028:
  3800  001E30  0005               	push	
  3801  001E32  6EFA               	movwf	pclath,c
  3802  001E34  51E3               	movf	_callback_pressed& (0+255),w,b
  3803  001E36  6EFD               	movwf	tosl,c
  3804  001E38  51E4               	movf	(_callback_pressed+1)& (0+255),w,b
  3805  001E3A  6EFE               	movwf	tosh,c
  3806  001E3C  51E5               	movf	(_callback_pressed+2)& (0+255),w,b
  3807  001E3E  6EFF               	movwf	tosu,c
  3808  001E40  50FA               	movf	pclath,w,c
  3809  001E42  C0CE  FFD9         	movff	Button_State_NotPressed@button,fsr2l
  3810  001E46  C0CF  FFDA         	movff	Button_State_NotPressed@button+1,fsr2h
  3811  001E4A  50DF               	movf	indf2,w,c
  3812  001E4C  0012               	return		;indir
  3813  001E4E                     u4029:
  3814                           
  3815                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:     }
  3816  001E4E  EF33  F00F         	goto	l511
  3817  001E52                     l5795:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 252:         button->counter = (mtouch_button_statecounter_t)0;
  3821  001E52  EE20 F00A          	lfsr	2,10
  3822  001E56  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3823  001E58  26D9               	addwf	fsr2l,f,c
  3824  001E5A  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3825  001E5C  22DA               	addwfc	fsr2h,f,c
  3826  001E5E  0E00               	movlw	0
  3827  001E60  6EDE               	movwf	postinc2,c
  3828  001E62  0E00               	movlw	0
  3829  001E64  6EDD               	movwf	postdec2,c
  3830  001E66                     l511:
  3831                           
  3832                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     (button->baseline_count)++;
  3833  001E66  0100               	movlb	0	; () banked
  3834  001E68  EE20 F00C          	lfsr	2,12
  3835  001E6C  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3836  001E6E  26D9               	addwf	fsr2l,f,c
  3837  001E70  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3838  001E72  22DA               	addwfc	fsr2h,f,c
  3839  001E74  2ADE               	incf	postinc2,f,c
  3840  001E76  0E00               	movlw	0
  3841  001E78  22DD               	addwfc	postdec2,f,c
  3842                           
  3843                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  3844  001E7A  EE20 F00C          	lfsr	2,12
  3845  001E7E  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3846  001E80  26D9               	addwf	fsr2l,f,c
  3847  001E82  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3848  001E84  22DA               	addwfc	fsr2h,f,c
  3849  001E86  0E40               	movlw	64
  3850  001E88  18DE               	xorwf	postinc2,w,c
  3851  001E8A  10DE               	iorwf	postinc2,w,c
  3852  001E8C  A4D8               	btfss	status,2,c
  3853  001E8E  EF4B  F00F         	goto	u4031
  3854  001E92  EF4D  F00F         	goto	u4030
  3855  001E96                     u4031:
  3856  001E96  EF5D  F00F         	goto	l515
  3857  001E9A                     u4030:
  3858  001E9A                     
  3859                           ; BSR set to: 0
  3860                           ;mcc_generated_files/mtouch/mtouch_button.c: 259:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 260:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  3861  001E9A  EE20 F00C          	lfsr	2,12
  3862  001E9E  51CE               	movf	Button_State_NotPressed@button& (0+255),w,b
  3863  001EA0  26D9               	addwf	fsr2l,f,c
  3864  001EA2  51CF               	movf	(Button_State_NotPressed@button+1)& (0+255),w,b
  3865  001EA4  22DA               	addwfc	fsr2h,f,c
  3866  001EA6  0E00               	movlw	0
  3867  001EA8  6EDE               	movwf	postinc2,c
  3868  001EAA  0E00               	movlw	0
  3869  001EAC  6EDD               	movwf	postdec2,c
  3870  001EAE                     
  3871                           ; BSR set to: 0
  3872                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:         Button_Baseline_Update(button)
      +                          ;
  3873  001EAE  C0CE  F016         	movff	Button_State_NotPressed@button,Button_Baseline_Update@button
  3874  001EB2  C0CF  F017         	movff	Button_State_NotPressed@button+1,Button_Baseline_Update@button+1
  3875  001EB6  EC97  F010         	call	_Button_Baseline_Update
  3876  001EBA                     l515:
  3877  001EBA  0012               	return		;funcret
  3878  001EBC                     __end_of_Button_State_NotPressed:
  3879                           	callstack 0
  3880                           
  3881 ;; *************** function _Button_State_Initializing *****************
  3882 ;; Defined at:
  3883 ;;		line 209 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  button          2   40[BANK0 ] PTR struct .
  3886 ;;		 -> mtouch_button(32), 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;Total ram usage:        6 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    8
  3905 ;; This function calls:
  3906 ;;		_Button_Baseline_Initialize
  3907 ;;		_Button_Baseline_Update
  3908 ;; This function is called by:
  3909 ;;		_Button_Service
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text28
  3914  002532                     __ptext28:
  3915                           	callstack 0
  3916  002532                     _Button_State_Initializing:
  3917                           	callstack 18
  3918  002532                     
  3919                           ;mcc_generated_files/mtouch/mtouch_button.c: 209: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 210: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 212:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  3920  002532  0100               	movlb	0	; () banked
  3921  002534  EE20 F00A          	lfsr	2,10
  3922  002538  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  3923  00253A  26D9               	addwf	fsr2l,f,c
  3924  00253C  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  3925  00253E  22DA               	addwfc	fsr2h,f,c
  3926  002540  0E01               	movlw	1
  3927  002542  50DB               	movf	plusw2,w,c
  3928  002544  E107               	bnz	u3961
  3929  002546  0E09               	movlw	9
  3930  002548  5CDE               	subwf	postinc2,w,c
  3931  00254A  B0D8               	btfsc	status,0,c
  3932  00254C  EFAA  F012         	goto	u3961
  3933  002550  EFAC  F012         	goto	u3960
  3934  002554                     u3961:
  3935  002554  EFB4  F012         	goto	l5773
  3936  002558                     u3960:
  3937  002558                     
  3938                           ; BSR set to: 0
  3939                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 214:         Button_Baseline_Initialize(button);
  3940  002558  C0CE  F019         	movff	Button_State_Initializing@button,Button_Baseline_Initialize@button
  3941  00255C  C0CF  F01A         	movff	Button_State_Initializing@button+1,Button_Baseline_Initialize@button+1
  3942  002560  EC6A  F016         	call	_Button_Baseline_Initialize	;wreg free
  3943                           
  3944                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     } else {
  3945  002564  EFBA  F012         	goto	l5775
  3946  002568                     l5773:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:         Button_Baseline_Update(button)
      +                          ;
  3950  002568  C0CE  F016         	movff	Button_State_Initializing@button,Button_Baseline_Update@button
  3951  00256C  C0CF  F017         	movff	Button_State_Initializing@button+1,Button_Baseline_Update@button+1
  3952  002570  EC97  F010         	call	_Button_Baseline_Update	;wreg free
  3953  002574                     l5775:
  3954                           
  3955                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:     (button->counter)++;
  3956  002574  0100               	movlb	0	; () banked
  3957  002576  EE20 F00A          	lfsr	2,10
  3958  00257A  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  3959  00257C  26D9               	addwf	fsr2l,f,c
  3960  00257E  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  3961  002580  22DA               	addwfc	fsr2h,f,c
  3962  002582  2ADE               	incf	postinc2,f,c
  3963  002584  0E00               	movlw	0
  3964  002586  22DD               	addwfc	postdec2,f,c
  3965  002588                     
  3966                           ; BSR set to: 0
  3967                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  3968  002588  EE20 F00A          	lfsr	2,10
  3969  00258C  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  3970  00258E  26D9               	addwf	fsr2l,f,c
  3971  002590  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  3972  002592  22DA               	addwfc	fsr2h,f,c
  3973  002594  0E01               	movlw	1
  3974  002596  50DB               	movf	plusw2,w,c
  3975  002598  E109               	bnz	u3970
  3976  00259A  0E10               	movlw	16
  3977  00259C  5CDE               	subwf	postinc2,w,c
  3978  00259E  A0D8               	btfss	status,0,c
  3979  0025A0  EFD4  F012         	goto	u3971
  3980  0025A4  EFD6  F012         	goto	u3970
  3981  0025A8                     u3971:
  3982  0025A8  EF0B  F013         	goto	l506
  3983  0025AC                     u3970:
  3984  0025AC                     
  3985                           ; BSR set to: 0
  3986                           ;mcc_generated_files/mtouch/mtouch_button.c: 222:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 223:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  3987  0025AC  EE20 F005          	lfsr	2,5
  3988  0025B0  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  3989  0025B2  26D9               	addwf	fsr2l,f,c
  3990  0025B4  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  3991  0025B6  22DA               	addwfc	fsr2h,f,c
  3992  0025B8  CFDE F0D0          	movff	postinc2,??_Button_State_Initializing
  3993  0025BC  CFDE F0D1          	movff	postinc2,??_Button_State_Initializing+1
  3994  0025C0  CFDE F0D2          	movff	postinc2,??_Button_State_Initializing+2
  3995  0025C4  CFDE F0D3          	movff	postinc2,??_Button_State_Initializing+3
  3996  0025C8  0E05               	movlw	5
  3997  0025CA  EFEC  F012         	goto	u3980
  3998  0025CE                     u3985:
  3999  0025CE  90D8               	bcf	status,0,c
  4000  0025D0  33D3               	rrcf	(??_Button_State_Initializing+3)& (0+255),f,b
  4001  0025D2  33D2               	rrcf	(??_Button_State_Initializing+2)& (0+255),f,b
  4002  0025D4  33D1               	rrcf	(??_Button_State_Initializing+1)& (0+255),f,b
  4003  0025D6  33D0               	rrcf	??_Button_State_Initializing& (0+255),f,b
  4004  0025D8                     u3980:
  4005  0025D8  2EE8               	decfsz	wreg,f,c
  4006  0025DA  EFE7  F012         	goto	u3985
  4007  0025DE  EE20 F003          	lfsr	2,3
  4008  0025E2  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  4009  0025E4  26D9               	addwf	fsr2l,f,c
  4010  0025E6  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  4011  0025E8  22DA               	addwfc	fsr2h,f,c
  4012  0025EA  C0D0  FFDE         	movff	??_Button_State_Initializing,postinc2
  4013  0025EE  C0D1  FFDD         	movff	??_Button_State_Initializing+1,postdec2
  4014                           
  4015                           ;mcc_generated_files/mtouch/mtouch_button.c: 224:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  4016  0025F2  EE20 F002          	lfsr	2,2
  4017  0025F6  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  4018  0025F8  26D9               	addwf	fsr2l,f,c
  4019  0025FA  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  4020  0025FC  22DA               	addwfc	fsr2h,f,c
  4021  0025FE  0E01               	movlw	1
  4022  002600  6EDF               	movwf	indf2,c
  4023                           
  4024                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  4025  002602  EE20 F00A          	lfsr	2,10
  4026  002606  51CE               	movf	Button_State_Initializing@button& (0+255),w,b
  4027  002608  26D9               	addwf	fsr2l,f,c
  4028  00260A  51CF               	movf	(Button_State_Initializing@button+1)& (0+255),w,b
  4029  00260C  22DA               	addwfc	fsr2h,f,c
  4030  00260E  0E00               	movlw	0
  4031  002610  6EDE               	movwf	postinc2,c
  4032  002612  0E00               	movlw	0
  4033  002614  6EDD               	movwf	postdec2,c
  4034  002616                     l506:
  4035                           
  4036                           ; BSR set to: 0
  4037  002616  0012               	return		;funcret
  4038  002618                     __end_of_Button_State_Initializing:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _Button_State_Pressed *****************
  4042 ;; Defined at:
  4043 ;;		line 265 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  button          2   40[BANK0 ] PTR struct .
  4046 ;;		 -> mtouch_button(32), 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;Total ram usage:        7 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:   12
  4065 ;; This function calls:
  4066 ;;		_Button_DefaultCallback
  4067 ;;		_MTOUCH_Button_Initialize
  4068 ;;		_processButtonRelease
  4069 ;; This function is called by:
  4070 ;;		_Button_Service
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text29
  4075  00223E                     __ptext29:
  4076                           	callstack 0
  4077  00223E                     _Button_State_Pressed:
  4078                           	callstack 14
  4079  00223E                     
  4080                           ;mcc_generated_files/mtouch/mtouch_button.c: 265: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 266: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 268:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  4081  00223E  0100               	movlb	0	; () banked
  4082  002240  EE20 F00A          	lfsr	2,10
  4083  002244  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4084  002246  26D9               	addwf	fsr2l,f,c
  4085  002248  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4086  00224A  22DA               	addwfc	fsr2h,f,c
  4087  00224C  0EE8               	movlw	232
  4088  00224E  5CDE               	subwf	postinc2,w,c
  4089  002250  0E03               	movlw	3
  4090  002252  58DE               	subwfb	postinc2,w,c
  4091  002254  A0D8               	btfss	status,0,c
  4092  002256  EF2F  F011         	goto	u4041
  4093  00225A  EF31  F011         	goto	u4040
  4094  00225E                     u4041:
  4095  00225E  EF4C  F011         	goto	l5807
  4096  002262                     u4040:
  4097  002262                     
  4098                           ; BSR set to: 0
  4099                           ;mcc_generated_files/mtouch/mtouch_button.c: 269:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 270:         MTOUCH_Button_Initialize(button->name);
  4100  002262  C0CE  FFD9         	movff	Button_State_Pressed@button,fsr2l
  4101  002266  C0CF  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  4102  00226A  50DF               	movf	indf2,w,c
  4103  00226C  EC2F  F015         	call	_MTOUCH_Button_Initialize
  4104  002270                     
  4105                           ;mcc_generated_files/mtouch/mtouch_button.c: 271:         callback_notPressed(button->na
      +                          me);
  4106  002270  D802               	call	u4058
  4107  002272  EF4A  F011         	goto	u4059
  4108  002276                     u4058:
  4109  002276  0005               	push	
  4110  002278  6EFA               	movwf	pclath,c
  4111  00227A  5047               	movf	_callback_notPressed^0,w,c
  4112  00227C  6EFD               	movwf	tosl,c
  4113  00227E  5048               	movf	(_callback_notPressed+1)^0,w,c
  4114  002280  6EFE               	movwf	tosh,c
  4115  002282  5049               	movf	(_callback_notPressed+2)^0,w,c
  4116  002284  6EFF               	movwf	tosu,c
  4117  002286  50FA               	movf	pclath,w,c
  4118  002288  C0CE  FFD9         	movff	Button_State_Pressed@button,fsr2l
  4119  00228C  C0CF  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  4120  002290  50DF               	movf	indf2,w,c
  4121  002292  0012               	return		;indir
  4122  002294                     u4059:
  4123                           
  4124                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:     }
  4125  002294  EFA2  F011         	goto	l521
  4126  002298                     l5807:
  4127                           
  4128                           ; BSR set to: 0
  4129  002298  EE20 F00E          	lfsr	2,14
  4130  00229C  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4131  00229E  26D9               	addwf	fsr2l,f,c
  4132  0022A0  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4133  0022A2  22DA               	addwfc	fsr2h,f,c
  4134  0022A4  50DF               	movf	indf2,w,c
  4135  0022A6  6FD0               	movwf	??_Button_State_Pressed& (0+255),b
  4136  0022A8  90D8               	bcf	status,0,c
  4137  0022AA  33D0               	rrcf	??_Button_State_Pressed& (0+255),f,b
  4138  0022AC  EE20 F00E          	lfsr	2,14
  4139  0022B0  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4140  0022B2  26D9               	addwf	fsr2l,f,c
  4141  0022B4  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4142  0022B6  22DA               	addwfc	fsr2h,f,c
  4143  0022B8  50DF               	movf	indf2,w,c
  4144  0022BA  6FD1               	movwf	(??_Button_State_Pressed+1)& (0+255),b
  4145  0022BC  51D0               	movf	??_Button_State_Pressed& (0+255),w,b
  4146  0022BE  5DD1               	subwf	(??_Button_State_Pressed+1)& (0+255),w,b
  4147  0022C0  6FD2               	movwf	(??_Button_State_Pressed+2)& (0+255),b
  4148  0022C2  EE20 F009          	lfsr	2,9
  4149  0022C6  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4150  0022C8  26D9               	addwf	fsr2l,f,c
  4151  0022CA  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4152  0022CC  22DA               	addwfc	fsr2h,f,c
  4153  0022CE  50DE               	movf	postinc2,w,c
  4154  0022D0  0A80               	xorlw	128
  4155  0022D2  6FD4               	movwf	(??_Button_State_Pressed+4)& (0+255),b
  4156  0022D4  51D2               	movf	(??_Button_State_Pressed+2)& (0+255),w,b
  4157  0022D6  0A80               	xorlw	128
  4158  0022D8  5DD4               	subwf	(??_Button_State_Pressed+4)& (0+255),w,b
  4159  0022DA  B0D8               	btfsc	status,0,c
  4160  0022DC  EF72  F011         	goto	u4061
  4161  0022E0  EF74  F011         	goto	u4060
  4162  0022E4                     u4061:
  4163  0022E4  EFA2  F011         	goto	l521
  4164  0022E8                     u4060:
  4165  0022E8                     
  4166                           ; BSR set to: 0
  4167                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 277:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  4168  0022E8  EE20 F002          	lfsr	2,2
  4169  0022EC  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4170  0022EE  26D9               	addwf	fsr2l,f,c
  4171  0022F0  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4172  0022F2  22DA               	addwfc	fsr2h,f,c
  4173  0022F4  0E01               	movlw	1
  4174  0022F6  6EDF               	movwf	indf2,c
  4175                           
  4176                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  4177  0022F8  EE20 F00A          	lfsr	2,10
  4178  0022FC  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4179  0022FE  26D9               	addwf	fsr2l,f,c
  4180  002300  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4181  002302  22DA               	addwfc	fsr2h,f,c
  4182  002304  0E00               	movlw	0
  4183  002306  6EDE               	movwf	postinc2,c
  4184  002308  0E00               	movlw	0
  4185  00230A  6EDD               	movwf	postdec2,c
  4186                           
  4187                           ;mcc_generated_files/mtouch/mtouch_button.c: 279:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  4188  00230C  EE20 F00C          	lfsr	2,12
  4189  002310  51CE               	movf	Button_State_Pressed@button& (0+255),w,b
  4190  002312  26D9               	addwf	fsr2l,f,c
  4191  002314  51CF               	movf	(Button_State_Pressed@button+1)& (0+255),w,b
  4192  002316  22DA               	addwfc	fsr2h,f,c
  4193  002318  0EFF               	movlw	255
  4194  00231A  6EDE               	movwf	postinc2,c
  4195  00231C  0EFB               	movlw	251
  4196  00231E  6EDD               	movwf	postdec2,c
  4197  002320                     
  4198                           ; BSR set to: 0
  4199                           ;mcc_generated_files/mtouch/mtouch_button.c: 280:         callback_notPressed(button->na
      +                          me);
  4200  002320  D802               	call	u4078
  4201  002322  EFA2  F011         	goto	u4079
  4202  002326                     u4078:
  4203  002326  0005               	push	
  4204  002328  6EFA               	movwf	pclath,c
  4205  00232A  5047               	movf	_callback_notPressed^0,w,c
  4206  00232C  6EFD               	movwf	tosl,c
  4207  00232E  5048               	movf	(_callback_notPressed+1)^0,w,c
  4208  002330  6EFE               	movwf	tosh,c
  4209  002332  5049               	movf	(_callback_notPressed+2)^0,w,c
  4210  002334  6EFF               	movwf	tosu,c
  4211  002336  50FA               	movf	pclath,w,c
  4212  002338  C0CE  FFD9         	movff	Button_State_Pressed@button,fsr2l
  4213  00233C  C0CF  FFDA         	movff	Button_State_Pressed@button+1,fsr2h
  4214  002340  50DF               	movf	indf2,w,c
  4215  002342  0012               	return		;indir
  4216  002344                     u4079:
  4217  002344                     l521:
  4218  002344  0012               	return		;funcret
  4219  002346                     __end_of_Button_State_Pressed:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function _processButtonTouch *****************
  4223 ;; Defined at:
  4224 ;;		line 9 in file "application.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  button          1    wreg     enum E12854
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  button          1   23[COMRAM] enum E12854
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;Total ram usage:        3 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    7
  4245 ;; This function calls:
  4246 ;;		_TMR1_StartTimer
  4247 ;;		_TMR3_StartTimer
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;;		_Button_State_NotPressed
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text30
  4255  002830                     __ptext30:
  4256                           	callstack 0
  4257  002830                     _processButtonTouch:
  4258                           	callstack 18
  4259                           
  4260                           ;incstack = 0
  4261                           ;processButtonTouch@button stored from wreg
  4262  002830  6E18               	movwf	processButtonTouch@button^0,c
  4263  002832                     
  4264                           ;application.c: 11:     switch(button) {
  4265  002832  EF50  F014         	goto	l4591
  4266  002836                     l4573:
  4267                           
  4268                           ;application.c: 13:             TMR1_StartTimer();
  4269  002836  EC1D  F01C         	call	_TMR1_StartTimer
  4270  00283A                     
  4271                           ;application.c: 14:             gButton1Pressed = 1;
  4272  00283A  0E01               	movlw	1
  4273  00283C  0100               	movlb	0	; () banked
  4274  00283E  6F72               	movwf	_gButton1Pressed& (0+255),b	;volatile
  4275  002840                     
  4276                           ; BSR set to: 0
  4277                           ;application.c: 16:             if(gBrightnessLevel != 8) {
  4278  002840  0E08               	movlw	8
  4279  002842  19EC               	xorwf	_gBrightnessLevel& (0+255),w,b	;volatile
  4280  002844  B4D8               	btfsc	status,2,c
  4281  002846  EF27  F014         	goto	u2441
  4282  00284A  EF29  F014         	goto	u2440
  4283  00284E                     u2441:
  4284  00284E  EF2A  F014         	goto	l4579
  4285  002852                     u2440:
  4286  002852                     
  4287                           ; BSR set to: 0
  4288  002852  9A85               	bcf	133,5,c	;volatile
  4289  002854                     l4579:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;application.c: 19:             if(gButton2Pressed) {
  4293  002854  5171               	movf	_gButton2Pressed& (0+255),w,b	;volatile
  4294  002856  B4D8               	btfsc	status,2,c
  4295  002858  EF30  F014         	goto	u2451
  4296  00285C  EF32  F014         	goto	u2450
  4297  002860                     u2451:
  4298  002860  EF65  F014         	goto	l1193
  4299  002864                     u2450:
  4300  002864                     
  4301                           ; BSR set to: 0
  4302  002864  9483               	bcf	131,2,c	;volatile
  4303  002866                     
  4304                           ; BSR set to: 0
  4305  002866  9A85               	bcf	133,5,c	;volatile
  4306  002868  EF65  F014         	goto	l1193
  4307  00286C                     l4581:
  4308                           
  4309                           ;application.c: 25:             TMR3_StartTimer();
  4310  00286C  EC1B  F01C         	call	_TMR3_StartTimer	;wreg free
  4311  002870                     
  4312                           ;application.c: 26:             gButton2Pressed = 1;
  4313  002870  0E01               	movlw	1
  4314  002872  0100               	movlb	0	; () banked
  4315  002874  6F71               	movwf	_gButton2Pressed& (0+255),b	;volatile
  4316  002876                     
  4317                           ; BSR set to: 0
  4318                           ;application.c: 28:             if(gBrightnessLevel != 0) {
  4319  002876  51EC               	movf	_gBrightnessLevel& (0+255),w,b	;volatile
  4320  002878  B4D8               	btfsc	status,2,c
  4321  00287A  EF41  F014         	goto	u2461
  4322  00287E  EF43  F014         	goto	u2460
  4323  002882                     u2461:
  4324  002882  EF44  F014         	goto	l4587
  4325  002886                     u2460:
  4326  002886                     
  4327                           ; BSR set to: 0
  4328  002886  9483               	bcf	131,2,c	;volatile
  4329  002888                     l4587:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;application.c: 31:             if(gButton1Pressed) {
  4333  002888  5172               	movf	_gButton1Pressed& (0+255),w,b	;volatile
  4334  00288A  B4D8               	btfsc	status,2,c
  4335  00288C  EF4A  F014         	goto	u2471
  4336  002890  EF4C  F014         	goto	u2470
  4337  002894                     u2471:
  4338  002894  EF65  F014         	goto	l1193
  4339  002898                     u2470:
  4340  002898                     
  4341                           ; BSR set to: 0
  4342  002898  9A85               	bcf	133,5,c	;volatile
  4343  00289A                     
  4344                           ; BSR set to: 0
  4345  00289A  9483               	bcf	131,2,c	;volatile
  4346  00289C  EF65  F014         	goto	l1193
  4347  0028A0                     l4591:
  4348  0028A0  5018               	movf	processButtonTouch@button^0,w,c
  4349  0028A2  6E16               	movwf	??_processButtonTouch^0,c
  4350  0028A4  6A17               	clrf	(??_processButtonTouch+1)^0,c
  4351                           
  4352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4353                           ; Switch size 1, requested type "simple"
  4354                           ; Number of cases is 1, Range of values is 0 to 0
  4355                           ; switch strategies available:
  4356                           ; Name         Instructions Cycles
  4357                           ; simple_byte            4     3 (average)
  4358                           ;	Chosen strategy is simple_byte
  4359  0028A6  5017               	movf	(??_processButtonTouch+1)^0,w,c
  4360  0028A8  0A00               	xorlw	0	; case 0
  4361  0028AA  B4D8               	btfsc	status,2,c
  4362  0028AC  EF5A  F014         	goto	l6037
  4363  0028B0  EF65  F014         	goto	l1193
  4364  0028B4                     l6037:
  4365                           
  4366                           ; Switch size 1, requested type "simple"
  4367                           ; Number of cases is 2, Range of values is 0 to 1
  4368                           ; switch strategies available:
  4369                           ; Name         Instructions Cycles
  4370                           ; simple_byte            7     4 (average)
  4371                           ;	Chosen strategy is simple_byte
  4372  0028B4  5016               	movf	??_processButtonTouch^0,w,c
  4373  0028B6  0A00               	xorlw	0	; case 0
  4374  0028B8  B4D8               	btfsc	status,2,c
  4375  0028BA  EF1B  F014         	goto	l4573
  4376  0028BE  0A01               	xorlw	1	; case 1
  4377  0028C0  B4D8               	btfsc	status,2,c
  4378  0028C2  EF36  F014         	goto	l4581
  4379  0028C6  EF65  F014         	goto	l1193
  4380  0028CA                     l1193:
  4381  0028CA  0012               	return		;funcret
  4382  0028CC                     __end_of_processButtonTouch:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function _Button_DefaultCallback *****************
  4386 ;; Defined at:
  4387 ;;		line 519 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  button          1    wreg     enum E12923
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  button          1    0[COMRAM] enum E12923
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    6
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_Button_State_NotPressed
  4412 ;;		_Button_State_Pressed
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text31
  4417  003848                     __ptext31:
  4418                           	callstack 0
  4419  003848                     _Button_DefaultCallback:
  4420                           	callstack 19
  4421  003848  0012               	return		;funcret
  4422  00384A                     __end_of_Button_DefaultCallback:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _processButtonRelease *****************
  4426 ;; Defined at:
  4427 ;;		line 41 in file "application.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  button          1    wreg     enum E12854
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  button          1   37[BANK0 ] enum E12854
  4432 ;;  timerCount      2   38[BANK0 ] unsigned short 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;Total ram usage:        5 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:   11
  4449 ;; This function calls:
  4450 ;;		_TMR1_ReadTimer
  4451 ;;		_TMR1_StopTimer
  4452 ;;		_TMR1_WriteTimer
  4453 ;;		_TMR3_ReadTimer
  4454 ;;		_TMR3_StopTimer
  4455 ;;		_TMR3_WriteTimer
  4456 ;;		_getBrightnessLevel
  4457 ;;		_getColorMask
  4458 ;;		_updateLED
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;;		_Button_State_Pressed
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text32
  4466  001830                     __ptext32:
  4467                           	callstack 0
  4468  001830                     _processButtonRelease:
  4469                           	callstack 14
  4470                           
  4471                           ;incstack = 0
  4472                           ;processButtonRelease@button stored from wreg
  4473  001830  0100               	movlb	0	; () banked
  4474  001832  6FCB               	movwf	processButtonRelease@button& (0+255),b
  4475  001834                     
  4476                           ;application.c: 42:     uint16_t timerCount;;application.c: 44:     switch(button) {
  4477  001834  EFED  F00C         	goto	l5763
  4478  001838                     l5689:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;application.c: 46:             TMR1_StopTimer();
  4482  001838  EC19  F01C         	call	_TMR1_StopTimer	;wreg free
  4483  00183C                     
  4484                           ;application.c: 47:             timerCount = TMR1_ReadTimer();
  4485  00183C  EC58  F01B         	call	_TMR1_ReadTimer	;wreg free
  4486  001840  C016  F0CC         	movff	?_TMR1_ReadTimer,processButtonRelease@timerCount
  4487  001844  C017  F0CD         	movff	?_TMR1_ReadTimer+1,processButtonRelease@timerCount+1
  4488  001848                     
  4489                           ;application.c: 48:             TMR1_WriteTimer(0x0000);
  4490  001848  0E00               	movlw	0
  4491  00184A  6E17               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  4492  00184C  0E00               	movlw	0
  4493  00184E  6E16               	movwf	TMR1_WriteTimer@timerVal^0,c
  4494  001850  EC7D  F01A         	call	_TMR1_WriteTimer	;wreg free
  4495  001854                     
  4496                           ;application.c: 49:             gButton1Pressed = 0;
  4497  001854  0E00               	movlw	0
  4498  001856  0100               	movlb	0	; () banked
  4499  001858  6F72               	movwf	_gButton1Pressed& (0+255),b	;volatile
  4500  00185A                     
  4501                           ; BSR set to: 0
  4502  00185A  8A85               	bsf	133,5,c	;volatile
  4503  00185C                     
  4504                           ; BSR set to: 0
  4505                           ;application.c: 51:             if(timerCount > 0xB5A4) {
  4506  00185C  0EA5               	movlw	165
  4507  00185E  5DCC               	subwf	processButtonRelease@timerCount& (0+255),w,b
  4508  001860  0EB5               	movlw	181
  4509  001862  59CD               	subwfb	(processButtonRelease@timerCount+1)& (0+255),w,b
  4510  001864  A0D8               	btfss	status,0,c
  4511  001866  EF37  F00C         	goto	u3861
  4512  00186A  EF39  F00C         	goto	u3860
  4513  00186E                     u3861:
  4514  00186E  EF47  F00C         	goto	l5705
  4515  001872                     u3860:
  4516  001872                     
  4517                           ; BSR set to: 0
  4518                           ;application.c: 53:                 updateLED(getBrightnessLevel(),getColorMask());
  4519  001872  EC0C  F013         	call	_getColorMask	;wreg free
  4520  001876  C016  F0B4         	movff	?_getColorMask,updateLED@colorMask
  4521  00187A  C017  F0B5         	movff	?_getColorMask+1,updateLED@colorMask+1
  4522  00187E  C018  F0B6         	movff	?_getColorMask+2,updateLED@colorMask+2
  4523  001882  ECC8  F013         	call	_getBrightnessLevel	;wreg free
  4524  001886  EC9E  F015         	call	_updateLED
  4525  00188A  EF03  F00D         	goto	l1201
  4526  00188E                     l5705:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;application.c: 57:             if(gButton2Pressed) {
  4530  00188E  5171               	movf	_gButton2Pressed& (0+255),w,b	;volatile
  4531  001890  B4D8               	btfsc	status,2,c
  4532  001892  EF4D  F00C         	goto	u3871
  4533  001896  EF4F  F00C         	goto	u3870
  4534  00189A                     u3871:
  4535  00189A  EF53  F00C         	goto	l5709
  4536  00189E                     u3870:
  4537  00189E                     
  4538                           ; BSR set to: 0
  4539                           ;application.c: 58:                 gWaitingForButton2Release = 1;
  4540  00189E  0E01               	movlw	1
  4541  0018A0  6F6F               	movwf	_gWaitingForButton2Release& (0+255),b	;volatile
  4542                           
  4543                           ;application.c: 59:             } else {
  4544  0018A2  EF03  F00D         	goto	l1201
  4545  0018A6                     l5709:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;application.c: 61:                 if(gWaitingForButton1Release) {
  4549  0018A6  5170               	movf	_gWaitingForButton1Release& (0+255),w,b	;volatile
  4550  0018A8  B4D8               	btfsc	status,2,c
  4551  0018AA  EF59  F00C         	goto	u3881
  4552  0018AE  EF5B  F00C         	goto	u3880
  4553  0018B2                     u3881:
  4554  0018B2  EF6D  F00C         	goto	l5719
  4555  0018B6                     u3880:
  4556  0018B6                     
  4557                           ; BSR set to: 0
  4558                           ;application.c: 62:                     gWaitingForButton1Release = 0;
  4559  0018B6  0E00               	movlw	0
  4560  0018B8  6F70               	movwf	_gWaitingForButton1Release& (0+255),b	;volatile
  4561  0018BA                     
  4562                           ; BSR set to: 0
  4563                           ;application.c: 63:                     if(gColorMask == 6) {
  4564  0018BA  0E06               	movlw	6
  4565  0018BC  1973               	xorwf	_gColorMask& (0+255),w,b	;volatile
  4566  0018BE  A4D8               	btfss	status,2,c
  4567  0018C0  EF64  F00C         	goto	u3891
  4568  0018C4  EF66  F00C         	goto	u3890
  4569  0018C8                     u3891:
  4570  0018C8  EF6A  F00C         	goto	l5717
  4571  0018CC                     u3890:
  4572  0018CC                     
  4573                           ; BSR set to: 0
  4574                           ;application.c: 64:                         gColorMask = 0;
  4575  0018CC  0E00               	movlw	0
  4576  0018CE  6F73               	movwf	_gColorMask& (0+255),b	;volatile
  4577                           
  4578                           ;application.c: 65:                     } else {
  4579  0018D0  EF77  F00C         	goto	l5723
  4580  0018D4                     l5717:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;application.c: 66:                         gColorMask++;
  4584  0018D4  2B73               	incf	_gColorMask& (0+255),f,b	;volatile
  4585  0018D6  EF77  F00C         	goto	l5723
  4586  0018DA                     l5719:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;application.c: 70:                     if(gBrightnessLevel != 8) {
  4590  0018DA  0E08               	movlw	8
  4591  0018DC  19EC               	xorwf	_gBrightnessLevel& (0+255),w,b	;volatile
  4592  0018DE  B4D8               	btfsc	status,2,c
  4593  0018E0  EF74  F00C         	goto	u3901
  4594  0018E4  EF76  F00C         	goto	u3900
  4595  0018E8                     u3901:
  4596  0018E8  EF77  F00C         	goto	l5723
  4597  0018EC                     u3900:
  4598  0018EC                     
  4599                           ; BSR set to: 0
  4600                           ;application.c: 71:                         gBrightnessLevel++;
  4601  0018EC  2BEC               	incf	_gBrightnessLevel& (0+255),f,b	;volatile
  4602  0018EE                     l5723:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;application.c: 74:                 updateLED(getBrightnessLevel(),getColorMask());
  4606  0018EE  EC0C  F013         	call	_getColorMask	;wreg free
  4607  0018F2  C016  F0B4         	movff	?_getColorMask,updateLED@colorMask
  4608  0018F6  C017  F0B5         	movff	?_getColorMask+1,updateLED@colorMask+1
  4609  0018FA  C018  F0B6         	movff	?_getColorMask+2,updateLED@colorMask+2
  4610  0018FE  ECC8  F013         	call	_getBrightnessLevel	;wreg free
  4611  001902  EC9E  F015         	call	_updateLED
  4612  001906  EF03  F00D         	goto	l1201
  4613  00190A                     l5725:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;application.c: 78:             TMR3_StopTimer();
  4617  00190A  EC17  F01C         	call	_TMR3_StopTimer	;wreg free
  4618  00190E                     
  4619                           ;application.c: 79:             timerCount = TMR3_ReadTimer();
  4620  00190E  EC48  F01B         	call	_TMR3_ReadTimer	;wreg free
  4621  001912  C016  F0CC         	movff	?_TMR3_ReadTimer,processButtonRelease@timerCount
  4622  001916  C017  F0CD         	movff	?_TMR3_ReadTimer+1,processButtonRelease@timerCount+1
  4623  00191A                     
  4624                           ;application.c: 80:             TMR3_WriteTimer(0x0000);
  4625  00191A  0E00               	movlw	0
  4626  00191C  6E17               	movwf	(TMR3_WriteTimer@timerVal+1)^0,c
  4627  00191E  0E00               	movlw	0
  4628  001920  6E16               	movwf	TMR3_WriteTimer@timerVal^0,c
  4629  001922  EC69  F01A         	call	_TMR3_WriteTimer	;wreg free
  4630  001926                     
  4631                           ;application.c: 81:             gButton2Pressed = 0;
  4632  001926  0E00               	movlw	0
  4633  001928  0100               	movlb	0	; () banked
  4634  00192A  6F71               	movwf	_gButton2Pressed& (0+255),b	;volatile
  4635  00192C                     
  4636                           ; BSR set to: 0
  4637  00192C  8483               	bsf	131,2,c	;volatile
  4638  00192E                     
  4639                           ; BSR set to: 0
  4640                           ;application.c: 83:             if(timerCount > 0xB5A4) {
  4641  00192E  0EA5               	movlw	165
  4642  001930  5DCC               	subwf	processButtonRelease@timerCount& (0+255),w,b
  4643  001932  0EB5               	movlw	181
  4644  001934  59CD               	subwfb	(processButtonRelease@timerCount+1)& (0+255),w,b
  4645  001936  A0D8               	btfss	status,0,c
  4646  001938  EFA0  F00C         	goto	u3911
  4647  00193C  EFA2  F00C         	goto	u3910
  4648  001940                     u3911:
  4649  001940  EFB0  F00C         	goto	l5741
  4650  001944                     u3910:
  4651  001944                     
  4652                           ; BSR set to: 0
  4653                           ;application.c: 85:                 updateLED(getBrightnessLevel(),getColorMask());
  4654  001944  EC0C  F013         	call	_getColorMask	;wreg free
  4655  001948  C016  F0B4         	movff	?_getColorMask,updateLED@colorMask
  4656  00194C  C017  F0B5         	movff	?_getColorMask+1,updateLED@colorMask+1
  4657  001950  C018  F0B6         	movff	?_getColorMask+2,updateLED@colorMask+2
  4658  001954  ECC8  F013         	call	_getBrightnessLevel	;wreg free
  4659  001958  EC9E  F015         	call	_updateLED
  4660  00195C  EF03  F00D         	goto	l1201
  4661  001960                     l5741:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;application.c: 89:             if(gButton1Pressed) {
  4665  001960  5172               	movf	_gButton1Pressed& (0+255),w,b	;volatile
  4666  001962  B4D8               	btfsc	status,2,c
  4667  001964  EFB6  F00C         	goto	u3921
  4668  001968  EFB8  F00C         	goto	u3920
  4669  00196C                     u3921:
  4670  00196C  EFBC  F00C         	goto	l5745
  4671  001970                     u3920:
  4672  001970                     
  4673                           ; BSR set to: 0
  4674                           ;application.c: 90:                 gWaitingForButton1Release = 1;
  4675  001970  0E01               	movlw	1
  4676  001972  6F70               	movwf	_gWaitingForButton1Release& (0+255),b	;volatile
  4677                           
  4678                           ;application.c: 91:             } else {
  4679  001974  EF03  F00D         	goto	l1201
  4680  001978                     l5745:
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;application.c: 93:                 if(gWaitingForButton2Release) {
  4684  001978  516F               	movf	_gWaitingForButton2Release& (0+255),w,b	;volatile
  4685  00197A  B4D8               	btfsc	status,2,c
  4686  00197C  EFC2  F00C         	goto	u3931
  4687  001980  EFC4  F00C         	goto	u3930
  4688  001984                     u3931:
  4689  001984  EFD6  F00C         	goto	l5755
  4690  001988                     u3930:
  4691  001988                     
  4692                           ; BSR set to: 0
  4693                           ;application.c: 94:                     gWaitingForButton2Release = 0;
  4694  001988  0E00               	movlw	0
  4695  00198A  6F6F               	movwf	_gWaitingForButton2Release& (0+255),b	;volatile
  4696  00198C                     
  4697                           ; BSR set to: 0
  4698                           ;application.c: 95:                     if(gColorMask == 6) {
  4699  00198C  0E06               	movlw	6
  4700  00198E  1973               	xorwf	_gColorMask& (0+255),w,b	;volatile
  4701  001990  A4D8               	btfss	status,2,c
  4702  001992  EFCD  F00C         	goto	u3941
  4703  001996  EFCF  F00C         	goto	u3940
  4704  00199A                     u3941:
  4705  00199A  EFD3  F00C         	goto	l5753
  4706  00199E                     u3940:
  4707  00199E                     
  4708                           ; BSR set to: 0
  4709                           ;application.c: 96:                         gColorMask = 0;
  4710  00199E  0E00               	movlw	0
  4711  0019A0  6F73               	movwf	_gColorMask& (0+255),b	;volatile
  4712                           
  4713                           ;application.c: 97:                     } else {
  4714  0019A2  EFDF  F00C         	goto	l5759
  4715  0019A6                     l5753:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;application.c: 98:                         gColorMask++;
  4719  0019A6  2B73               	incf	_gColorMask& (0+255),f,b	;volatile
  4720  0019A8  EFDF  F00C         	goto	l5759
  4721  0019AC                     l5755:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;application.c: 102:                     if(gBrightnessLevel != 0) {
  4725  0019AC  51EC               	movf	_gBrightnessLevel& (0+255),w,b	;volatile
  4726  0019AE  B4D8               	btfsc	status,2,c
  4727  0019B0  EFDC  F00C         	goto	u3951
  4728  0019B4  EFDE  F00C         	goto	u3950
  4729  0019B8                     u3951:
  4730  0019B8  EFDF  F00C         	goto	l5759
  4731  0019BC                     u3950:
  4732  0019BC                     
  4733                           ; BSR set to: 0
  4734                           ;application.c: 103:                         gBrightnessLevel--;
  4735  0019BC  07EC               	decf	_gBrightnessLevel& (0+255),f,b	;volatile
  4736  0019BE                     l5759:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;application.c: 107:                 updateLED(getBrightnessLevel(),getColorMask());
  4740  0019BE  EC0C  F013         	call	_getColorMask	;wreg free
  4741  0019C2  C016  F0B4         	movff	?_getColorMask,updateLED@colorMask
  4742  0019C6  C017  F0B5         	movff	?_getColorMask+1,updateLED@colorMask+1
  4743  0019CA  C018  F0B6         	movff	?_getColorMask+2,updateLED@colorMask+2
  4744  0019CE  ECC8  F013         	call	_getBrightnessLevel	;wreg free
  4745  0019D2  EC9E  F015         	call	_updateLED
  4746  0019D6  EF03  F00D         	goto	l1201
  4747  0019DA                     l5763:
  4748  0019DA  0100               	movlb	0	; () banked
  4749  0019DC  51CB               	movf	processButtonRelease@button& (0+255),w,b
  4750  0019DE  6FC9               	movwf	??_processButtonRelease& (0+255),b
  4751  0019E0  6BCA               	clrf	(??_processButtonRelease+1)& (0+255),b
  4752                           
  4753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4754                           ; Switch size 1, requested type "simple"
  4755                           ; Number of cases is 1, Range of values is 0 to 0
  4756                           ; switch strategies available:
  4757                           ; Name         Instructions Cycles
  4758                           ; simple_byte            4     3 (average)
  4759                           ;	Chosen strategy is simple_byte
  4760  0019E2  51CA               	movf	(??_processButtonRelease+1)& (0+255),w,b
  4761  0019E4  0A00               	xorlw	0	; case 0
  4762  0019E6  B4D8               	btfsc	status,2,c
  4763  0019E8  EFF8  F00C         	goto	l6039
  4764  0019EC  EF03  F00D         	goto	l1201
  4765  0019F0                     l6039:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ; Switch size 1, requested type "simple"
  4769                           ; Number of cases is 2, Range of values is 0 to 1
  4770                           ; switch strategies available:
  4771                           ; Name         Instructions Cycles
  4772                           ; simple_byte            7     4 (average)
  4773                           ;	Chosen strategy is simple_byte
  4774  0019F0  51C9               	movf	??_processButtonRelease& (0+255),w,b
  4775  0019F2  0A00               	xorlw	0	; case 0
  4776  0019F4  B4D8               	btfsc	status,2,c
  4777  0019F6  EF1C  F00C         	goto	l5689
  4778  0019FA  0A01               	xorlw	1	; case 1
  4779  0019FC  B4D8               	btfsc	status,2,c
  4780  0019FE  EF85  F00C         	goto	l5725
  4781  001A02  EF03  F00D         	goto	l1201
  4782  001A06                     l1201:
  4783  001A06  0012               	return		;funcret
  4784  001A08                     __end_of_processButtonRelease:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _updateLED *****************
  4788 ;; Defined at:
  4789 ;;		line 163 in file "application.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  brightnessLe    1    wreg     unsigned char 
  4792 ;;  colorMask       3   14[BANK0 ] unsigned um
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  brightnessLe    1   34[BANK0 ] unsigned char 
  4795 ;;  color           3   31[BANK0 ] unsigned um
  4796 ;;  replicateBri    3   28[BANK0 ] unsigned um
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4806 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;Total ram usage:       21 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:   10
  4813 ;; This function calls:
  4814 ;;		_FillScreen
  4815 ;; This function is called by:
  4816 ;;		_processButtonRelease
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text33
  4821  002B3C                     __ptext33:
  4822                           	callstack 0
  4823  002B3C                     _updateLED:
  4824                           	callstack 14
  4825                           
  4826                           ;incstack = 0
  4827                           ;updateLED@brightnessLevel stored from wreg
  4828  002B3C  0100               	movlb	0	; () banked
  4829  002B3E  6FC8               	movwf	updateLED@brightnessLevel& (0+255),b
  4830  002B40                     
  4831                           ;application.c: 165:     uint24_t replicateBrightness = ((uint24_t)brightnessLevel << 16
      +                          ) | (brightnessLevel << 8) | brightnessLevel;
  4832  002B40  0100               	movlb	0	; () banked
  4833  002B42  51C8               	movf	updateLED@brightnessLevel& (0+255),w,b
  4834  002B44  6FB7               	movwf	??_updateLED& (0+255),b
  4835  002B46  6BB8               	clrf	(??_updateLED+1)& (0+255),b
  4836  002B48  6BB9               	clrf	(??_updateLED+2)& (0+255),b
  4837  002B4A  51C8               	movf	updateLED@brightnessLevel& (0+255),w,b
  4838  002B4C  6FBB               	movwf	(??_updateLED+4)& (0+255),b
  4839  002B4E  6BBA               	clrf	(??_updateLED+3)& (0+255),b
  4840  002B50  51C8               	movf	updateLED@brightnessLevel& (0+255),w,b
  4841  002B52  6FBE               	movwf	(??_updateLED+7)& (0+255),b
  4842  002B54  6BBD               	clrf	(??_updateLED+6)& (0+255),b
  4843  002B56  6BBC               	clrf	(??_updateLED+5)& (0+255),b
  4844  002B58  51BA               	movf	(??_updateLED+3)& (0+255),w,b
  4845  002B5A  11BC               	iorwf	(??_updateLED+5)& (0+255),w,b
  4846  002B5C  6FBF               	movwf	(??_updateLED+8)& (0+255),b
  4847  002B5E  51BB               	movf	(??_updateLED+4)& (0+255),w,b
  4848  002B60  11BD               	iorwf	(??_updateLED+6)& (0+255),w,b
  4849  002B62  6FC0               	movwf	(??_updateLED+9)& (0+255),b
  4850  002B64  0E00               	movlw	0
  4851  002B66  BFBB               	btfsc	(??_updateLED+4)& (0+255),7,b
  4852  002B68  0EFF               	movlw	255
  4853  002B6A  11BE               	iorwf	(??_updateLED+7)& (0+255),w,b
  4854  002B6C  6FC1               	movwf	(??_updateLED+10)& (0+255),b
  4855  002B6E  51B7               	movf	??_updateLED& (0+255),w,b
  4856  002B70  11BF               	iorwf	(??_updateLED+8)& (0+255),w,b
  4857  002B72  6FC2               	movwf	updateLED@replicateBrightness& (0+255),b
  4858  002B74  51B8               	movf	(??_updateLED+1)& (0+255),w,b
  4859  002B76  11C0               	iorwf	(??_updateLED+9)& (0+255),w,b
  4860  002B78  6FC3               	movwf	(updateLED@replicateBrightness+1)& (0+255),b
  4861  002B7A  51B9               	movf	(??_updateLED+2)& (0+255),w,b
  4862  002B7C  11C1               	iorwf	(??_updateLED+10)& (0+255),w,b
  4863  002B7E  6FC4               	movwf	(updateLED@replicateBrightness+2)& (0+255),b
  4864                           
  4865                           ;application.c: 166:     uint24_t color = replicateBrightness & colorMask;
  4866  002B80  51B4               	movf	updateLED@colorMask& (0+255),w,b
  4867  002B82  15C2               	andwf	updateLED@replicateBrightness& (0+255),w,b
  4868  002B84  6FC5               	movwf	updateLED@color& (0+255),b
  4869  002B86  51B5               	movf	(updateLED@colorMask+1)& (0+255),w,b
  4870  002B88  15C3               	andwf	(updateLED@replicateBrightness+1)& (0+255),w,b
  4871  002B8A  6FC6               	movwf	(updateLED@color+1)& (0+255),b
  4872  002B8C  51B6               	movf	(updateLED@colorMask+2)& (0+255),w,b
  4873  002B8E  15C4               	andwf	(updateLED@replicateBrightness+2)& (0+255),w,b
  4874  002B90  6FC7               	movwf	(updateLED@color+2)& (0+255),b
  4875  002B92                     
  4876                           ; BSR set to: 0
  4877                           ;application.c: 167:     FillScreen(color);
  4878  002B92  51C5               	movf	updateLED@color& (0+255),w,b
  4879  002B94  6FB0               	movwf	FillScreen@AColor& (0+255),b
  4880  002B96  51C6               	movf	(updateLED@color+1)& (0+255),w,b
  4881  002B98  6FB1               	movwf	(FillScreen@AColor+1)& (0+255),b
  4882  002B9A  51C7               	movf	(updateLED@color+2)& (0+255),w,b
  4883  002B9C  6FB2               	movwf	(FillScreen@AColor+2)& (0+255),b
  4884  002B9E  6BB3               	clrf	(FillScreen@AColor+3)& (0+255),b
  4885  002BA0  ECA2  F019         	call	_FillScreen	;wreg free
  4886  002BA4  0012               	return		;funcret
  4887  002BA6                     __end_of_updateLED:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _FillScreen *****************
  4891 ;; Defined at:
  4892 ;;		line 22 in file "RGB4x4Click.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  AColor          4   10[BANK0 ] unsigned long 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  n               1   51[COMRAM] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;Total ram usage:        5 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    9
  4913 ;; This function calls:
  4914 ;;		_RGBLed_SetDiode
  4915 ;; This function is called by:
  4916 ;;		_updateLED
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text34
  4921  003344                     __ptext34:
  4922                           	callstack 0
  4923  003344                     _FillScreen:
  4924                           	callstack 14
  4925  003344                     
  4926                           ;RGB4x4Click.c: 23:   uint8_t n;;RGB4x4Click.c: 24:   for (n=1; n<=16; n++) {
  4927  003344  0E01               	movlw	1
  4928  003346  6E34               	movwf	FillScreen@n^0,c
  4929  003348                     l5677:
  4930                           
  4931                           ;RGB4x4Click.c: 25:     RGBLed_SetDiode(n, AColor, DiodeArray);
  4932  003348  C0B0  F0A6         	movff	FillScreen@AColor,RGBLed_SetDiode@AColor
  4933  00334C  C0B1  F0A7         	movff	FillScreen@AColor+1,RGBLed_SetDiode@AColor+1
  4934  003350  C0B2  F0A8         	movff	FillScreen@AColor+2,RGBLed_SetDiode@AColor+2
  4935  003354  C0B3  F0A9         	movff	FillScreen@AColor+3,RGBLed_SetDiode@AColor+3
  4936  003358  0E00               	movlw	low _DiodeArray
  4937  00335A  0100               	movlb	0	; () banked
  4938  00335C  6FAA               	movwf	RGBLed_SetDiode@AdiodeArray& (0+255),b
  4939  00335E  0E01               	movlw	high _DiodeArray
  4940  003360  6FAB               	movwf	(RGBLed_SetDiode@AdiodeArray+1)& (0+255),b
  4941  003362  5034               	movf	FillScreen@n^0,w,c
  4942  003364  EC66  F014         	call	_RGBLed_SetDiode
  4943  003368                     
  4944                           ;RGB4x4Click.c: 26:   }
  4945  003368  2A34               	incf	FillScreen@n^0,f,c
  4946  00336A  0E10               	movlw	16
  4947  00336C  6434               	cpfsgt	FillScreen@n^0,c
  4948  00336E  EFBB  F019         	goto	u3851
  4949  003372  EFBD  F019         	goto	u3850
  4950  003376                     u3851:
  4951  003376  EFA4  F019         	goto	l5677
  4952  00337A                     u3850:
  4953  00337A  0012               	return		;funcret
  4954  00337C                     __end_of_FillScreen:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function _RGBLed_SetDiode *****************
  4958 ;; Defined at:
  4959 ;;		line 29 in file "RGB4x4Click.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  ANum            1    wreg     unsigned char 
  4962 ;;  AColor          4    0[BANK0 ] unsigned long 
  4963 ;;  AdiodeArray     2    4[BANK0 ] PTR unsigned long 
  4964 ;;		 -> DiodeArray(64), 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  ANum            1   49[COMRAM] unsigned char 
  4967 ;;  i               1   50[COMRAM] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4977 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;Total ram usage:       12 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    8
  4984 ;; This function calls:
  4985 ;;		_RGBLed_InitDiode
  4986 ;;		_RGBLed_ResetDelay
  4987 ;;		_RGBLed_SetColor
  4988 ;; This function is called by:
  4989 ;;		_FillScreen
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text35
  4994  0028CC                     __ptext35:
  4995                           	callstack 0
  4996  0028CC                     _RGBLed_SetDiode:
  4997                           	callstack 14
  4998                           
  4999                           ;incstack = 0
  5000                           ;RGBLed_SetDiode@ANum stored from wreg
  5001  0028CC  6E32               	movwf	RGBLed_SetDiode@ANum^0,c
  5002  0028CE                     
  5003                           ;RGB4x4Click.c: 30:   uint8_t i;;RGB4x4Click.c: 31:   RGBLed_InitDiode(AColor, &AdiodeAr
      +                          ray[ANum - 1]);
  5004  0028CE  C0A6  F019         	movff	RGBLed_SetDiode@AColor,RGBLed_InitDiode@ARGBColor
  5005  0028D2  C0A7  F01A         	movff	RGBLed_SetDiode@AColor+1,RGBLed_InitDiode@ARGBColor+1
  5006  0028D6  C0A8  F01B         	movff	RGBLed_SetDiode@AColor+2,RGBLed_InitDiode@ARGBColor+2
  5007  0028DA  C0A9  F01C         	movff	RGBLed_SetDiode@AColor+3,RGBLed_InitDiode@ARGBColor+3
  5008  0028DE  5032               	movf	RGBLed_SetDiode@ANum^0,w,c
  5009  0028E0  0100               	movlb	0	; () banked
  5010  0028E2  6FAC               	movwf	??_RGBLed_SetDiode& (0+255),b
  5011  0028E4  6BAD               	clrf	(??_RGBLed_SetDiode+1)& (0+255),b
  5012  0028E6  90D8               	bcf	status,0,c
  5013  0028E8  37AC               	rlcf	??_RGBLed_SetDiode& (0+255),f,b
  5014  0028EA  37AD               	rlcf	(??_RGBLed_SetDiode+1)& (0+255),f,b
  5015  0028EC  90D8               	bcf	status,0,c
  5016  0028EE  37AC               	rlcf	??_RGBLed_SetDiode& (0+255),f,b
  5017  0028F0  37AD               	rlcf	(??_RGBLed_SetDiode+1)& (0+255),f,b
  5018  0028F2  C0AA  F0AE         	movff	RGBLed_SetDiode@AdiodeArray,??_RGBLed_SetDiode+2
  5019  0028F6  C0AB  F0AF         	movff	RGBLed_SetDiode@AdiodeArray+1,??_RGBLed_SetDiode+3
  5020  0028FA  51AC               	movf	??_RGBLed_SetDiode& (0+255),w,b
  5021  0028FC  27AE               	addwf	(??_RGBLed_SetDiode+2)& (0+255),f,b
  5022  0028FE  51AD               	movf	(??_RGBLed_SetDiode+1)& (0+255),w,b
  5023  002900  23AF               	addwfc	(??_RGBLed_SetDiode+3)& (0+255),f,b
  5024  002902  0EFC               	movlw	252
  5025  002904  25AE               	addwf	(??_RGBLed_SetDiode+2)& (0+255),w,b
  5026  002906  6E1D               	movwf	RGBLed_InitDiode@AdiodeArray^0,c
  5027  002908  0EFF               	movlw	255
  5028  00290A  21AF               	addwfc	(??_RGBLed_SetDiode+3)& (0+255),w,b
  5029  00290C  6E1E               	movwf	(RGBLed_InitDiode@AdiodeArray+1)^0,c
  5030  00290E  ECAC  F014         	call	_RGBLed_InitDiode	;wreg free
  5031  002912                     
  5032                           ;RGB4x4Click.c: 32:   for (i = 0; i < 16; i++) {
  5033  002912  0E00               	movlw	0
  5034  002914  6E33               	movwf	RGBLed_SetDiode@i^0,c
  5035  002916                     l5661:
  5036                           
  5037                           ;RGB4x4Click.c: 33:       RGBLed_SetColor(&AdiodeArray[i]);
  5038  002916  5033               	movf	RGBLed_SetDiode@i^0,w,c
  5039  002918  0D04               	mullw	4
  5040  00291A  CFF3 F0AC          	movff	prodl,??_RGBLed_SetDiode
  5041  00291E  CFF4 F0AD          	movff	prodh,??_RGBLed_SetDiode+1
  5042  002922  0100               	movlb	0	; () banked
  5043  002924  51AC               	movf	??_RGBLed_SetDiode& (0+255),w,b
  5044  002926  25AA               	addwf	RGBLed_SetDiode@AdiodeArray& (0+255),w,b
  5045  002928  6E16               	movwf	RGBLed_SetColor@AdiodeArray^0,c
  5046  00292A  51AD               	movf	(??_RGBLed_SetDiode+1)& (0+255),w,b
  5047  00292C  21AB               	addwfc	(RGBLed_SetDiode@AdiodeArray+1)& (0+255),w,b
  5048  00292E  6E17               	movwf	(RGBLed_SetColor@AdiodeArray+1)^0,c
  5049  002930  EC9A  F007         	call	_RGBLed_SetColor	;wreg free
  5050  002934                     
  5051                           ;RGB4x4Click.c: 34:   }
  5052  002934  2A33               	incf	RGBLed_SetDiode@i^0,f,c
  5053  002936  0E0F               	movlw	15
  5054  002938  6433               	cpfsgt	RGBLed_SetDiode@i^0,c
  5055  00293A  EFA1  F014         	goto	u3841
  5056  00293E  EFA3  F014         	goto	u3840
  5057  002942                     u3841:
  5058  002942  EF8B  F014         	goto	l5661
  5059  002946                     u3840:
  5060  002946                     
  5061                           ;RGB4x4Click.c: 36:   RGBLed_SetColor(&AdiodeArray[0]);
  5062  002946  C0AA  F016         	movff	RGBLed_SetDiode@AdiodeArray,RGBLed_SetColor@AdiodeArray
  5063  00294A  C0AB  F017         	movff	RGBLed_SetDiode@AdiodeArray+1,RGBLed_SetColor@AdiodeArray+1
  5064  00294E  EC9A  F007         	call	_RGBLed_SetColor	;wreg free
  5065  002952                     
  5066                           ;RGB4x4Click.c: 37:   RGBLed_ResetDelay();
  5067  002952  ECBB  F01B         	call	_RGBLed_ResetDelay	;wreg free
  5068  002956  0012               	return		;funcret
  5069  002958                     __end_of_RGBLed_SetDiode:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _RGBLed_SetColor *****************
  5073 ;; Defined at:
  5074 ;;		line 46 in file "RGB4x4Click.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  AdiodeArray     2   21[COMRAM] PTR unsigned long 
  5077 ;;		 -> DiodeArray(64), 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  tempData        4   23[COMRAM] unsigned long 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;Total ram usage:        6 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    6
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_RGBLed_SetDiode
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text36
  5104  000F34                     __ptext36:
  5105                           	callstack 0
  5106  000F34                     _RGBLed_SetColor:
  5107                           	callstack 15
  5108  000F34                     
  5109                           ;RGB4x4Click.c: 49:     uint32_t tempData = *AdiodeArray;
  5110  000F34  C016  FFD9         	movff	RGBLed_SetColor@AdiodeArray,fsr2l
  5111  000F38  C017  FFDA         	movff	RGBLed_SetColor@AdiodeArray+1,fsr2h
  5112  000F3C  CFDE F018          	movff	postinc2,RGBLed_SetColor@tempData
  5113  000F40  CFDE F019          	movff	postinc2,RGBLed_SetColor@tempData+1
  5114  000F44  CFDE F01A          	movff	postinc2,RGBLed_SetColor@tempData+2
  5115  000F48  CFDE F01B          	movff	postinc2,RGBLed_SetColor@tempData+3
  5116  000F4C                     
  5117                           ;RGB4x4Click.c: 50:     if(tempData & 1) {
  5118  000F4C  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5119  000F4E  EFAB  F007         	goto	u1931
  5120  000F52  EFAD  F007         	goto	u1930
  5121  000F56                     u1931:
  5122  000F56  EFB5  F007         	goto	l1291
  5123  000F5A                     u1930:
  5124  000F5A  8E82               	bsf	130,7,c	;volatile
  5125  000F5C  0E03               	movlw	3
  5126  000F5E                     u4167:
  5127  000F5E  2EE8               	decfsz	wreg,f,c
  5128  000F60  D7FE               	bra	u4167
  5129  000F62  F000               	nop	
  5130  000F64  9E82               	bcf	130,7,c	;volatile
  5131  000F66  EFBC  F007         	goto	l4049
  5132  000F6A                     l1291:
  5133  000F6A  8E82               	bsf	130,7,c	;volatile
  5134  000F6C  D000               	nop2		;2 cycle nop
  5135  000F6E  D000               	nop2		;2 cycle nop
  5136  000F70  F000               	nop	
  5137  000F72  9E82               	bcf	130,7,c	;volatile
  5138  000F74  D000               	nop2		;2 cycle nop
  5139  000F76  D000               	nop2		;2 cycle nop
  5140  000F78                     l4049:
  5141                           
  5142                           ;RGB4x4Click.c: 55:     tempData >>= 1;
  5143  000F78  90D8               	bcf	status,0,c
  5144  000F7A  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5145  000F7C  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5146  000F7E  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5147  000F80  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5148  000F82                     
  5149                           ;RGB4x4Click.c: 56:     if(tempData & 1) {
  5150  000F82  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5151  000F84  EFC6  F007         	goto	u1941
  5152  000F88  EFC8  F007         	goto	u1940
  5153  000F8C                     u1941:
  5154  000F8C  EFD0  F007         	goto	l1301
  5155  000F90                     u1940:
  5156  000F90  8E82               	bsf	130,7,c	;volatile
  5157  000F92  0E03               	movlw	3
  5158  000F94                     u4177:
  5159  000F94  2EE8               	decfsz	wreg,f,c
  5160  000F96  D7FE               	bra	u4177
  5161  000F98  F000               	nop	
  5162  000F9A  9E82               	bcf	130,7,c	;volatile
  5163  000F9C  EFD7  F007         	goto	l4057
  5164  000FA0                     l1301:
  5165  000FA0  8E82               	bsf	130,7,c	;volatile
  5166  000FA2  D000               	nop2		;2 cycle nop
  5167  000FA4  D000               	nop2		;2 cycle nop
  5168  000FA6  F000               	nop	
  5169  000FA8  9E82               	bcf	130,7,c	;volatile
  5170  000FAA  D000               	nop2		;2 cycle nop
  5171  000FAC  D000               	nop2		;2 cycle nop
  5172  000FAE                     l4057:
  5173                           
  5174                           ;RGB4x4Click.c: 61:     tempData >>= 1;
  5175  000FAE  90D8               	bcf	status,0,c
  5176  000FB0  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5177  000FB2  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5178  000FB4  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5179  000FB6  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5180  000FB8                     
  5181                           ;RGB4x4Click.c: 62:     if(tempData & 1) {
  5182  000FB8  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5183  000FBA  EFE1  F007         	goto	u1951
  5184  000FBE  EFE3  F007         	goto	u1950
  5185  000FC2                     u1951:
  5186  000FC2  EFEB  F007         	goto	l1311
  5187  000FC6                     u1950:
  5188  000FC6  8E82               	bsf	130,7,c	;volatile
  5189  000FC8  0E03               	movlw	3
  5190  000FCA                     u4187:
  5191  000FCA  2EE8               	decfsz	wreg,f,c
  5192  000FCC  D7FE               	bra	u4187
  5193  000FCE  F000               	nop	
  5194  000FD0  9E82               	bcf	130,7,c	;volatile
  5195  000FD2  EFF2  F007         	goto	l4065
  5196  000FD6                     l1311:
  5197  000FD6  8E82               	bsf	130,7,c	;volatile
  5198  000FD8  D000               	nop2		;2 cycle nop
  5199  000FDA  D000               	nop2		;2 cycle nop
  5200  000FDC  F000               	nop	
  5201  000FDE  9E82               	bcf	130,7,c	;volatile
  5202  000FE0  D000               	nop2		;2 cycle nop
  5203  000FE2  D000               	nop2		;2 cycle nop
  5204  000FE4                     l4065:
  5205                           
  5206                           ;RGB4x4Click.c: 67:     tempData >>= 1;
  5207  000FE4  90D8               	bcf	status,0,c
  5208  000FE6  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5209  000FE8  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5210  000FEA  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5211  000FEC  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5212  000FEE                     
  5213                           ;RGB4x4Click.c: 68:     if(tempData & 1) {
  5214  000FEE  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5215  000FF0  EFFC  F007         	goto	u1961
  5216  000FF4  EFFE  F007         	goto	u1960
  5217  000FF8                     u1961:
  5218  000FF8  EF06  F008         	goto	l1321
  5219  000FFC                     u1960:
  5220  000FFC  8E82               	bsf	130,7,c	;volatile
  5221  000FFE  0E03               	movlw	3
  5222  001000                     u4197:
  5223  001000  2EE8               	decfsz	wreg,f,c
  5224  001002  D7FE               	bra	u4197
  5225  001004  F000               	nop	
  5226  001006  9E82               	bcf	130,7,c	;volatile
  5227  001008  EF0D  F008         	goto	l4073
  5228  00100C                     l1321:
  5229  00100C  8E82               	bsf	130,7,c	;volatile
  5230  00100E  D000               	nop2		;2 cycle nop
  5231  001010  D000               	nop2		;2 cycle nop
  5232  001012  F000               	nop	
  5233  001014  9E82               	bcf	130,7,c	;volatile
  5234  001016  D000               	nop2		;2 cycle nop
  5235  001018  D000               	nop2		;2 cycle nop
  5236  00101A                     l4073:
  5237                           
  5238                           ;RGB4x4Click.c: 73:     tempData >>= 1;
  5239  00101A  90D8               	bcf	status,0,c
  5240  00101C  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5241  00101E  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5242  001020  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5243  001022  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5244  001024                     
  5245                           ;RGB4x4Click.c: 74:     if(tempData & 1) {
  5246  001024  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5247  001026  EF17  F008         	goto	u1971
  5248  00102A  EF19  F008         	goto	u1970
  5249  00102E                     u1971:
  5250  00102E  EF21  F008         	goto	l1331
  5251  001032                     u1970:
  5252  001032  8E82               	bsf	130,7,c	;volatile
  5253  001034  0E03               	movlw	3
  5254  001036                     u4207:
  5255  001036  2EE8               	decfsz	wreg,f,c
  5256  001038  D7FE               	bra	u4207
  5257  00103A  F000               	nop	
  5258  00103C  9E82               	bcf	130,7,c	;volatile
  5259  00103E  EF28  F008         	goto	l4081
  5260  001042                     l1331:
  5261  001042  8E82               	bsf	130,7,c	;volatile
  5262  001044  D000               	nop2		;2 cycle nop
  5263  001046  D000               	nop2		;2 cycle nop
  5264  001048  F000               	nop	
  5265  00104A  9E82               	bcf	130,7,c	;volatile
  5266  00104C  D000               	nop2		;2 cycle nop
  5267  00104E  D000               	nop2		;2 cycle nop
  5268  001050                     l4081:
  5269                           
  5270                           ;RGB4x4Click.c: 79:     tempData >>= 1;
  5271  001050  90D8               	bcf	status,0,c
  5272  001052  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5273  001054  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5274  001056  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5275  001058  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5276  00105A                     
  5277                           ;RGB4x4Click.c: 80:     if(tempData & 1) {
  5278  00105A  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5279  00105C  EF32  F008         	goto	u1981
  5280  001060  EF34  F008         	goto	u1980
  5281  001064                     u1981:
  5282  001064  EF3C  F008         	goto	l1341
  5283  001068                     u1980:
  5284  001068  8E82               	bsf	130,7,c	;volatile
  5285  00106A  0E03               	movlw	3
  5286  00106C                     u4217:
  5287  00106C  2EE8               	decfsz	wreg,f,c
  5288  00106E  D7FE               	bra	u4217
  5289  001070  F000               	nop	
  5290  001072  9E82               	bcf	130,7,c	;volatile
  5291  001074  EF43  F008         	goto	l4089
  5292  001078                     l1341:
  5293  001078  8E82               	bsf	130,7,c	;volatile
  5294  00107A  D000               	nop2		;2 cycle nop
  5295  00107C  D000               	nop2		;2 cycle nop
  5296  00107E  F000               	nop	
  5297  001080  9E82               	bcf	130,7,c	;volatile
  5298  001082  D000               	nop2		;2 cycle nop
  5299  001084  D000               	nop2		;2 cycle nop
  5300  001086                     l4089:
  5301                           
  5302                           ;RGB4x4Click.c: 85:     tempData >>= 1;
  5303  001086  90D8               	bcf	status,0,c
  5304  001088  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5305  00108A  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5306  00108C  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5307  00108E  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5308  001090                     
  5309                           ;RGB4x4Click.c: 86:     if(tempData & 1) {
  5310  001090  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5311  001092  EF4D  F008         	goto	u1991
  5312  001096  EF4F  F008         	goto	u1990
  5313  00109A                     u1991:
  5314  00109A  EF57  F008         	goto	l1351
  5315  00109E                     u1990:
  5316  00109E  8E82               	bsf	130,7,c	;volatile
  5317  0010A0  0E03               	movlw	3
  5318  0010A2                     u4227:
  5319  0010A2  2EE8               	decfsz	wreg,f,c
  5320  0010A4  D7FE               	bra	u4227
  5321  0010A6  F000               	nop	
  5322  0010A8  9E82               	bcf	130,7,c	;volatile
  5323  0010AA  EF5E  F008         	goto	l4097
  5324  0010AE                     l1351:
  5325  0010AE  8E82               	bsf	130,7,c	;volatile
  5326  0010B0  D000               	nop2		;2 cycle nop
  5327  0010B2  D000               	nop2		;2 cycle nop
  5328  0010B4  F000               	nop	
  5329  0010B6  9E82               	bcf	130,7,c	;volatile
  5330  0010B8  D000               	nop2		;2 cycle nop
  5331  0010BA  D000               	nop2		;2 cycle nop
  5332  0010BC                     l4097:
  5333                           
  5334                           ;RGB4x4Click.c: 91:     tempData >>= 1;
  5335  0010BC  90D8               	bcf	status,0,c
  5336  0010BE  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5337  0010C0  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5338  0010C2  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5339  0010C4  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5340  0010C6                     
  5341                           ;RGB4x4Click.c: 92:     if(tempData & 1) {
  5342  0010C6  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5343  0010C8  EF68  F008         	goto	u2001
  5344  0010CC  EF6A  F008         	goto	u2000
  5345  0010D0                     u2001:
  5346  0010D0  EF72  F008         	goto	l1361
  5347  0010D4                     u2000:
  5348  0010D4  8E82               	bsf	130,7,c	;volatile
  5349  0010D6  0E03               	movlw	3
  5350  0010D8                     u4237:
  5351  0010D8  2EE8               	decfsz	wreg,f,c
  5352  0010DA  D7FE               	bra	u4237
  5353  0010DC  F000               	nop	
  5354  0010DE  9E82               	bcf	130,7,c	;volatile
  5355  0010E0  EF79  F008         	goto	l4105
  5356  0010E4                     l1361:
  5357  0010E4  8E82               	bsf	130,7,c	;volatile
  5358  0010E6  D000               	nop2		;2 cycle nop
  5359  0010E8  D000               	nop2		;2 cycle nop
  5360  0010EA  F000               	nop	
  5361  0010EC  9E82               	bcf	130,7,c	;volatile
  5362  0010EE  D000               	nop2		;2 cycle nop
  5363  0010F0  D000               	nop2		;2 cycle nop
  5364  0010F2                     l4105:
  5365                           
  5366                           ;RGB4x4Click.c: 97:     tempData >>= 1;
  5367  0010F2  90D8               	bcf	status,0,c
  5368  0010F4  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5369  0010F6  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5370  0010F8  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5371  0010FA  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5372  0010FC                     
  5373                           ;RGB4x4Click.c: 98:     if(tempData & 1) {
  5374  0010FC  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5375  0010FE  EF83  F008         	goto	u2011
  5376  001102  EF85  F008         	goto	u2010
  5377  001106                     u2011:
  5378  001106  EF8D  F008         	goto	l1371
  5379  00110A                     u2010:
  5380  00110A  8E82               	bsf	130,7,c	;volatile
  5381  00110C  0E03               	movlw	3
  5382  00110E                     u4247:
  5383  00110E  2EE8               	decfsz	wreg,f,c
  5384  001110  D7FE               	bra	u4247
  5385  001112  F000               	nop	
  5386  001114  9E82               	bcf	130,7,c	;volatile
  5387  001116  EF94  F008         	goto	l4113
  5388  00111A                     l1371:
  5389  00111A  8E82               	bsf	130,7,c	;volatile
  5390  00111C  D000               	nop2		;2 cycle nop
  5391  00111E  D000               	nop2		;2 cycle nop
  5392  001120  F000               	nop	
  5393  001122  9E82               	bcf	130,7,c	;volatile
  5394  001124  D000               	nop2		;2 cycle nop
  5395  001126  D000               	nop2		;2 cycle nop
  5396  001128                     l4113:
  5397                           
  5398                           ;RGB4x4Click.c: 103:     tempData >>= 1;
  5399  001128  90D8               	bcf	status,0,c
  5400  00112A  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5401  00112C  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5402  00112E  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5403  001130  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5404  001132                     
  5405                           ;RGB4x4Click.c: 104:     if(tempData & 1) {
  5406  001132  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5407  001134  EF9E  F008         	goto	u2021
  5408  001138  EFA0  F008         	goto	u2020
  5409  00113C                     u2021:
  5410  00113C  EFA8  F008         	goto	l1381
  5411  001140                     u2020:
  5412  001140  8E82               	bsf	130,7,c	;volatile
  5413  001142  0E03               	movlw	3
  5414  001144                     u4257:
  5415  001144  2EE8               	decfsz	wreg,f,c
  5416  001146  D7FE               	bra	u4257
  5417  001148  F000               	nop	
  5418  00114A  9E82               	bcf	130,7,c	;volatile
  5419  00114C  EFAF  F008         	goto	l4121
  5420  001150                     l1381:
  5421  001150  8E82               	bsf	130,7,c	;volatile
  5422  001152  D000               	nop2		;2 cycle nop
  5423  001154  D000               	nop2		;2 cycle nop
  5424  001156  F000               	nop	
  5425  001158  9E82               	bcf	130,7,c	;volatile
  5426  00115A  D000               	nop2		;2 cycle nop
  5427  00115C  D000               	nop2		;2 cycle nop
  5428  00115E                     l4121:
  5429                           
  5430                           ;RGB4x4Click.c: 109:     tempData >>= 1;
  5431  00115E  90D8               	bcf	status,0,c
  5432  001160  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5433  001162  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5434  001164  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5435  001166  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5436  001168                     
  5437                           ;RGB4x4Click.c: 110:     if(tempData & 1) {
  5438  001168  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5439  00116A  EFB9  F008         	goto	u2031
  5440  00116E  EFBB  F008         	goto	u2030
  5441  001172                     u2031:
  5442  001172  EFC3  F008         	goto	l1391
  5443  001176                     u2030:
  5444  001176  8E82               	bsf	130,7,c	;volatile
  5445  001178  0E03               	movlw	3
  5446  00117A                     u4267:
  5447  00117A  2EE8               	decfsz	wreg,f,c
  5448  00117C  D7FE               	bra	u4267
  5449  00117E  F000               	nop	
  5450  001180  9E82               	bcf	130,7,c	;volatile
  5451  001182  EFCA  F008         	goto	l4129
  5452  001186                     l1391:
  5453  001186  8E82               	bsf	130,7,c	;volatile
  5454  001188  D000               	nop2		;2 cycle nop
  5455  00118A  D000               	nop2		;2 cycle nop
  5456  00118C  F000               	nop	
  5457  00118E  9E82               	bcf	130,7,c	;volatile
  5458  001190  D000               	nop2		;2 cycle nop
  5459  001192  D000               	nop2		;2 cycle nop
  5460  001194                     l4129:
  5461                           
  5462                           ;RGB4x4Click.c: 115:     tempData >>= 1;
  5463  001194  90D8               	bcf	status,0,c
  5464  001196  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5465  001198  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5466  00119A  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5467  00119C  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5468  00119E                     
  5469                           ;RGB4x4Click.c: 116:     if(tempData & 1) {
  5470  00119E  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5471  0011A0  EFD4  F008         	goto	u2041
  5472  0011A4  EFD6  F008         	goto	u2040
  5473  0011A8                     u2041:
  5474  0011A8  EFDE  F008         	goto	l1401
  5475  0011AC                     u2040:
  5476  0011AC  8E82               	bsf	130,7,c	;volatile
  5477  0011AE  0E03               	movlw	3
  5478  0011B0                     u4277:
  5479  0011B0  2EE8               	decfsz	wreg,f,c
  5480  0011B2  D7FE               	bra	u4277
  5481  0011B4  F000               	nop	
  5482  0011B6  9E82               	bcf	130,7,c	;volatile
  5483  0011B8  EFE5  F008         	goto	l4137
  5484  0011BC                     l1401:
  5485  0011BC  8E82               	bsf	130,7,c	;volatile
  5486  0011BE  D000               	nop2		;2 cycle nop
  5487  0011C0  D000               	nop2		;2 cycle nop
  5488  0011C2  F000               	nop	
  5489  0011C4  9E82               	bcf	130,7,c	;volatile
  5490  0011C6  D000               	nop2		;2 cycle nop
  5491  0011C8  D000               	nop2		;2 cycle nop
  5492  0011CA                     l4137:
  5493                           
  5494                           ;RGB4x4Click.c: 121:     tempData >>= 1;
  5495  0011CA  90D8               	bcf	status,0,c
  5496  0011CC  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5497  0011CE  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5498  0011D0  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5499  0011D2  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5500  0011D4                     
  5501                           ;RGB4x4Click.c: 122:     if(tempData & 1) {
  5502  0011D4  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5503  0011D6  EFEF  F008         	goto	u2051
  5504  0011DA  EFF1  F008         	goto	u2050
  5505  0011DE                     u2051:
  5506  0011DE  EFF9  F008         	goto	l1411
  5507  0011E2                     u2050:
  5508  0011E2  8E82               	bsf	130,7,c	;volatile
  5509  0011E4  0E03               	movlw	3
  5510  0011E6                     u4287:
  5511  0011E6  2EE8               	decfsz	wreg,f,c
  5512  0011E8  D7FE               	bra	u4287
  5513  0011EA  F000               	nop	
  5514  0011EC  9E82               	bcf	130,7,c	;volatile
  5515  0011EE  EF00  F009         	goto	l4145
  5516  0011F2                     l1411:
  5517  0011F2  8E82               	bsf	130,7,c	;volatile
  5518  0011F4  D000               	nop2		;2 cycle nop
  5519  0011F6  D000               	nop2		;2 cycle nop
  5520  0011F8  F000               	nop	
  5521  0011FA  9E82               	bcf	130,7,c	;volatile
  5522  0011FC  D000               	nop2		;2 cycle nop
  5523  0011FE  D000               	nop2		;2 cycle nop
  5524  001200                     l4145:
  5525                           
  5526                           ;RGB4x4Click.c: 127:     tempData >>= 1;
  5527  001200  90D8               	bcf	status,0,c
  5528  001202  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5529  001204  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5530  001206  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5531  001208  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5532  00120A                     
  5533                           ;RGB4x4Click.c: 128:     if(tempData & 1) {
  5534  00120A  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5535  00120C  EF0A  F009         	goto	u2061
  5536  001210  EF0C  F009         	goto	u2060
  5537  001214                     u2061:
  5538  001214  EF14  F009         	goto	l1421
  5539  001218                     u2060:
  5540  001218  8E82               	bsf	130,7,c	;volatile
  5541  00121A  0E03               	movlw	3
  5542  00121C                     u4297:
  5543  00121C  2EE8               	decfsz	wreg,f,c
  5544  00121E  D7FE               	bra	u4297
  5545  001220  F000               	nop	
  5546  001222  9E82               	bcf	130,7,c	;volatile
  5547  001224  EF1B  F009         	goto	l4153
  5548  001228                     l1421:
  5549  001228  8E82               	bsf	130,7,c	;volatile
  5550  00122A  D000               	nop2		;2 cycle nop
  5551  00122C  D000               	nop2		;2 cycle nop
  5552  00122E  F000               	nop	
  5553  001230  9E82               	bcf	130,7,c	;volatile
  5554  001232  D000               	nop2		;2 cycle nop
  5555  001234  D000               	nop2		;2 cycle nop
  5556  001236                     l4153:
  5557                           
  5558                           ;RGB4x4Click.c: 133:     tempData >>= 1;
  5559  001236  90D8               	bcf	status,0,c
  5560  001238  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5561  00123A  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5562  00123C  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5563  00123E  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5564  001240                     
  5565                           ;RGB4x4Click.c: 134:     if(tempData & 1) {
  5566  001240  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5567  001242  EF25  F009         	goto	u2071
  5568  001246  EF27  F009         	goto	u2070
  5569  00124A                     u2071:
  5570  00124A  EF2F  F009         	goto	l1431
  5571  00124E                     u2070:
  5572  00124E  8E82               	bsf	130,7,c	;volatile
  5573  001250  0E03               	movlw	3
  5574  001252                     u4307:
  5575  001252  2EE8               	decfsz	wreg,f,c
  5576  001254  D7FE               	bra	u4307
  5577  001256  F000               	nop	
  5578  001258  9E82               	bcf	130,7,c	;volatile
  5579  00125A  EF36  F009         	goto	l4161
  5580  00125E                     l1431:
  5581  00125E  8E82               	bsf	130,7,c	;volatile
  5582  001260  D000               	nop2		;2 cycle nop
  5583  001262  D000               	nop2		;2 cycle nop
  5584  001264  F000               	nop	
  5585  001266  9E82               	bcf	130,7,c	;volatile
  5586  001268  D000               	nop2		;2 cycle nop
  5587  00126A  D000               	nop2		;2 cycle nop
  5588  00126C                     l4161:
  5589                           
  5590                           ;RGB4x4Click.c: 139:     tempData >>= 1;
  5591  00126C  90D8               	bcf	status,0,c
  5592  00126E  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5593  001270  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5594  001272  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5595  001274  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5596  001276                     
  5597                           ;RGB4x4Click.c: 140:     if(tempData & 1) {
  5598  001276  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5599  001278  EF40  F009         	goto	u2081
  5600  00127C  EF42  F009         	goto	u2080
  5601  001280                     u2081:
  5602  001280  EF4A  F009         	goto	l1441
  5603  001284                     u2080:
  5604  001284  8E82               	bsf	130,7,c	;volatile
  5605  001286  0E03               	movlw	3
  5606  001288                     u4317:
  5607  001288  2EE8               	decfsz	wreg,f,c
  5608  00128A  D7FE               	bra	u4317
  5609  00128C  F000               	nop	
  5610  00128E  9E82               	bcf	130,7,c	;volatile
  5611  001290  EF51  F009         	goto	l4169
  5612  001294                     l1441:
  5613  001294  8E82               	bsf	130,7,c	;volatile
  5614  001296  D000               	nop2		;2 cycle nop
  5615  001298  D000               	nop2		;2 cycle nop
  5616  00129A  F000               	nop	
  5617  00129C  9E82               	bcf	130,7,c	;volatile
  5618  00129E  D000               	nop2		;2 cycle nop
  5619  0012A0  D000               	nop2		;2 cycle nop
  5620  0012A2                     l4169:
  5621                           
  5622                           ;RGB4x4Click.c: 145:     tempData >>= 1;
  5623  0012A2  90D8               	bcf	status,0,c
  5624  0012A4  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5625  0012A6  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5626  0012A8  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5627  0012AA  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5628  0012AC                     
  5629                           ;RGB4x4Click.c: 146:     if(tempData & 1) {
  5630  0012AC  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5631  0012AE  EF5B  F009         	goto	u2091
  5632  0012B2  EF5D  F009         	goto	u2090
  5633  0012B6                     u2091:
  5634  0012B6  EF65  F009         	goto	l1451
  5635  0012BA                     u2090:
  5636  0012BA  8E82               	bsf	130,7,c	;volatile
  5637  0012BC  0E03               	movlw	3
  5638  0012BE                     u4327:
  5639  0012BE  2EE8               	decfsz	wreg,f,c
  5640  0012C0  D7FE               	bra	u4327
  5641  0012C2  F000               	nop	
  5642  0012C4  9E82               	bcf	130,7,c	;volatile
  5643  0012C6  EF6C  F009         	goto	l4177
  5644  0012CA                     l1451:
  5645  0012CA  8E82               	bsf	130,7,c	;volatile
  5646  0012CC  D000               	nop2		;2 cycle nop
  5647  0012CE  D000               	nop2		;2 cycle nop
  5648  0012D0  F000               	nop	
  5649  0012D2  9E82               	bcf	130,7,c	;volatile
  5650  0012D4  D000               	nop2		;2 cycle nop
  5651  0012D6  D000               	nop2		;2 cycle nop
  5652  0012D8                     l4177:
  5653                           
  5654                           ;RGB4x4Click.c: 151:     tempData >>= 1;
  5655  0012D8  90D8               	bcf	status,0,c
  5656  0012DA  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5657  0012DC  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5658  0012DE  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5659  0012E0  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5660  0012E2                     
  5661                           ;RGB4x4Click.c: 152:     if(tempData & 1) {
  5662  0012E2  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5663  0012E4  EF76  F009         	goto	u2101
  5664  0012E8  EF78  F009         	goto	u2100
  5665  0012EC                     u2101:
  5666  0012EC  EF80  F009         	goto	l1461
  5667  0012F0                     u2100:
  5668  0012F0  8E82               	bsf	130,7,c	;volatile
  5669  0012F2  0E03               	movlw	3
  5670  0012F4                     u4337:
  5671  0012F4  2EE8               	decfsz	wreg,f,c
  5672  0012F6  D7FE               	bra	u4337
  5673  0012F8  F000               	nop	
  5674  0012FA  9E82               	bcf	130,7,c	;volatile
  5675  0012FC  EF87  F009         	goto	l4185
  5676  001300                     l1461:
  5677  001300  8E82               	bsf	130,7,c	;volatile
  5678  001302  D000               	nop2		;2 cycle nop
  5679  001304  D000               	nop2		;2 cycle nop
  5680  001306  F000               	nop	
  5681  001308  9E82               	bcf	130,7,c	;volatile
  5682  00130A  D000               	nop2		;2 cycle nop
  5683  00130C  D000               	nop2		;2 cycle nop
  5684  00130E                     l4185:
  5685                           
  5686                           ;RGB4x4Click.c: 157:     tempData >>= 1;
  5687  00130E  90D8               	bcf	status,0,c
  5688  001310  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5689  001312  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5690  001314  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5691  001316  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5692  001318                     
  5693                           ;RGB4x4Click.c: 158:     if(tempData & 1) {
  5694  001318  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5695  00131A  EF91  F009         	goto	u2111
  5696  00131E  EF93  F009         	goto	u2110
  5697  001322                     u2111:
  5698  001322  EF9B  F009         	goto	l1471
  5699  001326                     u2110:
  5700  001326  8E82               	bsf	130,7,c	;volatile
  5701  001328  0E03               	movlw	3
  5702  00132A                     u4347:
  5703  00132A  2EE8               	decfsz	wreg,f,c
  5704  00132C  D7FE               	bra	u4347
  5705  00132E  F000               	nop	
  5706  001330  9E82               	bcf	130,7,c	;volatile
  5707  001332  EFA2  F009         	goto	l4193
  5708  001336                     l1471:
  5709  001336  8E82               	bsf	130,7,c	;volatile
  5710  001338  D000               	nop2		;2 cycle nop
  5711  00133A  D000               	nop2		;2 cycle nop
  5712  00133C  F000               	nop	
  5713  00133E  9E82               	bcf	130,7,c	;volatile
  5714  001340  D000               	nop2		;2 cycle nop
  5715  001342  D000               	nop2		;2 cycle nop
  5716  001344                     l4193:
  5717                           
  5718                           ;RGB4x4Click.c: 163:     tempData >>= 1;
  5719  001344  90D8               	bcf	status,0,c
  5720  001346  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5721  001348  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5722  00134A  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5723  00134C  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5724  00134E                     
  5725                           ;RGB4x4Click.c: 164:     if(tempData & 1) {
  5726  00134E  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5727  001350  EFAC  F009         	goto	u2121
  5728  001354  EFAE  F009         	goto	u2120
  5729  001358                     u2121:
  5730  001358  EFB6  F009         	goto	l1481
  5731  00135C                     u2120:
  5732  00135C  8E82               	bsf	130,7,c	;volatile
  5733  00135E  0E03               	movlw	3
  5734  001360                     u4357:
  5735  001360  2EE8               	decfsz	wreg,f,c
  5736  001362  D7FE               	bra	u4357
  5737  001364  F000               	nop	
  5738  001366  9E82               	bcf	130,7,c	;volatile
  5739  001368  EFBD  F009         	goto	l4201
  5740  00136C                     l1481:
  5741  00136C  8E82               	bsf	130,7,c	;volatile
  5742  00136E  D000               	nop2		;2 cycle nop
  5743  001370  D000               	nop2		;2 cycle nop
  5744  001372  F000               	nop	
  5745  001374  9E82               	bcf	130,7,c	;volatile
  5746  001376  D000               	nop2		;2 cycle nop
  5747  001378  D000               	nop2		;2 cycle nop
  5748  00137A                     l4201:
  5749                           
  5750                           ;RGB4x4Click.c: 169:     tempData >>= 1;
  5751  00137A  90D8               	bcf	status,0,c
  5752  00137C  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5753  00137E  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5754  001380  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5755  001382  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5756  001384                     
  5757                           ;RGB4x4Click.c: 170:     if(tempData & 1) {
  5758  001384  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5759  001386  EFC7  F009         	goto	u2131
  5760  00138A  EFC9  F009         	goto	u2130
  5761  00138E                     u2131:
  5762  00138E  EFD1  F009         	goto	l1491
  5763  001392                     u2130:
  5764  001392  8E82               	bsf	130,7,c	;volatile
  5765  001394  0E03               	movlw	3
  5766  001396                     u4367:
  5767  001396  2EE8               	decfsz	wreg,f,c
  5768  001398  D7FE               	bra	u4367
  5769  00139A  F000               	nop	
  5770  00139C  9E82               	bcf	130,7,c	;volatile
  5771  00139E  EFD8  F009         	goto	l4209
  5772  0013A2                     l1491:
  5773  0013A2  8E82               	bsf	130,7,c	;volatile
  5774  0013A4  D000               	nop2		;2 cycle nop
  5775  0013A6  D000               	nop2		;2 cycle nop
  5776  0013A8  F000               	nop	
  5777  0013AA  9E82               	bcf	130,7,c	;volatile
  5778  0013AC  D000               	nop2		;2 cycle nop
  5779  0013AE  D000               	nop2		;2 cycle nop
  5780  0013B0                     l4209:
  5781                           
  5782                           ;RGB4x4Click.c: 175:     tempData >>= 1;
  5783  0013B0  90D8               	bcf	status,0,c
  5784  0013B2  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5785  0013B4  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5786  0013B6  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5787  0013B8  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5788  0013BA                     
  5789                           ;RGB4x4Click.c: 176:     if(tempData & 1) {
  5790  0013BA  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5791  0013BC  EFE2  F009         	goto	u2141
  5792  0013C0  EFE4  F009         	goto	u2140
  5793  0013C4                     u2141:
  5794  0013C4  EFEC  F009         	goto	l1501
  5795  0013C8                     u2140:
  5796  0013C8  8E82               	bsf	130,7,c	;volatile
  5797  0013CA  0E03               	movlw	3
  5798  0013CC                     u4377:
  5799  0013CC  2EE8               	decfsz	wreg,f,c
  5800  0013CE  D7FE               	bra	u4377
  5801  0013D0  F000               	nop	
  5802  0013D2  9E82               	bcf	130,7,c	;volatile
  5803  0013D4  EFF3  F009         	goto	l4217
  5804  0013D8                     l1501:
  5805  0013D8  8E82               	bsf	130,7,c	;volatile
  5806  0013DA  D000               	nop2		;2 cycle nop
  5807  0013DC  D000               	nop2		;2 cycle nop
  5808  0013DE  F000               	nop	
  5809  0013E0  9E82               	bcf	130,7,c	;volatile
  5810  0013E2  D000               	nop2		;2 cycle nop
  5811  0013E4  D000               	nop2		;2 cycle nop
  5812  0013E6                     l4217:
  5813                           
  5814                           ;RGB4x4Click.c: 181:     tempData >>= 1;
  5815  0013E6  90D8               	bcf	status,0,c
  5816  0013E8  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5817  0013EA  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5818  0013EC  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5819  0013EE  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5820  0013F0                     
  5821                           ;RGB4x4Click.c: 182:     if(tempData & 1) {
  5822  0013F0  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5823  0013F2  EFFD  F009         	goto	u2151
  5824  0013F6  EFFF  F009         	goto	u2150
  5825  0013FA                     u2151:
  5826  0013FA  EF07  F00A         	goto	l1511
  5827  0013FE                     u2150:
  5828  0013FE  8E82               	bsf	130,7,c	;volatile
  5829  001400  0E03               	movlw	3
  5830  001402                     u4387:
  5831  001402  2EE8               	decfsz	wreg,f,c
  5832  001404  D7FE               	bra	u4387
  5833  001406  F000               	nop	
  5834  001408  9E82               	bcf	130,7,c	;volatile
  5835  00140A  EF0E  F00A         	goto	l4225
  5836  00140E                     l1511:
  5837  00140E  8E82               	bsf	130,7,c	;volatile
  5838  001410  D000               	nop2		;2 cycle nop
  5839  001412  D000               	nop2		;2 cycle nop
  5840  001414  F000               	nop	
  5841  001416  9E82               	bcf	130,7,c	;volatile
  5842  001418  D000               	nop2		;2 cycle nop
  5843  00141A  D000               	nop2		;2 cycle nop
  5844  00141C                     l4225:
  5845                           
  5846                           ;RGB4x4Click.c: 187:     tempData >>= 1;
  5847  00141C  90D8               	bcf	status,0,c
  5848  00141E  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5849  001420  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5850  001422  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5851  001424  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5852  001426                     
  5853                           ;RGB4x4Click.c: 188:     if(tempData & 1) {
  5854  001426  A018               	btfss	RGBLed_SetColor@tempData^0,0,c
  5855  001428  EF18  F00A         	goto	u2161
  5856  00142C  EF1A  F00A         	goto	u2160
  5857  001430                     u2161:
  5858  001430  EF22  F00A         	goto	l1521
  5859  001434                     u2160:
  5860  001434  8E82               	bsf	130,7,c	;volatile
  5861  001436  0E03               	movlw	3
  5862  001438                     u4397:
  5863  001438  2EE8               	decfsz	wreg,f,c
  5864  00143A  D7FE               	bra	u4397
  5865  00143C  F000               	nop	
  5866  00143E  9E82               	bcf	130,7,c	;volatile
  5867  001440  EF29  F00A         	goto	l4233
  5868  001444                     l1521:
  5869  001444  8E82               	bsf	130,7,c	;volatile
  5870  001446  D000               	nop2		;2 cycle nop
  5871  001448  D000               	nop2		;2 cycle nop
  5872  00144A  F000               	nop	
  5873  00144C  9E82               	bcf	130,7,c	;volatile
  5874  00144E  D000               	nop2		;2 cycle nop
  5875  001450  D000               	nop2		;2 cycle nop
  5876  001452                     l4233:
  5877                           
  5878                           ;RGB4x4Click.c: 193:     tempData >>= 1;
  5879  001452  90D8               	bcf	status,0,c
  5880  001454  321B               	rrcf	(RGBLed_SetColor@tempData+3)^0,f,c
  5881  001456  321A               	rrcf	(RGBLed_SetColor@tempData+2)^0,f,c
  5882  001458  3219               	rrcf	(RGBLed_SetColor@tempData+1)^0,f,c
  5883  00145A  3218               	rrcf	RGBLed_SetColor@tempData^0,f,c
  5884  00145C  0012               	return		;funcret
  5885  00145E                     __end_of_RGBLed_SetColor:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function _RGBLed_ResetDelay *****************
  5889 ;; Defined at:
  5890 ;;		line 196 in file "RGB4x4Click.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5908 ;;Total ram usage:        0 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    6
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_RGBLed_SetDiode
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text37
  5919  003776                     __ptext37:
  5920                           	callstack 0
  5921  003776                     _RGBLed_ResetDelay:
  5922                           	callstack 15
  5923  003776                     
  5924                           ;RGB4x4Click.c: 197:   _delay((unsigned long)((50)*(64000000/4000000.0)));
  5925  003776  0EA0               	movlw	160
  5926  003778                     u4407:
  5927  003778  D000               	nop2	
  5928  00377A  2EE8               	decfsz	wreg,f,c
  5929  00377C  D7FD               	bra	u4407
  5930                           
  5931                           ;RGB4x4Click.c: 198:   _delay((unsigned long)((10)*(64000000/4000000.0)));
  5932  00377E  0E35               	movlw	53
  5933  003780                     u4417:
  5934  003780  2EE8               	decfsz	wreg,f,c
  5935  003782  D7FE               	bra	u4417
  5936  003784  F000               	nop	
  5937  003786  0012               	return		;funcret
  5938  003788                     __end_of_RGBLed_ResetDelay:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _RGBLed_InitDiode *****************
  5942 ;; Defined at:
  5943 ;;		line 40 in file "RGB4x4Click.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  ARGBColor       4   24[COMRAM] unsigned long 
  5946 ;;  AdiodeArray     2   28[COMRAM] PTR unsigned long 
  5947 ;;		 -> DiodeArray(64), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5959 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;Total ram usage:       25 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    7
  5966 ;; This function calls:
  5967 ;;		_reverse
  5968 ;; This function is called by:
  5969 ;;		_RGBLed_SetDiode
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text38
  5974  002958                     __ptext38:
  5975                           	callstack 0
  5976  002958                     _RGBLed_InitDiode:
  5977                           	callstack 14
  5978  002958                     
  5979                           ;RGB4x4Click.c: 42:     *AdiodeArray = ((uint32_t)(reverse(ARGBColor & 0x000000FF)) << 1
      +                          6) |
  5980  002958  501B               	movf	(RGBLed_InitDiode@ARGBColor+2)^0,w,c
  5981  00295A  EC18  F017         	call	_reverse
  5982  00295E  6E1F               	movwf	??_RGBLed_InitDiode^0,c
  5983  002960  C01F  F020         	movff	??_RGBLed_InitDiode,??_RGBLed_InitDiode+1
  5984  002964  6A21               	clrf	(??_RGBLed_InitDiode+2)^0,c
  5985  002966  6A22               	clrf	(??_RGBLed_InitDiode+3)^0,c
  5986  002968  6A23               	clrf	(??_RGBLed_InitDiode+4)^0,c
  5987  00296A  C022  F023         	movff	??_RGBLed_InitDiode+3,??_RGBLed_InitDiode+4
  5988  00296E  C021  F022         	movff	??_RGBLed_InitDiode+2,??_RGBLed_InitDiode+3
  5989  002972  C020  F021         	movff	??_RGBLed_InitDiode+1,??_RGBLed_InitDiode+2
  5990  002976  6A20               	clrf	(??_RGBLed_InitDiode+1)^0,c
  5991  002978  5019               	movf	RGBLed_InitDiode@ARGBColor^0,w,c
  5992  00297A  EC18  F017         	call	_reverse
  5993  00297E  6E24               	movwf	(??_RGBLed_InitDiode+5)^0,c
  5994  002980  C024  F025         	movff	??_RGBLed_InitDiode+5,??_RGBLed_InitDiode+6
  5995  002984  6A26               	clrf	(??_RGBLed_InitDiode+7)^0,c
  5996  002986  6A27               	clrf	(??_RGBLed_InitDiode+8)^0,c
  5997  002988  6A28               	clrf	(??_RGBLed_InitDiode+9)^0,c
  5998  00298A  C026  F028         	movff	??_RGBLed_InitDiode+7,??_RGBLed_InitDiode+9
  5999  00298E  C025  F027         	movff	??_RGBLed_InitDiode+6,??_RGBLed_InitDiode+8
  6000  002992  6A26               	clrf	(??_RGBLed_InitDiode+7)^0,c
  6001  002994  6A25               	clrf	(??_RGBLed_InitDiode+6)^0,c
  6002  002996  5020               	movf	(??_RGBLed_InitDiode+1)^0,w,c
  6003  002998  1025               	iorwf	(??_RGBLed_InitDiode+6)^0,w,c
  6004  00299A  6E29               	movwf	(??_RGBLed_InitDiode+10)^0,c
  6005  00299C  5021               	movf	(??_RGBLed_InitDiode+2)^0,w,c
  6006  00299E  1026               	iorwf	(??_RGBLed_InitDiode+7)^0,w,c
  6007  0029A0  6E2A               	movwf	(??_RGBLed_InitDiode+11)^0,c
  6008  0029A2  5022               	movf	(??_RGBLed_InitDiode+3)^0,w,c
  6009  0029A4  1027               	iorwf	(??_RGBLed_InitDiode+8)^0,w,c
  6010  0029A6  6E2B               	movwf	(??_RGBLed_InitDiode+12)^0,c
  6011  0029A8  5023               	movf	(??_RGBLed_InitDiode+4)^0,w,c
  6012  0029AA  1028               	iorwf	(??_RGBLed_InitDiode+9)^0,w,c
  6013  0029AC  6E2C               	movwf	(??_RGBLed_InitDiode+13)^0,c
  6014  0029AE  501A               	movf	(RGBLed_InitDiode@ARGBColor+1)^0,w,c
  6015  0029B0  EC18  F017         	call	_reverse
  6016  0029B4  6E2D               	movwf	(??_RGBLed_InitDiode+14)^0,c
  6017  0029B6  502D               	movf	(??_RGBLed_InitDiode+14)^0,w,c
  6018  0029B8  1029               	iorwf	(??_RGBLed_InitDiode+10)^0,w,c
  6019  0029BA  6E2E               	movwf	(??_RGBLed_InitDiode+15)^0,c
  6020  0029BC  502A               	movf	(??_RGBLed_InitDiode+11)^0,w,c
  6021  0029BE  6E2F               	movwf	(??_RGBLed_InitDiode+16)^0,c
  6022  0029C0  502B               	movf	(??_RGBLed_InitDiode+12)^0,w,c
  6023  0029C2  6E30               	movwf	(??_RGBLed_InitDiode+17)^0,c
  6024  0029C4  502C               	movf	(??_RGBLed_InitDiode+13)^0,w,c
  6025  0029C6  6E31               	movwf	(??_RGBLed_InitDiode+18)^0,c
  6026  0029C8  C01D  FFD9         	movff	RGBLed_InitDiode@AdiodeArray,fsr2l
  6027  0029CC  C01E  FFDA         	movff	RGBLed_InitDiode@AdiodeArray+1,fsr2h
  6028  0029D0  C02E  FFDE         	movff	??_RGBLed_InitDiode+15,postinc2
  6029  0029D4  C02F  FFDE         	movff	??_RGBLed_InitDiode+16,postinc2
  6030  0029D8  C030  FFDE         	movff	??_RGBLed_InitDiode+17,postinc2
  6031  0029DC  C031  FFDE         	movff	??_RGBLed_InitDiode+18,postinc2
  6032  0029E0  0012               	return		;funcret
  6033  0029E2                     __end_of_RGBLed_InitDiode:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _reverse *****************
  6037 ;; Defined at:
  6038 ;;		line 15 in file "RGB4x4Click.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  b               1    wreg     unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  b               1   23[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      unsigned char 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;Total ram usage:        3 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    6
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_RGBLed_InitDiode
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text39
  6067  002E30                     __ptext39:
  6068                           	callstack 0
  6069  002E30                     _reverse:
  6070                           	callstack 14
  6071                           
  6072                           ;incstack = 0
  6073                           ;reverse@b stored from wreg
  6074  002E30  6E18               	movwf	reverse@b^0,c
  6075  002E32                     
  6076                           ;RGB4x4Click.c: 16:    b = (b & 0xF0) >> 4 | (b & 0x0F) << 4;
  6077  002E32  C018  F016         	movff	reverse@b,??_reverse
  6078  002E36  0E0F               	movlw	15
  6079  002E38  1616               	andwf	??_reverse^0,f,c
  6080  002E3A  3A16               	swapf	??_reverse^0,f,c
  6081  002E3C  0EF0               	movlw	240
  6082  002E3E  1616               	andwf	??_reverse^0,f,c
  6083  002E40  3818               	swapf	reverse@b^0,w,c
  6084  002E42  0B0F               	andlw	15
  6085  002E44  0B0F               	andlw	15
  6086  002E46  1016               	iorwf	??_reverse^0,w,c
  6087  002E48  6E18               	movwf	reverse@b^0,c
  6088                           
  6089                           ;RGB4x4Click.c: 17:    b = (b & 0xCC) >> 2 | (b & 0x33) << 2;
  6090  002E4A  C018  F016         	movff	reverse@b,??_reverse
  6091  002E4E  0E33               	movlw	51
  6092  002E50  1616               	andwf	??_reverse^0,f,c
  6093  002E52  90D8               	bcf	status,0,c
  6094  002E54  3616               	rlcf	??_reverse^0,f,c
  6095  002E56  90D8               	bcf	status,0,c
  6096  002E58  3616               	rlcf	??_reverse^0,f,c
  6097  002E5A  4018               	rrncf	reverse@b^0,w,c
  6098  002E5C  42E8               	rrncf	wreg,f,c
  6099  002E5E  0B3F               	andlw	63
  6100  002E60  0B33               	andlw	51
  6101  002E62  1016               	iorwf	??_reverse^0,w,c
  6102  002E64  6E18               	movwf	reverse@b^0,c
  6103                           
  6104                           ;RGB4x4Click.c: 18:    b = (b & 0xAA) >> 1 | (b & 0x55) << 1;
  6105  002E66  C018  F016         	movff	reverse@b,??_reverse
  6106  002E6A  0E55               	movlw	85
  6107  002E6C  1616               	andwf	??_reverse^0,f,c
  6108  002E6E  90D8               	bcf	status,0,c
  6109  002E70  3416               	rlcf	??_reverse^0,w,c
  6110  002E72  6E17               	movwf	(??_reverse+1)^0,c
  6111  002E74  90D8               	bcf	status,0,c
  6112  002E76  3018               	rrcf	reverse@b^0,w,c
  6113  002E78  0B55               	andlw	85
  6114  002E7A  1017               	iorwf	(??_reverse+1)^0,w,c
  6115  002E7C  6E18               	movwf	reverse@b^0,c
  6116  002E7E                     
  6117                           ;RGB4x4Click.c: 19:    return b;
  6118  002E7E  5018               	movf	reverse@b^0,w,c
  6119  002E80  0012               	return		;funcret
  6120  002E82                     __end_of_reverse:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _getColorMask *****************
  6124 ;; Defined at:
  6125 ;;		line 141 in file "application.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  3   21[COMRAM] unsigned um
  6132 ;; Registers used:
  6133 ;;		wreg, status,2, status,0
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6139 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;Total ram usage:        5 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    6
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_processButtonRelease
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text40
  6154  002618                     __ptext40:
  6155                           	callstack 0
  6156  002618                     _getColorMask:
  6157                           	callstack 18
  6158  002618                     
  6159                           ;application.c: 143:     switch (gColorMask) {
  6160  002618  EF46  F013         	goto	l4423
  6161  00261C                     l4389:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;application.c: 145:             return 0xFF0000;
  6165  00261C  0E00               	movlw	0
  6166  00261E  6E16               	movwf	?_getColorMask^0,c
  6167  002620  0E00               	movlw	0
  6168  002622  6E17               	movwf	(?_getColorMask+1)^0,c
  6169  002624  0EFF               	movlw	255
  6170  002626  6E18               	movwf	(?_getColorMask+2)^0,c
  6171  002628  EF70  F013         	goto	l1241
  6172  00262C                     l4393:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;application.c: 147:             return 0x00FF00;
  6176  00262C  0E00               	movlw	0
  6177  00262E  6E16               	movwf	?_getColorMask^0,c
  6178  002630  0EFF               	movlw	255
  6179  002632  6E17               	movwf	(?_getColorMask+1)^0,c
  6180  002634  0E00               	movlw	0
  6181  002636  6E18               	movwf	(?_getColorMask+2)^0,c
  6182  002638  EF70  F013         	goto	l1241
  6183  00263C                     l4397:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;application.c: 149:             return 0x0000FF;
  6187  00263C  0EFF               	movlw	255
  6188  00263E  6E16               	movwf	?_getColorMask^0,c
  6189  002640  0E00               	movlw	0
  6190  002642  6E17               	movwf	(?_getColorMask+1)^0,c
  6191  002644  0E00               	movlw	0
  6192  002646  6E18               	movwf	(?_getColorMask+2)^0,c
  6193  002648  EF70  F013         	goto	l1241
  6194  00264C                     l4401:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;application.c: 151:             return 0xFFFF00;
  6198  00264C  0E00               	movlw	0
  6199  00264E  6E16               	movwf	?_getColorMask^0,c
  6200  002650  0EFF               	movlw	255
  6201  002652  6E17               	movwf	(?_getColorMask+1)^0,c
  6202  002654  0EFF               	movlw	255
  6203  002656  6E18               	movwf	(?_getColorMask+2)^0,c
  6204  002658  EF70  F013         	goto	l1241
  6205  00265C                     l4405:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;application.c: 153:             return 0x00FFFF;
  6209  00265C  0EFF               	movlw	255
  6210  00265E  6E16               	movwf	?_getColorMask^0,c
  6211  002660  0EFF               	movlw	255
  6212  002662  6E17               	movwf	(?_getColorMask+1)^0,c
  6213  002664  0E00               	movlw	0
  6214  002666  6E18               	movwf	(?_getColorMask+2)^0,c
  6215  002668  EF70  F013         	goto	l1241
  6216  00266C                     l4409:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;application.c: 155:             return 0xFF00FF;
  6220  00266C  0EFF               	movlw	255
  6221  00266E  6E16               	movwf	?_getColorMask^0,c
  6222  002670  0E00               	movlw	0
  6223  002672  6E17               	movwf	(?_getColorMask+1)^0,c
  6224  002674  0EFF               	movlw	255
  6225  002676  6E18               	movwf	(?_getColorMask+2)^0,c
  6226  002678  EF70  F013         	goto	l1241
  6227  00267C                     l4413:
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;application.c: 157:             return 0xFFFFFF;
  6231  00267C  0EFF               	movlw	255
  6232  00267E  6E16               	movwf	?_getColorMask^0,c
  6233  002680  0EFF               	movlw	255
  6234  002682  6E17               	movwf	(?_getColorMask+1)^0,c
  6235  002684  0EFF               	movlw	255
  6236  002686  6E18               	movwf	(?_getColorMask+2)^0,c
  6237  002688  EF70  F013         	goto	l1241
  6238  00268C                     l4423:
  6239  00268C  0100               	movlb	0	; () banked
  6240  00268E  5173               	movf	_gColorMask& (0+255),w,b	;volatile
  6241  002690  6E19               	movwf	??_getColorMask^0,c
  6242  002692  6A1A               	clrf	(??_getColorMask+1)^0,c
  6243                           
  6244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6245                           ; Switch size 1, requested type "simple"
  6246                           ; Number of cases is 1, Range of values is 0 to 0
  6247                           ; switch strategies available:
  6248                           ; Name         Instructions Cycles
  6249                           ; simple_byte            4     3 (average)
  6250                           ;	Chosen strategy is simple_byte
  6251  002694  501A               	movf	(??_getColorMask+1)^0,w,c
  6252  002696  0A00               	xorlw	0	; case 0
  6253  002698  B4D8               	btfsc	status,2,c
  6254  00269A  EF51  F013         	goto	l6041
  6255  00269E  EF0E  F013         	goto	l4389
  6256  0026A2                     l6041:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ; Switch size 1, requested type "simple"
  6260                           ; Number of cases is 7, Range of values is 0 to 6
  6261                           ; switch strategies available:
  6262                           ; Name         Instructions Cycles
  6263                           ; simple_byte           22    12 (average)
  6264                           ;	Chosen strategy is simple_byte
  6265  0026A2  5019               	movf	??_getColorMask^0,w,c
  6266  0026A4  0A00               	xorlw	0	; case 0
  6267  0026A6  B4D8               	btfsc	status,2,c
  6268  0026A8  EF0E  F013         	goto	l4389
  6269  0026AC  0A01               	xorlw	1	; case 1
  6270  0026AE  B4D8               	btfsc	status,2,c
  6271  0026B0  EF16  F013         	goto	l4393
  6272  0026B4  0A03               	xorlw	3	; case 2
  6273  0026B6  B4D8               	btfsc	status,2,c
  6274  0026B8  EF1E  F013         	goto	l4397
  6275  0026BC  0A01               	xorlw	1	; case 3
  6276  0026BE  B4D8               	btfsc	status,2,c
  6277  0026C0  EF26  F013         	goto	l4401
  6278  0026C4  0A07               	xorlw	7	; case 4
  6279  0026C6  B4D8               	btfsc	status,2,c
  6280  0026C8  EF2E  F013         	goto	l4405
  6281  0026CC  0A01               	xorlw	1	; case 5
  6282  0026CE  B4D8               	btfsc	status,2,c
  6283  0026D0  EF36  F013         	goto	l4409
  6284  0026D4  0A03               	xorlw	3	; case 6
  6285  0026D6  B4D8               	btfsc	status,2,c
  6286  0026D8  EF3E  F013         	goto	l4413
  6287  0026DC  EF0E  F013         	goto	l4389
  6288  0026E0                     l1241:
  6289                           
  6290                           ; BSR set to: 0
  6291  0026E0  0012               	return		;funcret
  6292  0026E2                     __end_of_getColorMask:
  6293                           	callstack 0
  6294                           
  6295 ;; *************** function _getBrightnessLevel *****************
  6296 ;; Defined at:
  6297 ;;		line 115 in file "application.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      unsigned char 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;Total ram usage:        2 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    6
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_processButtonRelease
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text41
  6326  002790                     __ptext41:
  6327                           	callstack 0
  6328  002790                     _getBrightnessLevel:
  6329                           	callstack 18
  6330  002790                     
  6331                           ;application.c: 117:     switch (gBrightnessLevel) {
  6332  002790  EFE5  F013         	goto	l4379
  6333  002794                     l4337:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;application.c: 119:             return 0x00;
  6337  002794  0E00               	movlw	0
  6338  002796  EF17  F014         	goto	l1226
  6339  00279A                     l4341:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;application.c: 121:             return 0x05;
  6343  00279A  0E05               	movlw	5
  6344  00279C  EF17  F014         	goto	l1226
  6345  0027A0                     l4345:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;application.c: 123:             return 0x0A;
  6349  0027A0  0E0A               	movlw	10
  6350  0027A2  EF17  F014         	goto	l1226
  6351  0027A6                     l4349:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;application.c: 125:             return 0x0F;
  6355  0027A6  0E0F               	movlw	15
  6356  0027A8  EF17  F014         	goto	l1226
  6357  0027AC                     l4353:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;application.c: 127:             return 0x14;
  6361  0027AC  0E14               	movlw	20
  6362  0027AE  EF17  F014         	goto	l1226
  6363  0027B2                     l4357:
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;application.c: 129:             return 0x19;
  6367  0027B2  0E19               	movlw	25
  6368  0027B4  EF17  F014         	goto	l1226
  6369  0027B8                     l4361:
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;application.c: 131:             return 0x1E;
  6373  0027B8  0E1E               	movlw	30
  6374  0027BA  EF17  F014         	goto	l1226
  6375  0027BE                     l4365:
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;application.c: 133:             return 0x23;
  6379  0027BE  0E23               	movlw	35
  6380  0027C0  EF17  F014         	goto	l1226
  6381  0027C4                     l4369:
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;application.c: 135:             return 0x28;
  6385  0027C4  0E28               	movlw	40
  6386  0027C6  EF17  F014         	goto	l1226
  6387  0027CA                     l4379:
  6388  0027CA  0100               	movlb	0	; () banked
  6389  0027CC  51EC               	movf	_gBrightnessLevel& (0+255),w,b	;volatile
  6390  0027CE  6E16               	movwf	??_getBrightnessLevel^0,c
  6391  0027D0  6A17               	clrf	(??_getBrightnessLevel+1)^0,c
  6392                           
  6393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6394                           ; Switch size 1, requested type "simple"
  6395                           ; Number of cases is 1, Range of values is 0 to 0
  6396                           ; switch strategies available:
  6397                           ; Name         Instructions Cycles
  6398                           ; simple_byte            4     3 (average)
  6399                           ;	Chosen strategy is simple_byte
  6400  0027D2  5017               	movf	(??_getBrightnessLevel+1)^0,w,c
  6401  0027D4  0A00               	xorlw	0	; case 0
  6402  0027D6  B4D8               	btfsc	status,2,c
  6403  0027D8  EFF0  F013         	goto	l6043
  6404  0027DC  EFCD  F013         	goto	l4341
  6405  0027E0                     l6043:
  6406                           
  6407                           ; BSR set to: 0
  6408                           ; Switch size 1, requested type "simple"
  6409                           ; Number of cases is 9, Range of values is 0 to 8
  6410                           ; switch strategies available:
  6411                           ; Name         Instructions Cycles
  6412                           ; simple_byte           28    15 (average)
  6413                           ;	Chosen strategy is simple_byte
  6414  0027E0  5016               	movf	??_getBrightnessLevel^0,w,c
  6415  0027E2  0A00               	xorlw	0	; case 0
  6416  0027E4  B4D8               	btfsc	status,2,c
  6417  0027E6  EFCA  F013         	goto	l4337
  6418  0027EA  0A01               	xorlw	1	; case 1
  6419  0027EC  B4D8               	btfsc	status,2,c
  6420  0027EE  EFCD  F013         	goto	l4341
  6421  0027F2  0A03               	xorlw	3	; case 2
  6422  0027F4  B4D8               	btfsc	status,2,c
  6423  0027F6  EFD0  F013         	goto	l4345
  6424  0027FA  0A01               	xorlw	1	; case 3
  6425  0027FC  B4D8               	btfsc	status,2,c
  6426  0027FE  EFD3  F013         	goto	l4349
  6427  002802  0A07               	xorlw	7	; case 4
  6428  002804  B4D8               	btfsc	status,2,c
  6429  002806  EFD6  F013         	goto	l4353
  6430  00280A  0A01               	xorlw	1	; case 5
  6431  00280C  B4D8               	btfsc	status,2,c
  6432  00280E  EFD9  F013         	goto	l4357
  6433  002812  0A03               	xorlw	3	; case 6
  6434  002814  B4D8               	btfsc	status,2,c
  6435  002816  EFDC  F013         	goto	l4361
  6436  00281A  0A01               	xorlw	1	; case 7
  6437  00281C  B4D8               	btfsc	status,2,c
  6438  00281E  EFDF  F013         	goto	l4365
  6439  002822  0A0F               	xorlw	15	; case 8
  6440  002824  B4D8               	btfsc	status,2,c
  6441  002826  EFE2  F013         	goto	l4369
  6442  00282A  EFCD  F013         	goto	l4341
  6443  00282E                     l1226:
  6444                           
  6445                           ; BSR set to: 0
  6446  00282E  0012               	return		;funcret
  6447  002830                     __end_of_getBrightnessLevel:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function _TMR3_WriteTimer *****************
  6451 ;; Defined at:
  6452 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  timerVal        2   21[COMRAM] unsigned short 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;Total ram usage:        2 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    6
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_processButtonRelease
  6477 ;;		_TMR3_Reload
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text42
  6482  0034D2                     __ptext42:
  6483                           	callstack 0
  6484  0034D2                     _TMR3_WriteTimer:
  6485                           	callstack 18
  6486  0034D2                     
  6487                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  6488  0034D2  A4C8               	btfss	200,2,c	;volatile
  6489  0034D4  EF6E  F01A         	goto	u2221
  6490  0034D8  EF70  F01A         	goto	u2220
  6491  0034DC                     u2221:
  6492  0034DC  EF78  F01A         	goto	l4331
  6493  0034E0                     u2220:
  6494  0034E0                     
  6495                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  6496  0034E0  90C8               	bcf	200,0,c	;volatile
  6497  0034E2                     
  6498                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  6499  0034E2  5017               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  6500  0034E4  6EC7               	movwf	199,c	;volatile
  6501  0034E6                     
  6502                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  6503  0034E6  C016  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  6504  0034EA                     
  6505                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  6506  0034EA  80C8               	bsf	200,0,c	;volatile
  6507                           
  6508                           ;mcc_generated_files/tmr3.c: 140:     }
  6509  0034EC  EF7C  F01A         	goto	l990
  6510  0034F0                     l4331:
  6511                           
  6512                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  6513  0034F0  5017               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  6514  0034F2  6EC7               	movwf	199,c	;volatile
  6515  0034F4                     
  6516                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  6517  0034F4  C016  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  6518  0034F8                     l990:
  6519  0034F8  0012               	return		;funcret
  6520  0034FA                     __end_of_TMR3_WriteTimer:
  6521                           	callstack 0
  6522                           
  6523 ;; *************** function _TMR3_StopTimer *****************
  6524 ;; Defined at:
  6525 ;;		line 105 in file "mcc_generated_files/tmr3.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      void 
  6532 ;; Registers used:
  6533 ;;		None
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;Total ram usage:        0 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    6
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_processButtonRelease
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text43
  6554  00382E                     __ptext43:
  6555                           	callstack 0
  6556  00382E                     _TMR3_StopTimer:
  6557                           	callstack 18
  6558  00382E                     
  6559                           ;mcc_generated_files/tmr3.c: 108:     T3CONbits.TMR3ON = 0;
  6560  00382E  90C8               	bcf	200,0,c	;volatile
  6561  003830  0012               	return		;funcret
  6562  003832                     __end_of_TMR3_StopTimer:
  6563                           	callstack 0
  6564                           
  6565 ;; *************** function _TMR3_ReadTimer *****************
  6566 ;; Defined at:
  6567 ;;		line 111 in file "mcc_generated_files/tmr3.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  readVal         2   25[COMRAM] unsigned short 
  6572 ;;  readValLow      1   28[COMRAM] unsigned char 
  6573 ;;  readValHigh     1   27[COMRAM] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  2   21[COMRAM] unsigned short 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6584 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6586 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;Total ram usage:        8 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    6
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_processButtonRelease
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text44
  6598  003690                     __ptext44:
  6599                           	callstack 0
  6600  003690                     _TMR3_ReadTimer:
  6601                           	callstack 18
  6602  003690                     
  6603                           ;mcc_generated_files/tmr3.c: 113:     uint16_t readVal;;mcc_generated_files/tmr3.c: 114:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr3.c: 115:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr3.c: 117:     T3CONbits.T3RD16 = 1;
  6604  003690  82C8               	bsf	200,1,c	;volatile
  6605                           
  6606                           ;mcc_generated_files/tmr3.c: 119:     readValLow = TMR3L;
  6607  003692  CFC6 F01D          	movff	4038,TMR3_ReadTimer@readValLow	;volatile
  6608                           
  6609                           ;mcc_generated_files/tmr3.c: 120:     readValHigh = TMR3H;
  6610  003696  CFC7 F01C          	movff	4039,TMR3_ReadTimer@readValHigh	;volatile
  6611  00369A                     
  6612                           ;mcc_generated_files/tmr3.c: 122:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  6613  00369A  501C               	movf	TMR3_ReadTimer@readValHigh^0,w,c
  6614  00369C  6E18               	movwf	??_TMR3_ReadTimer^0,c
  6615  00369E  501D               	movf	TMR3_ReadTimer@readValLow^0,w,c
  6616  0036A0  6E1A               	movwf	TMR3_ReadTimer@readVal^0,c
  6617  0036A2  C018  F01B         	movff	??_TMR3_ReadTimer,TMR3_ReadTimer@readVal+1
  6618  0036A6                     
  6619                           ;mcc_generated_files/tmr3.c: 124:     return readVal;
  6620  0036A6  C01A  F016         	movff	TMR3_ReadTimer@readVal,?_TMR3_ReadTimer
  6621  0036AA  C01B  F017         	movff	TMR3_ReadTimer@readVal+1,?_TMR3_ReadTimer+1
  6622  0036AE  0012               	return		;funcret
  6623  0036B0                     __end_of_TMR3_ReadTimer:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _TMR1_WriteTimer *****************
  6627 ;; Defined at:
  6628 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  timerVal        2   21[COMRAM] unsigned short 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;Total ram usage:        2 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    6
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_processButtonRelease
  6653 ;;		_TMR1_Reload
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text45
  6658  0034FA                     __ptext45:
  6659                           	callstack 0
  6660  0034FA                     _TMR1_WriteTimer:
  6661                           	callstack 18
  6662  0034FA                     
  6663                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  6664  0034FA  A4CE               	btfss	206,2,c	;volatile
  6665  0034FC  EF82  F01A         	goto	u2211
  6666  003500  EF84  F01A         	goto	u2210
  6667  003504                     u2211:
  6668  003504  EF8C  F01A         	goto	l4305
  6669  003508                     u2210:
  6670  003508                     
  6671                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  6672  003508  90CE               	bcf	206,0,c	;volatile
  6673  00350A                     
  6674                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  6675  00350A  5017               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  6676  00350C  6ECD               	movwf	205,c	;volatile
  6677  00350E                     
  6678                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  6679  00350E  C016  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6680  003512                     
  6681                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  6682  003512  80CE               	bsf	206,0,c	;volatile
  6683                           
  6684                           ;mcc_generated_files/tmr1.c: 140:     }
  6685  003514  EF90  F01A         	goto	l926
  6686  003518                     l4305:
  6687                           
  6688                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  6689  003518  5017               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  6690  00351A  6ECD               	movwf	205,c	;volatile
  6691  00351C                     
  6692                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  6693  00351C  C016  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6694  003520                     l926:
  6695  003520  0012               	return		;funcret
  6696  003522                     __end_of_TMR1_WriteTimer:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _TMR1_StopTimer *****************
  6700 ;; Defined at:
  6701 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		None
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;Total ram usage:        0 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    6
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_processButtonRelease
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text46
  6730  003832                     __ptext46:
  6731                           	callstack 0
  6732  003832                     _TMR1_StopTimer:
  6733                           	callstack 18
  6734  003832                     
  6735                           ;mcc_generated_files/tmr1.c: 108:     T1CONbits.TMR1ON = 0;
  6736  003832  90CE               	bcf	206,0,c	;volatile
  6737  003834  0012               	return		;funcret
  6738  003836                     __end_of_TMR1_StopTimer:
  6739                           	callstack 0
  6740                           
  6741 ;; *************** function _TMR1_ReadTimer *****************
  6742 ;; Defined at:
  6743 ;;		line 111 in file "mcc_generated_files/tmr1.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  readVal         2   25[COMRAM] unsigned short 
  6748 ;;  readValLow      1   28[COMRAM] unsigned char 
  6749 ;;  readValHigh     1   27[COMRAM] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  2   21[COMRAM] unsigned short 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;Total ram usage:        8 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    6
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_processButtonRelease
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text47
  6774  0036B0                     __ptext47:
  6775                           	callstack 0
  6776  0036B0                     _TMR1_ReadTimer:
  6777                           	callstack 18
  6778  0036B0                     
  6779                           ;mcc_generated_files/tmr1.c: 113:     uint16_t readVal;;mcc_generated_files/tmr1.c: 114:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 115:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 117:     T1CONbits.T1RD16 = 1;
  6780  0036B0  82CE               	bsf	206,1,c	;volatile
  6781                           
  6782                           ;mcc_generated_files/tmr1.c: 119:     readValLow = TMR1L;
  6783  0036B2  CFCC F01D          	movff	4044,TMR1_ReadTimer@readValLow	;volatile
  6784                           
  6785                           ;mcc_generated_files/tmr1.c: 120:     readValHigh = TMR1H;
  6786  0036B6  CFCD F01C          	movff	4045,TMR1_ReadTimer@readValHigh	;volatile
  6787  0036BA                     
  6788                           ;mcc_generated_files/tmr1.c: 122:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  6789  0036BA  501C               	movf	TMR1_ReadTimer@readValHigh^0,w,c
  6790  0036BC  6E18               	movwf	??_TMR1_ReadTimer^0,c
  6791  0036BE  501D               	movf	TMR1_ReadTimer@readValLow^0,w,c
  6792  0036C0  6E1A               	movwf	TMR1_ReadTimer@readVal^0,c
  6793  0036C2  C018  F01B         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  6794  0036C6                     
  6795                           ;mcc_generated_files/tmr1.c: 124:     return readVal;
  6796  0036C6  C01A  F016         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  6797  0036CA  C01B  F017         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  6798  0036CE  0012               	return		;funcret
  6799  0036D0                     __end_of_TMR1_ReadTimer:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _TMR3_StartTimer *****************
  6803 ;; Defined at:
  6804 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		None
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;Total ram usage:        0 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    6
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_processButtonTouch
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text48
  6833  003836                     __ptext48:
  6834                           	callstack 0
  6835  003836                     _TMR3_StartTimer:
  6836                           	callstack 18
  6837  003836                     
  6838                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  6839  003836  80C8               	bsf	200,0,c	;volatile
  6840  003838  0012               	return		;funcret
  6841  00383A                     __end_of_TMR3_StartTimer:
  6842                           	callstack 0
  6843                           
  6844 ;; *************** function _TMR1_StartTimer *****************
  6845 ;; Defined at:
  6846 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;		None
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		None
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;Total ram usage:        0 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    6
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_processButtonTouch
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text49
  6875  00383A                     __ptext49:
  6876                           	callstack 0
  6877  00383A                     _TMR1_StartTimer:
  6878                           	callstack 18
  6879  00383A                     
  6880                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
  6881  00383A  80CE               	bsf	206,0,c	;volatile
  6882  00383C  0012               	return		;funcret
  6883  00383E                     __end_of_TMR1_StartTimer:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _Button_Baseline_Update *****************
  6887 ;; Defined at:
  6888 ;;		line 473 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  button          2   21[COMRAM] PTR struct .
  6891 ;;		 -> mtouch_button(32), 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;Total ram usage:        6 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    6
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_Button_State_Initializing
  6914 ;;		_Button_State_NotPressed
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text50
  6919  00212E                     __ptext50:
  6920                           	callstack 0
  6921  00212E                     _Button_Baseline_Update:
  6922                           	callstack 19
  6923  00212E                     
  6924                           ;mcc_generated_files/mtouch/mtouch_button.c: 473: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 474: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 475:     if (GIE == (uint8_t)1)
  6925  00212E  AEF2               	btfss	4082,7,c	;volatile
  6926  002130  EF9C  F010         	goto	u2401
  6927  002134  EF9E  F010         	goto	u2400
  6928  002138                     u2401:
  6929  002138  EFE0  F010         	goto	l4561
  6930  00213C                     u2400:
  6931  00213C                     
  6932                           ;mcc_generated_files/mtouch/mtouch_button.c: 476:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 477:         GIE = (uint8_t)0;
  6933  00213C  9EF2               	bcf	4082,7,c	;volatile
  6934  00213E                     
  6935                           ;mcc_generated_files/mtouch/mtouch_button.c: 478:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  6936  00213E  EE20 F005          	lfsr	2,5
  6937  002142  5016               	movf	Button_Baseline_Update@button^0,w,c
  6938  002144  26D9               	addwf	fsr2l,f,c
  6939  002146  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  6940  002148  22DA               	addwfc	fsr2h,f,c
  6941  00214A  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  6942  00214E  CFDE F019          	movff	postinc2,??_Button_Baseline_Update+1
  6943  002152  CFDE F01A          	movff	postinc2,??_Button_Baseline_Update+2
  6944  002156  CFDE F01B          	movff	postinc2,??_Button_Baseline_Update+3
  6945  00215A  0E05               	movlw	5
  6946  00215C  EFB5  F010         	goto	u2410
  6947  002160                     u2415:
  6948  002160  90D8               	bcf	status,0,c
  6949  002162  321B               	rrcf	(??_Button_Baseline_Update+3)^0,f,c
  6950  002164  321A               	rrcf	(??_Button_Baseline_Update+2)^0,f,c
  6951  002166  3219               	rrcf	(??_Button_Baseline_Update+1)^0,f,c
  6952  002168  3218               	rrcf	??_Button_Baseline_Update^0,f,c
  6953  00216A                     u2410:
  6954  00216A  2EE8               	decfsz	wreg,f,c
  6955  00216C  EFB0  F010         	goto	u2415
  6956  002170  EE20 F005          	lfsr	2,5
  6957  002174  5016               	movf	Button_Baseline_Update@button^0,w,c
  6958  002176  26D9               	addwf	fsr2l,f,c
  6959  002178  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  6960  00217A  22DA               	addwfc	fsr2h,f,c
  6961  00217C  5018               	movf	??_Button_Baseline_Update^0,w,c
  6962  00217E  5EDE               	subwf	postinc2,f,c
  6963  002180  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  6964  002182  5ADE               	subwfb	postinc2,f,c
  6965  002184  501A               	movf	(??_Button_Baseline_Update+2)^0,w,c
  6966  002186  5ADE               	subwfb	postinc2,f,c
  6967  002188  501B               	movf	(??_Button_Baseline_Update+3)^0,w,c
  6968  00218A  5ADE               	subwfb	postinc2,f,c
  6969                           
  6970                           ;mcc_generated_files/mtouch/mtouch_button.c: 479:         button->baseline += button->re
      +                          ading;
  6971  00218C  EE20 F003          	lfsr	2,3
  6972  002190  5016               	movf	Button_Baseline_Update@button^0,w,c
  6973  002192  26D9               	addwf	fsr2l,f,c
  6974  002194  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  6975  002196  22DA               	addwfc	fsr2h,f,c
  6976  002198  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  6977  00219C  CFDD F019          	movff	postdec2,??_Button_Baseline_Update+1
  6978  0021A0  EE20 F005          	lfsr	2,5
  6979  0021A4  5016               	movf	Button_Baseline_Update@button^0,w,c
  6980  0021A6  26D9               	addwf	fsr2l,f,c
  6981  0021A8  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  6982  0021AA  22DA               	addwfc	fsr2h,f,c
  6983  0021AC  5018               	movf	??_Button_Baseline_Update^0,w,c
  6984  0021AE  26DE               	addwf	postinc2,f,c
  6985  0021B0  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  6986  0021B2  22DE               	addwfc	postinc2,f,c
  6987  0021B4  0E00               	movlw	0
  6988  0021B6  22DE               	addwfc	postinc2,f,c
  6989  0021B8  22DE               	addwfc	postinc2,f,c
  6990  0021BA                     
  6991                           ;mcc_generated_files/mtouch/mtouch_button.c: 480:         GIE = (uint8_t)1;
  6992  0021BA  8EF2               	bsf	4082,7,c	;volatile
  6993                           
  6994                           ;mcc_generated_files/mtouch/mtouch_button.c: 481:     }
  6995  0021BC  EF1E  F011         	goto	l609
  6996  0021C0                     l4561:
  6997                           
  6998                           ;mcc_generated_files/mtouch/mtouch_button.c: 483:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 484:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  6999  0021C0  EE20 F005          	lfsr	2,5
  7000  0021C4  5016               	movf	Button_Baseline_Update@button^0,w,c
  7001  0021C6  26D9               	addwf	fsr2l,f,c
  7002  0021C8  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  7003  0021CA  22DA               	addwfc	fsr2h,f,c
  7004  0021CC  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  7005  0021D0  CFDE F019          	movff	postinc2,??_Button_Baseline_Update+1
  7006  0021D4  CFDE F01A          	movff	postinc2,??_Button_Baseline_Update+2
  7007  0021D8  CFDE F01B          	movff	postinc2,??_Button_Baseline_Update+3
  7008  0021DC  0E05               	movlw	5
  7009  0021DE  EFF6  F010         	goto	u2420
  7010  0021E2                     u2425:
  7011  0021E2  90D8               	bcf	status,0,c
  7012  0021E4  321B               	rrcf	(??_Button_Baseline_Update+3)^0,f,c
  7013  0021E6  321A               	rrcf	(??_Button_Baseline_Update+2)^0,f,c
  7014  0021E8  3219               	rrcf	(??_Button_Baseline_Update+1)^0,f,c
  7015  0021EA  3218               	rrcf	??_Button_Baseline_Update^0,f,c
  7016  0021EC                     u2420:
  7017  0021EC  2EE8               	decfsz	wreg,f,c
  7018  0021EE  EFF1  F010         	goto	u2425
  7019  0021F2  EE20 F005          	lfsr	2,5
  7020  0021F6  5016               	movf	Button_Baseline_Update@button^0,w,c
  7021  0021F8  26D9               	addwf	fsr2l,f,c
  7022  0021FA  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  7023  0021FC  22DA               	addwfc	fsr2h,f,c
  7024  0021FE  5018               	movf	??_Button_Baseline_Update^0,w,c
  7025  002200  5EDE               	subwf	postinc2,f,c
  7026  002202  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  7027  002204  5ADE               	subwfb	postinc2,f,c
  7028  002206  501A               	movf	(??_Button_Baseline_Update+2)^0,w,c
  7029  002208  5ADE               	subwfb	postinc2,f,c
  7030  00220A  501B               	movf	(??_Button_Baseline_Update+3)^0,w,c
  7031  00220C  5ADE               	subwfb	postinc2,f,c
  7032                           
  7033                           ;mcc_generated_files/mtouch/mtouch_button.c: 485:         button->baseline += button->re
      +                          ading;
  7034  00220E  EE20 F003          	lfsr	2,3
  7035  002212  5016               	movf	Button_Baseline_Update@button^0,w,c
  7036  002214  26D9               	addwf	fsr2l,f,c
  7037  002216  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  7038  002218  22DA               	addwfc	fsr2h,f,c
  7039  00221A  CFDE F018          	movff	postinc2,??_Button_Baseline_Update
  7040  00221E  CFDD F019          	movff	postdec2,??_Button_Baseline_Update+1
  7041  002222  EE20 F005          	lfsr	2,5
  7042  002226  5016               	movf	Button_Baseline_Update@button^0,w,c
  7043  002228  26D9               	addwf	fsr2l,f,c
  7044  00222A  5017               	movf	(Button_Baseline_Update@button+1)^0,w,c
  7045  00222C  22DA               	addwfc	fsr2h,f,c
  7046  00222E  5018               	movf	??_Button_Baseline_Update^0,w,c
  7047  002230  26DE               	addwf	postinc2,f,c
  7048  002232  5019               	movf	(??_Button_Baseline_Update+1)^0,w,c
  7049  002234  22DE               	addwfc	postinc2,f,c
  7050  002236  0E00               	movlw	0
  7051  002238  22DE               	addwfc	postinc2,f,c
  7052  00223A  22DE               	addwfc	postinc2,f,c
  7053  00223C                     l609:
  7054  00223C  0012               	return		;funcret
  7055  00223E                     __end_of_Button_Baseline_Update:
  7056                           	callstack 0
  7057                           
  7058 ;; *************** function _Button_Baseline_Initialize *****************
  7059 ;; Defined at:
  7060 ;;		line 467 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  button          2   24[COMRAM] PTR struct .
  7063 ;;		 -> mtouch_button(32), 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;Total ram usage:        6 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    7
  7082 ;; This function calls:
  7083 ;;		_MTOUCH_Sensor_RawSample_Get
  7084 ;; This function is called by:
  7085 ;;		_Button_State_Initializing
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text51
  7090  002CD4                     __ptext51:
  7091                           	callstack 0
  7092  002CD4                     _Button_Baseline_Initialize:
  7093                           	callstack 18
  7094  002CD4                     
  7095                           ;mcc_generated_files/mtouch/mtouch_button.c: 467: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 468: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 469:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  7096  002CD4  EE20 F001          	lfsr	2,1
  7097  002CD8  5019               	movf	Button_Baseline_Initialize@button^0,w,c
  7098  002CDA  26D9               	addwf	fsr2l,f,c
  7099  002CDC  501A               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  7100  002CDE  22DA               	addwfc	fsr2h,f,c
  7101  002CE0  50DF               	movf	indf2,w,c
  7102  002CE2  ECBE  F019         	call	_MTOUCH_Sensor_RawSample_Get
  7103  002CE6  5016               	movf	?_MTOUCH_Sensor_RawSample_Get^0,w,c
  7104  002CE8  6E1B               	movwf	??_Button_Baseline_Initialize^0,c
  7105  002CEA  5017               	movf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,w,c
  7106  002CEC  6E1C               	movwf	(??_Button_Baseline_Initialize+1)^0,c
  7107  002CEE  6A1D               	clrf	(??_Button_Baseline_Initialize+2)^0,c
  7108  002CF0  6A1E               	clrf	(??_Button_Baseline_Initialize+3)^0,c
  7109  002CF2  EE20 F005          	lfsr	2,5
  7110  002CF6  5019               	movf	Button_Baseline_Initialize@button^0,w,c
  7111  002CF8  26D9               	addwf	fsr2l,f,c
  7112  002CFA  501A               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  7113  002CFC  22DA               	addwfc	fsr2h,f,c
  7114  002CFE  C01B  FFDE         	movff	??_Button_Baseline_Initialize,postinc2
  7115  002D02  C01C  FFDE         	movff	??_Button_Baseline_Initialize+1,postinc2
  7116  002D06  C01D  FFDE         	movff	??_Button_Baseline_Initialize+2,postinc2
  7117  002D0A  C01E  FFDE         	movff	??_Button_Baseline_Initialize+3,postinc2
  7118  002D0E                     
  7119                           ;mcc_generated_files/mtouch/mtouch_button.c: 470:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  7120  002D0E  EE20 F005          	lfsr	2,5
  7121  002D12  5019               	movf	Button_Baseline_Initialize@button^0,w,c
  7122  002D14  26D9               	addwf	fsr2l,f,c
  7123  002D16  501A               	movf	(Button_Baseline_Initialize@button+1)^0,w,c
  7124  002D18  22DA               	addwfc	fsr2h,f,c
  7125  002D1A  0E04               	movlw	4
  7126  002D1C                     u2395:
  7127  002D1C  90D8               	bcf	status,0,c
  7128  002D1E  36DE               	rlcf	postinc2,f,c
  7129  002D20  36DE               	rlcf	postinc2,f,c
  7130  002D22  36DE               	rlcf	postinc2,f,c
  7131  002D24  36DD               	rlcf	postdec2,f,c
  7132  002D26  52DD               	movf	postdec2,f,c
  7133  002D28  52DD               	movf	postdec2,f,c
  7134  002D2A  2EE8               	decfsz	wreg,f,c
  7135  002D2C  EF8E  F016         	goto	u2395
  7136  002D30  0012               	return		;funcret
  7137  002D32                     __end_of_Button_Baseline_Initialize:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function _Button_Reading_Update *****************
  7141 ;; Defined at:
  7142 ;;		line 440 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  button          2   28[COMRAM] PTR struct .
  7145 ;;		 -> mtouch_button(32), 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7161 ;;Total ram usage:        2 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    8
  7164 ;; This function calls:
  7165 ;;		_Button_Reading_Update_Helper
  7166 ;; This function is called by:
  7167 ;;		_Button_Service
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text52
  7172  00341E                     __ptext52:
  7173                           	callstack 0
  7174  00341E                     _Button_Reading_Update:
  7175                           	callstack 18
  7176  00341E                     
  7177                           ;mcc_generated_files/mtouch/mtouch_button.c: 440: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 441: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 442:     if (GIE == (uint8_t) 1)
  7178  00341E  AEF2               	btfss	4082,7,c	;volatile
  7179  003420  EF14  F01A         	goto	u2831
  7180  003424  EF16  F01A         	goto	u2830
  7181  003428                     u2831:
  7182  003428  EF20  F01A         	goto	l4861
  7183  00342C                     u2830:
  7184  00342C                     
  7185                           ;mcc_generated_files/mtouch/mtouch_button.c: 443:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 444:         GIE = (uint8_t) 0;
  7186  00342C  9EF2               	bcf	4082,7,c	;volatile
  7187  00342E                     
  7188                           ;mcc_generated_files/mtouch/mtouch_button.c: 445:         Button_Reading_Update_Helper(b
      +                          utton);
  7189  00342E  C01D  F019         	movff	Button_Reading_Update@button,Button_Reading_Update_Helper@button
  7190  003432  C01E  F01A         	movff	Button_Reading_Update@button+1,Button_Reading_Update_Helper@button+1
  7191  003436  EC71  F013         	call	_Button_Reading_Update_Helper	;wreg free
  7192  00343A                     
  7193                           ;mcc_generated_files/mtouch/mtouch_button.c: 446:         GIE = (uint8_t) 1;
  7194  00343A  8EF2               	bsf	4082,7,c	;volatile
  7195                           
  7196                           ;mcc_generated_files/mtouch/mtouch_button.c: 447:     }
  7197  00343C  EF26  F01A         	goto	l596
  7198  003440                     l4861:
  7199                           
  7200                           ;mcc_generated_files/mtouch/mtouch_button.c: 449:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 450:         Button_Reading_Update_Helper(button);
  7201  003440  C01D  F019         	movff	Button_Reading_Update@button,Button_Reading_Update_Helper@button
  7202  003444  C01E  F01A         	movff	Button_Reading_Update@button+1,Button_Reading_Update_Helper@button+1
  7203  003448  EC71  F013         	call	_Button_Reading_Update_Helper	;wreg free
  7204  00344C                     l596:
  7205  00344C  0012               	return		;funcret
  7206  00344E                     __end_of_Button_Reading_Update:
  7207                           	callstack 0
  7208                           
  7209 ;; *************** function _Button_Reading_Update_Helper *****************
  7210 ;; Defined at:
  7211 ;;		line 454 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  button          2   24[COMRAM] PTR struct .
  7214 ;;		 -> mtouch_button(32), 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;Total ram usage:        4 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    7
  7233 ;; This function calls:
  7234 ;;		_MTOUCH_Sensor_RawSample_Get
  7235 ;; This function is called by:
  7236 ;;		_Button_Reading_Update
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text53
  7241  0026E2                     __ptext53:
  7242                           	callstack 0
  7243  0026E2                     _Button_Reading_Update_Helper:
  7244                           	callstack 18
  7245  0026E2                     
  7246                           ;mcc_generated_files/mtouch/mtouch_button.c: 454: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 455: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 456:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  7247  0026E2  EE20 F002          	lfsr	2,2
  7248  0026E6  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7249  0026E8  26D9               	addwf	fsr2l,f,c
  7250  0026EA  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7251  0026EC  22DA               	addwfc	fsr2h,f,c
  7252  0026EE  50DF               	movf	indf2,w,c
  7253  0026F0  B4D8               	btfsc	status,2,c
  7254  0026F2  EF7D  F013         	goto	u2431
  7255  0026F6  EF7F  F013         	goto	u2430
  7256  0026FA                     u2431:
  7257  0026FA  EFB4  F013         	goto	l4569
  7258  0026FE                     u2430:
  7259  0026FE                     
  7260                           ;mcc_generated_files/mtouch/mtouch_button.c: 457:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 458:         button->reading -= button->reading>>((uint8_t)2u);
  7261  0026FE  EE20 F003          	lfsr	2,3
  7262  002702  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7263  002704  26D9               	addwf	fsr2l,f,c
  7264  002706  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7265  002708  22DA               	addwfc	fsr2h,f,c
  7266  00270A  CFDE F01B          	movff	postinc2,??_Button_Reading_Update_Helper
  7267  00270E  CFDD F01C          	movff	postdec2,??_Button_Reading_Update_Helper+1
  7268  002712  90D8               	bcf	status,0,c
  7269  002714  321C               	rrcf	(??_Button_Reading_Update_Helper+1)^0,f,c
  7270  002716  321B               	rrcf	??_Button_Reading_Update_Helper^0,f,c
  7271  002718  90D8               	bcf	status,0,c
  7272  00271A  321C               	rrcf	(??_Button_Reading_Update_Helper+1)^0,f,c
  7273  00271C  321B               	rrcf	??_Button_Reading_Update_Helper^0,f,c
  7274  00271E  EE20 F003          	lfsr	2,3
  7275  002722  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7276  002724  26D9               	addwf	fsr2l,f,c
  7277  002726  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7278  002728  22DA               	addwfc	fsr2h,f,c
  7279  00272A  501B               	movf	??_Button_Reading_Update_Helper^0,w,c
  7280  00272C  5EDE               	subwf	postinc2,f,c
  7281  00272E  501C               	movf	(??_Button_Reading_Update_Helper+1)^0,w,c
  7282  002730  5ADD               	subwfb	postdec2,f,c
  7283  002732                     
  7284                           ;mcc_generated_files/mtouch/mtouch_button.c: 459:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  7285  002732  EE20 F001          	lfsr	2,1
  7286  002736  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7287  002738  26D9               	addwf	fsr2l,f,c
  7288  00273A  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7289  00273C  22DA               	addwfc	fsr2h,f,c
  7290  00273E  50DF               	movf	indf2,w,c
  7291  002740  ECBE  F019         	call	_MTOUCH_Sensor_RawSample_Get
  7292  002744  90D8               	bcf	status,0,c
  7293  002746  3217               	rrcf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,f,c
  7294  002748  3216               	rrcf	?_MTOUCH_Sensor_RawSample_Get^0,f,c
  7295  00274A  90D8               	bcf	status,0,c
  7296  00274C  3217               	rrcf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,f,c
  7297  00274E  3216               	rrcf	?_MTOUCH_Sensor_RawSample_Get^0,f,c
  7298  002750  EE20 F003          	lfsr	2,3
  7299  002754  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7300  002756  26D9               	addwf	fsr2l,f,c
  7301  002758  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7302  00275A  22DA               	addwfc	fsr2h,f,c
  7303  00275C  5016               	movf	?_MTOUCH_Sensor_RawSample_Get^0,w,c
  7304  00275E  26DE               	addwf	postinc2,f,c
  7305  002760  5017               	movf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,w,c
  7306  002762  22DD               	addwfc	postdec2,f,c
  7307                           
  7308                           ;mcc_generated_files/mtouch/mtouch_button.c: 460:     }
  7309  002764  EFC7  F013         	goto	l601
  7310  002768                     l4569:
  7311                           
  7312                           ;mcc_generated_files/mtouch/mtouch_button.c: 462:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 463:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  7313  002768  EE20 F001          	lfsr	2,1
  7314  00276C  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7315  00276E  26D9               	addwf	fsr2l,f,c
  7316  002770  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7317  002772  22DA               	addwfc	fsr2h,f,c
  7318  002774  50DF               	movf	indf2,w,c
  7319  002776  ECBE  F019         	call	_MTOUCH_Sensor_RawSample_Get
  7320  00277A  EE20 F003          	lfsr	2,3
  7321  00277E  5019               	movf	Button_Reading_Update_Helper@button^0,w,c
  7322  002780  26D9               	addwf	fsr2l,f,c
  7323  002782  501A               	movf	(Button_Reading_Update_Helper@button+1)^0,w,c
  7324  002784  22DA               	addwfc	fsr2h,f,c
  7325  002786  C016  FFDE         	movff	?_MTOUCH_Sensor_RawSample_Get,postinc2
  7326  00278A  C017  FFDD         	movff	?_MTOUCH_Sensor_RawSample_Get+1,postdec2
  7327  00278E                     l601:
  7328  00278E  0012               	return		;funcret
  7329  002790                     __end_of_Button_Reading_Update_Helper:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  7333 ;; Defined at:
  7334 ;;		line 570 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  name            1    wreg     enum E12860
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  name            1   23[COMRAM] enum E12860
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  2   21[COMRAM] unsigned short 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;Total ram usage:        3 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    6
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_Button_Reading_Update_Helper
  7359 ;;		_Button_Baseline_Initialize
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text54
  7364  00337C                     __ptext54:
  7365                           	callstack 0
  7366  00337C                     _MTOUCH_Sensor_RawSample_Get:
  7367                           	callstack 18
  7368                           
  7369                           ;incstack = 0
  7370                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  7371  00337C  6E18               	movwf	MTOUCH_Sensor_RawSample_Get@name^0,c
  7372  00337E                     
  7373                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 570: mtouch_sensor_sample_t MTOUCH_Sensor_R
      +                          awSample_Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          571: {;mcc_generated_files/mtouch/mtouch_sensor.c: 572:     if (name < 2u)
  7374  00337E  0E02               	movlw	2
  7375  003380  6018               	cpfslt	MTOUCH_Sensor_RawSample_Get@name^0,c
  7376  003382  EFC5  F019         	goto	u2201
  7377  003386  EFC7  F019         	goto	u2200
  7378  00338A                     u2201:
  7379  00338A  EFD5  F019         	goto	l4279
  7380  00338E                     u2200:
  7381  00338E                     
  7382                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 573:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 574:         return mtouch_sensor[name].rawSample;
  7383  00338E  5018               	movf	MTOUCH_Sensor_RawSample_Get@name^0,w,c
  7384  003390  0D09               	mullw	9
  7385  003392  0E9A               	movlw	low (_mtouch_sensor+6)
  7386  003394  24F3               	addwf	243,w,c
  7387  003396  6ED9               	movwf	fsr2l,c
  7388  003398  0E00               	movlw	high (_mtouch_sensor+6)
  7389  00339A  20F4               	addwfc	prodh,w,c
  7390  00339C  6EDA               	movwf	fsr2h,c
  7391  00339E  CFDE F016          	movff	postinc2,?_MTOUCH_Sensor_RawSample_Get
  7392  0033A2  CFDD F017          	movff	postdec2,?_MTOUCH_Sensor_RawSample_Get+1
  7393  0033A6  EFD9  F019         	goto	l276
  7394  0033AA                     l4279:
  7395                           
  7396                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 577:         return (mtouch_sensor_sample_t
      +                          )0;
  7397  0033AA  0E00               	movlw	0
  7398  0033AC  6E17               	movwf	(?_MTOUCH_Sensor_RawSample_Get+1)^0,c
  7399  0033AE  0E00               	movlw	0
  7400  0033B0  6E16               	movwf	?_MTOUCH_Sensor_RawSample_Get^0,c
  7401  0033B2                     l276:
  7402  0033B2  0012               	return		;funcret
  7403  0033B4                     __end_of_MTOUCH_Sensor_RawSample_Get:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _Button_Deviation_Update *****************
  7407 ;; Defined at:
  7408 ;;		line 391 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  button          2   21[COMRAM] PTR struct .
  7411 ;;		 -> mtouch_button(32), 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  deviation       4   33[COMRAM] long 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;Total ram usage:       16 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    6
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_Button_Service
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text55
  7438  002004                     __ptext55:
  7439                           	callstack 0
  7440  002004                     _Button_Deviation_Update:
  7441                           	callstack 20
  7442  002004                     
  7443                           ;mcc_generated_files/mtouch/mtouch_button.c: 391: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 392: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 393:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 395:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  7444  002004  EE20 F005          	lfsr	2,5
  7445  002008  5016               	movf	Button_Deviation_Update@button^0,w,c
  7446  00200A  26D9               	addwf	fsr2l,f,c
  7447  00200C  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
  7448  00200E  22DA               	addwfc	fsr2h,f,c
  7449  002010  CFDE F018          	movff	postinc2,??_Button_Deviation_Update
  7450  002014  CFDE F019          	movff	postinc2,??_Button_Deviation_Update+1
  7451  002018  CFDE F01A          	movff	postinc2,??_Button_Deviation_Update+2
  7452  00201C  CFDE F01B          	movff	postinc2,??_Button_Deviation_Update+3
  7453  002020  0E05               	movlw	5
  7454  002022  EF18  F010         	goto	u2840
  7455  002026                     u2845:
  7456  002026  90D8               	bcf	status,0,c
  7457  002028  321B               	rrcf	(??_Button_Deviation_Update+3)^0,f,c
  7458  00202A  321A               	rrcf	(??_Button_Deviation_Update+2)^0,f,c
  7459  00202C  3219               	rrcf	(??_Button_Deviation_Update+1)^0,f,c
  7460  00202E  3218               	rrcf	??_Button_Deviation_Update^0,f,c
  7461  002030                     u2840:
  7462  002030  2EE8               	decfsz	wreg,f,c
  7463  002032  EF13  F010         	goto	u2845
  7464  002036  EE20 F003          	lfsr	2,3
  7465  00203A  5016               	movf	Button_Deviation_Update@button^0,w,c
  7466  00203C  26D9               	addwf	fsr2l,f,c
  7467  00203E  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
  7468  002040  22DA               	addwfc	fsr2h,f,c
  7469  002042  CFDE F01C          	movff	postinc2,??_Button_Deviation_Update+4
  7470  002046  CFDD F01D          	movff	postdec2,??_Button_Deviation_Update+5
  7471  00204A  501C               	movf	(??_Button_Deviation_Update+4)^0,w,c
  7472  00204C  6E1E               	movwf	(??_Button_Deviation_Update+6)^0,c
  7473  00204E  501D               	movf	(??_Button_Deviation_Update+5)^0,w,c
  7474  002050  6E1F               	movwf	(??_Button_Deviation_Update+7)^0,c
  7475  002052  6A20               	clrf	(??_Button_Deviation_Update+8)^0,c
  7476  002054  6A21               	clrf	(??_Button_Deviation_Update+9)^0,c
  7477  002056  5018               	movf	??_Button_Deviation_Update^0,w,c
  7478  002058  5C1E               	subwf	(??_Button_Deviation_Update+6)^0,w,c
  7479  00205A  6E22               	movwf	Button_Deviation_Update@deviation^0,c
  7480  00205C  5019               	movf	(??_Button_Deviation_Update+1)^0,w,c
  7481  00205E  581F               	subwfb	(??_Button_Deviation_Update+7)^0,w,c
  7482  002060  6E23               	movwf	(Button_Deviation_Update@deviation+1)^0,c
  7483  002062  501A               	movf	(??_Button_Deviation_Update+2)^0,w,c
  7484  002064  5820               	subwfb	(??_Button_Deviation_Update+8)^0,w,c
  7485  002066  6E24               	movwf	(Button_Deviation_Update@deviation+2)^0,c
  7486  002068  501B               	movf	(??_Button_Deviation_Update+3)^0,w,c
  7487  00206A  5821               	subwfb	(??_Button_Deviation_Update+9)^0,w,c
  7488  00206C  6E25               	movwf	(Button_Deviation_Update@deviation+3)^0,c
  7489                           
  7490                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:     deviation = deviation >> (button->
      +                          scaling);
  7491  00206E  EE20 F00F          	lfsr	2,15
  7492  002072  5016               	movf	Button_Deviation_Update@button^0,w,c
  7493  002074  26D9               	addwf	fsr2l,f,c
  7494  002076  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
  7495  002078  22DA               	addwfc	fsr2h,f,c
  7496  00207A  50DF               	movf	indf2,w,c
  7497  00207C  6E18               	movwf	??_Button_Deviation_Update^0,c
  7498  00207E  C022  F019         	movff	Button_Deviation_Update@deviation,??_Button_Deviation_Update+1
  7499  002082  C023  F01A         	movff	Button_Deviation_Update@deviation+1,??_Button_Deviation_Update+2
  7500  002086  C024  F01B         	movff	Button_Deviation_Update@deviation+2,??_Button_Deviation_Update+3
  7501  00208A  C025  F01C         	movff	Button_Deviation_Update@deviation+3,??_Button_Deviation_Update+4
  7502  00208E                     u2855:
  7503  00208E  6618               	tstfsz	??_Button_Deviation_Update^0,c
  7504  002090  EF4C  F010         	goto	u2856
  7505  002094  EF54  F010         	goto	u2857
  7506  002098                     u2856:
  7507  002098  341C               	rlcf	(??_Button_Deviation_Update+4)^0,w,c
  7508  00209A  321C               	rrcf	(??_Button_Deviation_Update+4)^0,f,c
  7509  00209C  321B               	rrcf	(??_Button_Deviation_Update+3)^0,f,c
  7510  00209E  321A               	rrcf	(??_Button_Deviation_Update+2)^0,f,c
  7511  0020A0  3219               	rrcf	(??_Button_Deviation_Update+1)^0,f,c
  7512  0020A2  2E18               	decfsz	??_Button_Deviation_Update^0,f,c
  7513  0020A4  EF47  F010         	goto	u2855
  7514  0020A8                     u2857:
  7515  0020A8  C019  F022         	movff	??_Button_Deviation_Update+1,Button_Deviation_Update@deviation
  7516  0020AC  C01A  F023         	movff	??_Button_Deviation_Update+2,Button_Deviation_Update@deviation+1
  7517  0020B0  C01B  F024         	movff	??_Button_Deviation_Update+3,Button_Deviation_Update@deviation+2
  7518  0020B4  C01C  F025         	movff	??_Button_Deviation_Update+4,Button_Deviation_Update@deviation+3
  7519  0020B8                     
  7520                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:     if (deviation > ((0x7f)))
  7521  0020B8  BE25               	btfsc	(Button_Deviation_Update@deviation+3)^0,7,c
  7522  0020BA  EF6A  F010         	goto	u2861
  7523  0020BE  5025               	movf	(Button_Deviation_Update@deviation+3)^0,w,c
  7524  0020C0  1024               	iorwf	(Button_Deviation_Update@deviation+2)^0,w,c
  7525  0020C2  1023               	iorwf	(Button_Deviation_Update@deviation+1)^0,w,c
  7526  0020C4  E109               	bnz	u2860
  7527  0020C6  0E80               	movlw	128
  7528  0020C8  5C22               	subwf	Button_Deviation_Update@deviation^0,w,c
  7529  0020CA  A0D8               	btfss	status,0,c
  7530  0020CC  EF6A  F010         	goto	u2861
  7531  0020D0  EF6C  F010         	goto	u2860
  7532  0020D4                     u2861:
  7533  0020D4  EF74  F010         	goto	l4869
  7534  0020D8                     u2860:
  7535  0020D8                     
  7536                           ;mcc_generated_files/mtouch/mtouch_button.c: 402:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 403:         deviation = ((0x7f));
  7537  0020D8  0E7F               	movlw	127
  7538  0020DA  6E22               	movwf	Button_Deviation_Update@deviation^0,c
  7539  0020DC  0E00               	movlw	0
  7540  0020DE  6E23               	movwf	(Button_Deviation_Update@deviation+1)^0,c
  7541  0020E0  0E00               	movlw	0
  7542  0020E2  6E24               	movwf	(Button_Deviation_Update@deviation+2)^0,c
  7543  0020E4  0E00               	movlw	0
  7544  0020E6  6E25               	movwf	(Button_Deviation_Update@deviation+3)^0,c
  7545  0020E8                     l4869:
  7546                           
  7547                           ;mcc_generated_files/mtouch/mtouch_button.c: 405:     if (deviation < ((-1-0x7f)))
  7548  0020E8  AE25               	btfss	(Button_Deviation_Update@deviation+3)^0,7,c
  7549  0020EA  EF84  F010         	goto	u2871
  7550  0020EE  0E80               	movlw	128
  7551  0020F0  5C22               	subwf	Button_Deviation_Update@deviation^0,w,c
  7552  0020F2  0EFF               	movlw	255
  7553  0020F4  5823               	subwfb	(Button_Deviation_Update@deviation+1)^0,w,c
  7554  0020F6  0EFF               	movlw	255
  7555  0020F8  5824               	subwfb	(Button_Deviation_Update@deviation+2)^0,w,c
  7556  0020FA  0EFF               	movlw	255
  7557  0020FC  5825               	subwfb	(Button_Deviation_Update@deviation+3)^0,w,c
  7558  0020FE  B0D8               	btfsc	status,0,c
  7559  002100  EF84  F010         	goto	u2871
  7560  002104  EF86  F010         	goto	u2870
  7561  002108                     u2871:
  7562  002108  EF8E  F010         	goto	l4873
  7563  00210C                     u2870:
  7564  00210C                     
  7565                           ;mcc_generated_files/mtouch/mtouch_button.c: 406:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 407:         deviation = ((-1-0x7f));
  7566  00210C  0E80               	movlw	128
  7567  00210E  6E22               	movwf	Button_Deviation_Update@deviation^0,c
  7568  002110  0EFF               	movlw	255
  7569  002112  6E23               	movwf	(Button_Deviation_Update@deviation+1)^0,c
  7570  002114  0EFF               	movlw	255
  7571  002116  6E24               	movwf	(Button_Deviation_Update@deviation+2)^0,c
  7572  002118  0EFF               	movlw	255
  7573  00211A  6E25               	movwf	(Button_Deviation_Update@deviation+3)^0,c
  7574  00211C                     l4873:
  7575                           
  7576                           ;mcc_generated_files/mtouch/mtouch_button.c: 410:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
  7577  00211C  EE20 F009          	lfsr	2,9
  7578  002120  5016               	movf	Button_Deviation_Update@button^0,w,c
  7579  002122  26D9               	addwf	fsr2l,f,c
  7580  002124  5017               	movf	(Button_Deviation_Update@button+1)^0,w,c
  7581  002126  22DA               	addwfc	fsr2h,f,c
  7582  002128  C022  FFDF         	movff	Button_Deviation_Update@deviation,indf2
  7583  00212C  0012               	return		;funcret
  7584  00212E                     __end_of_Button_Deviation_Update:
  7585                           	callstack 0
  7586                           
  7587 ;; *************** function _SYSTEM_Initialize *****************
  7588 ;; Defined at:
  7589 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7607 ;;Total ram usage:        0 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:   10
  7610 ;; This function calls:
  7611 ;;		_ADCC_Initialize
  7612 ;;		_INTERRUPT_Initialize
  7613 ;;		_MTOUCH_Initialize
  7614 ;;		_OSCILLATOR_Initialize
  7615 ;;		_PIN_MANAGER_Initialize
  7616 ;;		_PMD_Initialize
  7617 ;;		_TMR1_Initialize
  7618 ;;		_TMR3_Initialize
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text56
  7625  00362E                     __ptext56:
  7626                           	callstack 0
  7627  00362E                     _SYSTEM_Initialize:
  7628                           	callstack 20
  7629  00362E                     
  7630                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7631  00362E  EC1F  F01C         	call	_INTERRUPT_Initialize	;wreg free
  7632  003632                     
  7633                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7634  003632  EC97  F01B         	call	_PMD_Initialize	;wreg free
  7635  003636                     
  7636                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7637  003636  ECF1  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  7638  00363A                     
  7639                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7640  00363A  ECA5  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  7641  00363E                     
  7642                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  7643  00363E  ECD3  F015         	call	_ADCC_Initialize	;wreg free
  7644  003642                     
  7645                           ;mcc_generated_files/mcc.c: 57:     TMR3_Initialize();
  7646  003642  EC05  F018         	call	_TMR3_Initialize	;wreg free
  7647  003646                     
  7648                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  7649  003646  EC28  F018         	call	_TMR1_Initialize	;wreg free
  7650  00364A                     
  7651                           ;mcc_generated_files/mcc.c: 59:     MTOUCH_Initialize();
  7652  00364A  ECC4  F01B         	call	_MTOUCH_Initialize	;wreg free
  7653  00364E  0012               	return		;funcret
  7654  003650                     __end_of_SYSTEM_Initialize:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _TMR3_Initialize *****************
  7658 ;; Defined at:
  7659 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;Total ram usage:        2 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    7
  7680 ;; This function calls:
  7681 ;;		_TMR3_SetInterruptHandler
  7682 ;; This function is called by:
  7683 ;;		_SYSTEM_Initialize
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text57
  7688  00300A                     __ptext57:
  7689                           	callstack 0
  7690  00300A                     _TMR3_Initialize:
  7691                           	callstack 22
  7692  00300A                     
  7693                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  7694  00300A  0E00               	movlw	0
  7695  00300C  6EC9               	movwf	201,c	;volatile
  7696                           
  7697                           ;mcc_generated_files/tmr3.c: 72:     T3GATE = 0x00;
  7698  00300E  0E00               	movlw	0
  7699  003010  6ECA               	movwf	202,c	;volatile
  7700                           
  7701                           ;mcc_generated_files/tmr3.c: 75:     T3CLK = 0x04;
  7702  003012  0E04               	movlw	4
  7703  003014  6ECB               	movwf	203,c	;volatile
  7704                           
  7705                           ;mcc_generated_files/tmr3.c: 78:     TMR3H = 0x0D;
  7706  003016  0E0D               	movlw	13
  7707  003018  6EC7               	movwf	199,c	;volatile
  7708                           
  7709                           ;mcc_generated_files/tmr3.c: 81:     TMR3L = 0xD0;
  7710  00301A  0ED0               	movlw	208
  7711  00301C  6EC6               	movwf	198,c	;volatile
  7712  00301E                     
  7713                           ;mcc_generated_files/tmr3.c: 84:     PIR4bits.TMR3IF = 0;
  7714  00301E  010E               	movlb	14	; () banked
  7715  003020  95C9               	bcf	201,2,b	;volatile
  7716  003022                     
  7717                           ; BSR set to: 14
  7718                           ;mcc_generated_files/tmr3.c: 87:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7719  003022  50C6               	movf	198,w,c	;volatile
  7720  003024  CFC7 F019          	movff	4039,??_TMR3_Initialize	;volatile
  7721  003028  6A1A               	clrf	(??_TMR3_Initialize+1)^0,c
  7722  00302A  C019  F01A         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  7723  00302E  6A19               	clrf	??_TMR3_Initialize^0,c
  7724  003030  1019               	iorwf	??_TMR3_Initialize^0,w,c
  7725  003032  6E43               	movwf	_timer3ReloadVal^0,c	;volatile
  7726  003034  501A               	movf	(??_TMR3_Initialize+1)^0,w,c
  7727  003036  6E44               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
  7728  003038                     
  7729                           ; BSR set to: 14
  7730                           ;mcc_generated_files/tmr3.c: 90:     PIE4bits.TMR3IE = 1;
  7731  003038  85C1               	bsf	193,2,b	;volatile
  7732  00303A                     
  7733                           ; BSR set to: 14
  7734                           ;mcc_generated_files/tmr3.c: 93:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  7735  00303A  0E4A               	movlw	low _TMR3_DefaultInterruptHandler
  7736  00303C  6E16               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  7737  00303E  0E38               	movlw	high _TMR3_DefaultInterruptHandler
  7738  003040  6E17               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  7739  003042  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
  7740  003044  6E18               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)^0,c
  7741  003046  ECDD  F01B         	call	_TMR3_SetInterruptHandler	;wreg free
  7742  00304A                     
  7743                           ;mcc_generated_files/tmr3.c: 96:     T3CON = 0x10;
  7744  00304A  0E10               	movlw	16
  7745  00304C  6EC8               	movwf	200,c	;volatile
  7746  00304E  0012               	return		;funcret
  7747  003050                     __end_of_TMR3_Initialize:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _TMR3_SetInterruptHandler *****************
  7751 ;; Defined at:
  7752 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  InterruptHan    3   21[COMRAM] PTR FTN()void 
  7755 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1    wreg      void 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7767 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;Total ram usage:        3 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    6
  7774 ;; This function calls:
  7775 ;;		Nothing
  7776 ;; This function is called by:
  7777 ;;		_TMR3_Initialize
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text58
  7782  0037BA                     __ptext58:
  7783                           	callstack 0
  7784  0037BA                     _TMR3_SetInterruptHandler:
  7785                           	callstack 22
  7786  0037BA                     
  7787                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  7788  0037BA  C016  F0ED         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  7789  0037BE  C017  F0EE         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  7790  0037C2  C018  F0EF         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
  7791  0037C6  0012               	return		;funcret
  7792  0037C8                     __end_of_TMR3_SetInterruptHandler:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function _TMR1_Initialize *****************
  7796 ;; Defined at:
  7797 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;Total ram usage:        2 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    7
  7818 ;; This function calls:
  7819 ;;		_TMR1_SetInterruptHandler
  7820 ;; This function is called by:
  7821 ;;		_SYSTEM_Initialize
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text59
  7826  003050                     __ptext59:
  7827                           	callstack 0
  7828  003050                     _TMR1_Initialize:
  7829                           	callstack 22
  7830  003050                     
  7831                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7832  003050  0E00               	movlw	0
  7833  003052  6ECF               	movwf	207,c	;volatile
  7834                           
  7835                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7836  003054  0E00               	movlw	0
  7837  003056  6ED0               	movwf	208,c	;volatile
  7838                           
  7839                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  7840  003058  0E04               	movlw	4
  7841  00305A  6ED1               	movwf	209,c	;volatile
  7842                           
  7843                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x0D;
  7844  00305C  0E0D               	movlw	13
  7845  00305E  6ECD               	movwf	205,c	;volatile
  7846                           
  7847                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xD0;
  7848  003060  0ED0               	movlw	208
  7849  003062  6ECC               	movwf	204,c	;volatile
  7850  003064                     
  7851                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  7852  003064  010E               	movlb	14	; () banked
  7853  003066  91C9               	bcf	201,0,b	;volatile
  7854  003068                     
  7855                           ; BSR set to: 14
  7856                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7857  003068  50CC               	movf	204,w,c	;volatile
  7858  00306A  CFCD F019          	movff	4045,??_TMR1_Initialize	;volatile
  7859  00306E  6A1A               	clrf	(??_TMR1_Initialize+1)^0,c
  7860  003070  C019  F01A         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  7861  003074  6A19               	clrf	??_TMR1_Initialize^0,c
  7862  003076  1019               	iorwf	??_TMR1_Initialize^0,w,c
  7863  003078  6E45               	movwf	_timer1ReloadVal^0,c	;volatile
  7864  00307A  501A               	movf	(??_TMR1_Initialize+1)^0,w,c
  7865  00307C  6E46               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
  7866  00307E                     
  7867                           ; BSR set to: 14
  7868                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  7869  00307E  81C1               	bsf	193,0,b	;volatile
  7870  003080                     
  7871                           ; BSR set to: 14
  7872                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7873  003080  0E4C               	movlw	low _TMR1_DefaultInterruptHandler
  7874  003082  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  7875  003084  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  7876  003086  6E17               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  7877  003088  0E00               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  7878  00308A  6E18               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)^0,c
  7879  00308C  ECE4  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  7880  003090                     
  7881                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x10;
  7882  003090  0E10               	movlw	16
  7883  003092  6ECE               	movwf	206,c	;volatile
  7884  003094  0012               	return		;funcret
  7885  003096                     __end_of_TMR1_Initialize:
  7886                           	callstack 0
  7887                           
  7888 ;; *************** function _TMR1_SetInterruptHandler *****************
  7889 ;; Defined at:
  7890 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  InterruptHan    3   21[COMRAM] PTR FTN()void 
  7893 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7905 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:        3 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    6
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_TMR1_Initialize
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text60
  7920  0037C8                     __ptext60:
  7921                           	callstack 0
  7922  0037C8                     _TMR1_SetInterruptHandler:
  7923                           	callstack 22
  7924  0037C8                     
  7925                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7926  0037C8  C016  F0F0         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  7927  0037CC  C017  F0F1         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  7928  0037D0  C018  F0F2         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  7929  0037D4  0012               	return		;funcret
  7930  0037D6                     __end_of_TMR1_SetInterruptHandler:
  7931                           	callstack 0
  7932                           
  7933 ;; *************** function _PMD_Initialize *****************
  7934 ;; Defined at:
  7935 ;;		line 76 in file "mcc_generated_files/mcc.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;		None
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;Total ram usage:        0 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    6
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_SYSTEM_Initialize
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text61
  7964  00372E                     __ptext61:
  7965                           	callstack 0
  7966  00372E                     _PMD_Initialize:
  7967                           	callstack 23
  7968  00372E                     
  7969                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  7970  00372E  0E00               	movlw	0
  7971  003730  010E               	movlb	14	; () banked
  7972  003732  6FDC               	movwf	220,b	;volatile
  7973                           
  7974                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  7975  003734  0E00               	movlw	0
  7976  003736  6FDD               	movwf	221,b	;volatile
  7977                           
  7978                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  7979  003738  0E00               	movlw	0
  7980  00373A  6FDE               	movwf	222,b	;volatile
  7981                           
  7982                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  7983  00373C  0E00               	movlw	0
  7984  00373E  6FDF               	movwf	223,b	;volatile
  7985                           
  7986                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  7987  003740  0E00               	movlw	0
  7988  003742  6FE0               	movwf	224,b	;volatile
  7989                           
  7990                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  7991  003744  0E00               	movlw	0
  7992  003746  6FE1               	movwf	225,b	;volatile
  7993  003748                     
  7994                           ; BSR set to: 14
  7995  003748  0012               	return		;funcret
  7996  00374A                     __end_of_PMD_Initialize:
  7997                           	callstack 0
  7998                           
  7999 ;; *************** function _PIN_MANAGER_Initialize *****************
  8000 ;; Defined at:
  8001 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;		None
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;		None
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  1    wreg      void 
  8008 ;; Registers used:
  8009 ;;		wreg, status,2
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;Total ram usage:        0 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    6
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		_SYSTEM_Initialize
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text62
  8030  0029E2                     __ptext62:
  8031                           	callstack 0
  8032  0029E2                     _PIN_MANAGER_Initialize:
  8033                           	callstack 23
  8034  0029E2                     
  8035                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8036  0029E2  0E00               	movlw	0
  8037  0029E4  6E86               	movwf	134,c	;volatile
  8038                           
  8039                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8040  0029E6  0E00               	movlw	0
  8041  0029E8  6E85               	movwf	133,c	;volatile
  8042                           
  8043                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8044  0029EA  0E00               	movlw	0
  8045  0029EC  6E82               	movwf	130,c	;volatile
  8046                           
  8047                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8048  0029EE  0E00               	movlw	0
  8049  0029F0  6E83               	movwf	131,c	;volatile
  8050                           
  8051                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8052  0029F2  0E00               	movlw	0
  8053  0029F4  6E84               	movwf	132,c	;volatile
  8054                           
  8055                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8056  0029F6  0E07               	movlw	7
  8057  0029F8  6E8B               	movwf	139,c	;volatile
  8058                           
  8059                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
  8060  0029FA  0E7F               	movlw	127
  8061  0029FC  6E87               	movwf	135,c	;volatile
  8062                           
  8063                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFB;
  8064  0029FE  0EFB               	movlw	251
  8065  002A00  6E88               	movwf	136,c	;volatile
  8066  002A02                     
  8067                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8068  002A02  6889               	setf	137,c	;volatile
  8069                           
  8070                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xDF;
  8071  002A04  0EDF               	movlw	223
  8072  002A06  6E8A               	movwf	138,c	;volatile
  8073                           
  8074                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xDF;
  8075  002A08  0EDF               	movlw	223
  8076  002A0A  010F               	movlb	15	; () banked
  8077  002A0C  6F21               	movwf	33,b	;volatile
  8078  002A0E                     
  8079                           ; BSR set to: 15
  8080                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  8081  002A0E  691C               	setf	28,b	;volatile
  8082                           
  8083                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFB;
  8084  002A10  0EFB               	movlw	251
  8085  002A12  6F14               	movwf	20,b	;volatile
  8086                           
  8087                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8088  002A14  0E07               	movlw	7
  8089  002A16  6F29               	movwf	41,b	;volatile
  8090                           
  8091                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  8092  002A18  0E7F               	movlw	127
  8093  002A1A  6F0C               	movwf	12,b	;volatile
  8094                           
  8095                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8096  002A1C  0E00               	movlw	0
  8097  002A1E  6F20               	movwf	32,b	;volatile
  8098                           
  8099                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8100  002A20  0E00               	movlw	0
  8101  002A22  6F28               	movwf	40,b	;volatile
  8102                           
  8103                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8104  002A24  0E00               	movlw	0
  8105  002A26  6F13               	movwf	19,b	;volatile
  8106                           
  8107                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8108  002A28  0E00               	movlw	0
  8109  002A2A  6F0B               	movwf	11,b	;volatile
  8110                           
  8111                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8112  002A2C  0E00               	movlw	0
  8113  002A2E  6F1B               	movwf	27,b	;volatile
  8114                           
  8115                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8116  002A30  0E00               	movlw	0
  8117  002A32  6F27               	movwf	39,b	;volatile
  8118                           
  8119                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8120  002A34  0E00               	movlw	0
  8121  002A36  6F0A               	movwf	10,b	;volatile
  8122                           
  8123                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8124  002A38  0E00               	movlw	0
  8125  002A3A  6F12               	movwf	18,b	;volatile
  8126                           
  8127                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8128  002A3C  0E00               	movlw	0
  8129  002A3E  6F1A               	movwf	26,b	;volatile
  8130                           
  8131                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8132  002A40  0E00               	movlw	0
  8133  002A42  6F1F               	movwf	31,b	;volatile
  8134  002A44                     
  8135                           ; BSR set to: 15
  8136                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8137  002A44  6909               	setf	9,b	;volatile
  8138  002A46                     
  8139                           ; BSR set to: 15
  8140                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8141  002A46  6911               	setf	17,b	;volatile
  8142  002A48                     
  8143                           ; BSR set to: 15
  8144                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8145  002A48  6919               	setf	25,b	;volatile
  8146  002A4A                     
  8147                           ; BSR set to: 15
  8148                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8149  002A4A  691E               	setf	30,b	;volatile
  8150                           
  8151                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8152  002A4C  0E07               	movlw	7
  8153  002A4E  6F26               	movwf	38,b	;volatile
  8154  002A50                     
  8155                           ; BSR set to: 15
  8156                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8157  002A50  6908               	setf	8,b	;volatile
  8158  002A52                     
  8159                           ; BSR set to: 15
  8160                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8161  002A52  6910               	setf	16,b	;volatile
  8162  002A54                     
  8163                           ; BSR set to: 15
  8164                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8165  002A54  6918               	setf	24,b	;volatile
  8166  002A56                     
  8167                           ; BSR set to: 15
  8168                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8169  002A56  691D               	setf	29,b	;volatile
  8170                           
  8171                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  8172  002A58  0E0F               	movlw	15
  8173  002A5A  6F25               	movwf	37,b	;volatile
  8174  002A5C                     
  8175                           ; BSR set to: 15
  8176  002A5C  0012               	return		;funcret
  8177  002A5E                     __end_of_PIN_MANAGER_Initialize:
  8178                           	callstack 0
  8179                           
  8180 ;; *************** function _OSCILLATOR_Initialize *****************
  8181 ;; Defined at:
  8182 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg, status,2
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8200 ;;Total ram usage:        0 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    6
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_SYSTEM_Initialize
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text63
  8211  00374A                     __ptext63:
  8212                           	callstack 0
  8213  00374A                     _OSCILLATOR_Initialize:
  8214                           	callstack 23
  8215  00374A                     
  8216                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  8217  00374A  0E60               	movlw	96
  8218  00374C  010E               	movlb	14	; () banked
  8219  00374E  6FD3               	movwf	211,b	;volatile
  8220                           
  8221                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  8222  003750  0E00               	movlw	0
  8223  003752  6FD5               	movwf	213,b	;volatile
  8224                           
  8225                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  8226  003754  0E00               	movlw	0
  8227  003756  6FD7               	movwf	215,b	;volatile
  8228                           
  8229                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
  8230  003758  0E08               	movlw	8
  8231  00375A  6FD9               	movwf	217,b	;volatile
  8232                           
  8233                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  8234  00375C  0E00               	movlw	0
  8235  00375E  6FD8               	movwf	216,b	;volatile
  8236  003760                     
  8237                           ; BSR set to: 14
  8238  003760  0012               	return		;funcret
  8239  003762                     __end_of_OSCILLATOR_Initialize:
  8240                           	callstack 0
  8241                           
  8242 ;; *************** function _MTOUCH_Initialize *****************
  8243 ;; Defined at:
  8244 ;;		line 82 in file "mcc_generated_files/mtouch/mtouch.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    9
  8265 ;; This function calls:
  8266 ;;		_MTOUCH_Button_InitializeAll
  8267 ;;		_MTOUCH_Sensor_InitializeAll
  8268 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  8269 ;;		_MTOUCH_Sensor_Scan_Initialize
  8270 ;; This function is called by:
  8271 ;;		_MTOUCH_Service_Mainloop
  8272 ;;		_SYSTEM_Initialize
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text64
  8277  003788                     __ptext64:
  8278                           	callstack 0
  8279  003788                     _MTOUCH_Initialize:
  8280                           	callstack 19
  8281  003788                     
  8282                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Sensor_InitializeAll();
  8283  003788  EC68  F019         	call	_MTOUCH_Sensor_InitializeAll	;wreg free
  8284                           
  8285                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Button_InitializeAll();
  8286  00378C  EC85  F019         	call	_MTOUCH_Button_InitializeAll	;wreg free
  8287  003790                     
  8288                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Sampled_ResetAll();
  8289  003790  EC41  F017         	call	_MTOUCH_Sensor_Sampled_ResetAll	;wreg free
  8290  003794                     
  8291                           ;mcc_generated_files/mtouch/mtouch.c: 87:     MTOUCH_Sensor_Scan_Initialize();
  8292  003794  EC10  F01C         	call	_MTOUCH_Sensor_Scan_Initialize	;wreg free
  8293  003798  0012               	return		;funcret
  8294  00379A                     __end_of_MTOUCH_Initialize:
  8295                           	callstack 0
  8296                           
  8297 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  8298 ;; Defined at:
  8299 ;;		line 350 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, status,2, status,0, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;Total ram usage:        0 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:    8
  8320 ;; This function calls:
  8321 ;;		_MTOUCH_Sensor_ADCC_Initialize
  8322 ;; This function is called by:
  8323 ;;		_MTOUCH_Initialize
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text65
  8328  003820                     __ptext65:
  8329                           	callstack 0
  8330  003820                     _MTOUCH_Sensor_Scan_Initialize:
  8331                           	callstack 19
  8332  003820                     
  8333                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:     MTOUCH_Sensor_ADCC_Initialize();
  8334  003820  EC91  F017         	call	_MTOUCH_Sensor_ADCC_Initialize	;wreg free
  8335  003824  0012               	return		;funcret
  8336  003826                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  8337                           	callstack 0
  8338                           
  8339 ;; *************** function _MTOUCH_Sensor_ADCC_Initialize *****************
  8340 ;; Defined at:
  8341 ;;		line 232 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;		None
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;Total ram usage:        0 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    7
  8362 ;; This function calls:
  8363 ;;		_ADCC_SetADTIInterruptHandler
  8364 ;; This function is called by:
  8365 ;;		_MTOUCH_Sensor_Scan_Initialize
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text66
  8370  002F22                     __ptext66:
  8371                           	callstack 0
  8372  002F22                     _MTOUCH_Sensor_ADCC_Initialize:
  8373                           	callstack 19
  8374  002F22                     
  8375                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 236:     ADCLK = 0x1f;
  8376  002F22  0E1F               	movlw	31
  8377  002F24  010F               	movlb	15	; () banked
  8378  002F26  6F52               	movwf	82,b	;volatile
  8379                           
  8380                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 238:     ADREF = 0x00;
  8381  002F28  0E00               	movlw	0
  8382  002F2A  6F53               	movwf	83,b	;volatile
  8383                           
  8384                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 240:     ADCAP = 0x00;
  8385  002F2C  0E00               	movlw	0
  8386  002F2E  6F58               	movwf	88,b	;volatile
  8387                           
  8388                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 242:     ADLTHL = 0x00;
  8389  002F30  0E00               	movlw	0
  8390  002F32  6E65               	movwf	101,c	;volatile
  8391                           
  8392                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     ADLTHH = 0x00;
  8393  002F34  0E00               	movlw	0
  8394  002F36  6E66               	movwf	102,c	;volatile
  8395                           
  8396                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 246:     ADUTHL = 0x00;
  8397  002F38  0E00               	movlw	0
  8398  002F3A  6E67               	movwf	103,c	;volatile
  8399                           
  8400                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 248:     ADUTHH = 0x00;
  8401  002F3C  0E00               	movlw	0
  8402  002F3E  6E68               	movwf	104,c	;volatile
  8403                           
  8404                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:     ADSTPTL = 0x00;
  8405  002F40  0E00               	movlw	0
  8406  002F42  6E63               	movwf	99,c	;volatile
  8407                           
  8408                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:     ADSTPTH = 0x00;
  8409  002F44  0E00               	movlw	0
  8410  002F46  6E64               	movwf	100,c	;volatile
  8411                           
  8412                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 255:     ADCON1 = 0x41;
  8413  002F48  0E41               	movlw	65
  8414  002F4A  6F54               	movwf	84,b	;volatile
  8415                           
  8416                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 257:     ADCON2 = 0x8B;
  8417  002F4C  0E8B               	movlw	139
  8418  002F4E  6F55               	movwf	85,b	;volatile
  8419                           
  8420                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 260:     ADCON3 = 0x0F;
  8421  002F50  0E0F               	movlw	15
  8422  002F52  6F56               	movwf	86,b	;volatile
  8423                           
  8424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 263:     ADCON0 = 0xC4;
  8425  002F54  0EC4               	movlw	196
  8426  002F56  6F5B               	movwf	91,b	;volatile
  8427  002F58                     
  8428                           ; BSR set to: 15
  8429                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:     PIR1bits.ADTIF = 0;
  8430  002F58  010E               	movlb	14	; () banked
  8431  002F5A  93C6               	bcf	198,1,b	;volatile
  8432  002F5C                     
  8433                           ; BSR set to: 14
  8434                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 268:     PIE1bits.ADTIE = 1;
  8435  002F5C  83BE               	bsf	190,1,b	;volatile
  8436  002F5E                     
  8437                           ; BSR set to: 14
  8438                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 270:     ADCC_SetADTIInterruptHandler(ADCC_
      +                          ThresholdISR_mTouch);
  8439  002F5E  0E0A               	movlw	low _ADCC_ThresholdISR_mTouch
  8440  002F60  6E16               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  8441  002F62  0E38               	movlw	high _ADCC_ThresholdISR_mTouch
  8442  002F64  6E17               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  8443  002F66  0E00               	movlw	low (_ADCC_ThresholdISR_mTouch shr (0+16))
  8444  002F68  6E18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  8445  002F6A  ECEB  F01B         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8446  002F6E  0012               	return		;funcret
  8447  002F70                     __end_of_MTOUCH_Sensor_ADCC_Initialize:
  8448                           	callstack 0
  8449                           
  8450 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  8451 ;; Defined at:
  8452 ;;		line 868 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  sensor          2   23[COMRAM] PTR struct .
  8457 ;;		 -> mtouch_sensor(18), 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;Total ram usage:        2 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    7
  8474 ;; This function calls:
  8475 ;;		_Sensor_Sampled_Reset
  8476 ;; This function is called by:
  8477 ;;		_MTOUCH_Initialize
  8478 ;;		_MTOUCH_Service_Mainloop
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text67
  8483  002E82                     __ptext67:
  8484                           	callstack 0
  8485  002E82                     _MTOUCH_Sensor_Sampled_ResetAll:
  8486                           	callstack 21
  8487  002E82                     
  8488                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 870:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 871:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[2u -1];sensor++)
  8489  002E82  0E94               	movlw	low _mtouch_sensor
  8490  002E84  6E18               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,c
  8491  002E86  0E00               	movlw	high _mtouch_sensor
  8492  002E88  6E19               	movwf	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,c
  8493  002E8A  5019               	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,w,c
  8494  002E8C  0800               	sublw	high (_mtouch_sensor+9)
  8495  002E8E  E102               	bnz	u3135
  8496  002E90  5018               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,w,c
  8497  002E92  089D               	sublw	low (_mtouch_sensor+9)
  8498  002E94                     u3135:
  8499  002E94  B0D8               	btfsc	status,0,c
  8500  002E96  EF4F  F017         	goto	u3131
  8501  002E9A  EF51  F017         	goto	u3130
  8502  002E9E                     u3131:
  8503  002E9E  EF53  F017         	goto	l5003
  8504  002EA2                     u3130:
  8505  002EA2  EF69  F017         	goto	l394
  8506  002EA6                     l5003:
  8507                           
  8508                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 872:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 873:         Sensor_Sampled_Reset(sensor);
  8509  002EA6  C018  F016         	movff	MTOUCH_Sensor_Sampled_ResetAll@sensor,Sensor_Sampled_Reset@sensor
  8510  002EAA  C019  F017         	movff	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,Sensor_Sampled_Reset@sensor+1
  8511  002EAE  ECCD  F01B         	call	_Sensor_Sampled_Reset	;wreg free
  8512  002EB2                     
  8513                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 874:     }
  8514  002EB2  0E09               	movlw	9
  8515  002EB4  2618               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,f,c
  8516  002EB6  0E00               	movlw	0
  8517  002EB8  2219               	addwfc	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,f,c
  8518  002EBA  5019               	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor+1)^0,w,c
  8519  002EBC  0800               	sublw	high (_mtouch_sensor+9)
  8520  002EBE  E102               	bnz	u3145
  8521  002EC0  5018               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor^0,w,c
  8522  002EC2  089D               	sublw	low (_mtouch_sensor+9)
  8523  002EC4                     u3145:
  8524  002EC4  B0D8               	btfsc	status,0,c
  8525  002EC6  EF67  F017         	goto	u3141
  8526  002ECA  EF69  F017         	goto	u3140
  8527  002ECE                     u3141:
  8528  002ECE  EF53  F017         	goto	l5003
  8529  002ED2                     u3140:
  8530  002ED2                     l394:
  8531  002ED2  0012               	return		;funcret
  8532  002ED4                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  8536 ;; Defined at:
  8537 ;;		line 275 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  sensor          1   32[COMRAM] enum E12860
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;Total ram usage:        1 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    8
  8558 ;; This function calls:
  8559 ;;		_MTOUCH_Sensor_Initialize
  8560 ;;		_memcpy
  8561 ;; This function is called by:
  8562 ;;		_MTOUCH_Initialize
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text68
  8567  0032D0                     __ptext68:
  8568                           	callstack 0
  8569  0032D0                     _MTOUCH_Sensor_InitializeAll:
  8570                           	callstack 19
  8571  0032D0                     
  8572                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 277:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 279:     memcpy(mtouch_sensor,mtouch_sensor_i
      +                          nit,sizeof(mtouch_sensor_init));
  8573  0032D0  0E94               	movlw	low _mtouch_sensor
  8574  0032D2  6E16               	movwf	memcpy@d1^0,c
  8575  0032D4  0E00               	movlw	high _mtouch_sensor
  8576  0032D6  6E17               	movwf	(memcpy@d1+1)^0,c
  8577  0032D8  0E21               	movlw	low _mtouch_sensor_init
  8578  0032DA  6E18               	movwf	memcpy@s1^0,c
  8579  0032DC  0E0F               	movlw	high _mtouch_sensor_init
  8580  0032DE  6E19               	movwf	(memcpy@s1+1)^0,c
  8581  0032E0  0E00               	movlw	0
  8582  0032E2  6E1B               	movwf	(memcpy@n+1)^0,c
  8583  0032E4  0E12               	movlw	18
  8584  0032E6  6E1A               	movwf	memcpy@n^0,c
  8585  0032E8  ECC4  F016         	call	_memcpy	;wreg free
  8586  0032EC                     
  8587                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 281:     for (sensor = 0; sensor < 2u; sens
      +                          or++)
  8588  0032EC  0E00               	movlw	0
  8589  0032EE  6E21               	movwf	MTOUCH_Sensor_InitializeAll@sensor^0,c
  8590  0032F0                     l4979:
  8591                           
  8592                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 282:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 283:         MTOUCH_Sensor_Initialize(sensor);
  8593  0032F0  5021               	movf	MTOUCH_Sensor_InitializeAll@sensor^0,w,c
  8594  0032F2  ECF4  F01A         	call	_MTOUCH_Sensor_Initialize
  8595  0032F6                     
  8596                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 284:     }
  8597  0032F6  2A21               	incf	MTOUCH_Sensor_InitializeAll@sensor^0,f,c
  8598  0032F8  0E01               	movlw	1
  8599  0032FA  6421               	cpfsgt	MTOUCH_Sensor_InitializeAll@sensor^0,c
  8600  0032FC  EF82  F019         	goto	u3111
  8601  003300  EF84  F019         	goto	u3110
  8602  003304                     u3111:
  8603  003304  EF78  F019         	goto	l4979
  8604  003308                     u3110:
  8605  003308  0012               	return		;funcret
  8606  00330A                     __end_of_MTOUCH_Sensor_InitializeAll:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  8610 ;; Defined at:
  8611 ;;		line 203 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  sensor          1    wreg     enum E12860
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  sensor          1   23[COMRAM] enum E12860
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      enum E12863
  8618 ;; Registers used:
  8619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;Total ram usage:        1 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    7
  8632 ;; This function calls:
  8633 ;;		_MTOUCH_Sensor_Calibrate
  8634 ;;		_MTOUCH_Sensor_Enable
  8635 ;;		_Sensor_Sampled_Reset
  8636 ;; This function is called by:
  8637 ;;		_MTOUCH_Sensor_InitializeAll
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text69
  8642  0035E8                     __ptext69:
  8643                           	callstack 0
  8644  0035E8                     _MTOUCH_Sensor_Initialize:
  8645                           	callstack 19
  8646                           
  8647                           ;incstack = 0
  8648                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  8649  0035E8  6E18               	movwf	MTOUCH_Sensor_Initialize@sensor^0,c
  8650  0035EA                     
  8651                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 203: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           204: {;mcc_generated_files/mtouch/mtouch_sensor.c: 205:     MTOUCH_Sensor_Enable(sensor
      +                          );
  8652  0035EA  5018               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  8653  0035EC  EC91  F01A         	call	_MTOUCH_Sensor_Enable
  8654                           
  8655                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 206:     MTOUCH_Sensor_Calibrate(sensor);
  8656  0035F0  5018               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  8657  0035F2  ECA5  F01A         	call	_MTOUCH_Sensor_Calibrate
  8658                           
  8659                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 207:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  8660  0035F6  5018               	movf	MTOUCH_Sensor_Initialize@sensor^0,w,c
  8661  0035F8  0D09               	mullw	9
  8662  0035FA  0E94               	movlw	low _mtouch_sensor
  8663  0035FC  24F3               	addwf	243,w,c
  8664  0035FE  6E16               	movwf	Sensor_Sampled_Reset@sensor^0,c
  8665  003600  0E00               	movlw	high _mtouch_sensor
  8666  003602  20F4               	addwfc	prodh,w,c
  8667  003604  6E17               	movwf	(Sensor_Sampled_Reset@sensor+1)^0,c
  8668  003606  ECCD  F01B         	call	_Sensor_Sampled_Reset	;wreg free
  8669  00360A  0012               	return		;funcret
  8670  00360C                     __end_of_MTOUCH_Sensor_Initialize:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _Sensor_Sampled_Reset *****************
  8674 ;; Defined at:
  8675 ;;		line 885 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  sensor          2   21[COMRAM] PTR struct .
  8678 ;;		 -> mtouch_sensor(18), 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:        2 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    6
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_MTOUCH_Sensor_Initialize
  8701 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text70
  8706  00379A                     __ptext70:
  8707                           	callstack 0
  8708  00379A                     _Sensor_Sampled_Reset:
  8709                           	callstack 21
  8710  00379A                     
  8711                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 885: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          886: {;mcc_generated_files/mtouch/mtouch_sensor.c: 887:     sensor->sampled = 0;
  8712  00379A  EE20 F008          	lfsr	2,8
  8713  00379E  5016               	movf	Sensor_Sampled_Reset@sensor^0,w,c
  8714  0037A0  26D9               	addwf	fsr2l,f,c
  8715  0037A2  5017               	movf	(Sensor_Sampled_Reset@sensor+1)^0,w,c
  8716  0037A4  22DA               	addwfc	fsr2h,f,c
  8717  0037A6  92DF               	bcf	indf2,1,c
  8718  0037A8  0012               	return		;funcret
  8719  0037AA                     __end_of_Sensor_Sampled_Reset:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function _MTOUCH_Sensor_Enable *****************
  8723 ;; Defined at:
  8724 ;;		line 759 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  sensor          1    wreg     enum E12860
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;  sensor          1   21[COMRAM] enum E12860
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;Total ram usage:        1 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:    6
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_MTOUCH_Sensor_Initialize
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text71
  8753  003522                     __ptext71:
  8754                           	callstack 0
  8755  003522                     _MTOUCH_Sensor_Enable:
  8756                           	callstack 19
  8757                           
  8758                           ;incstack = 0
  8759                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  8760  003522  6E16               	movwf	MTOUCH_Sensor_Enable@sensor^0,c
  8761  003524                     
  8762                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 759: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 760: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 761:     if(sensor < 2u)
  8763  003524  0E02               	movlw	2
  8764  003526  6016               	cpfslt	MTOUCH_Sensor_Enable@sensor^0,c
  8765  003528  EF98  F01A         	goto	u2231
  8766  00352C  EF9A  F01A         	goto	u2230
  8767  003530                     u2231:
  8768  003530  EFA4  F01A         	goto	l346
  8769  003534                     u2230:
  8770  003534                     
  8771                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 762:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  8772  003534  5016               	movf	MTOUCH_Sensor_Enable@sensor^0,w,c
  8773  003536  0D09               	mullw	9
  8774  003538  0E9C               	movlw	low (_mtouch_sensor+8)
  8775  00353A  24F3               	addwf	243,w,c
  8776  00353C  6ED9               	movwf	fsr2l,c
  8777  00353E  0E00               	movlw	high (_mtouch_sensor+8)
  8778  003540  20F4               	addwfc	prodh,w,c
  8779  003542  6EDA               	movwf	fsr2h,c
  8780  003544  0100               	movlb	0	; () banked
  8781  003546  80DF               	bsf	indf2,0,c
  8782  003548                     l346:
  8783  003548  0012               	return		;funcret
  8784  00354A                     __end_of_MTOUCH_Sensor_Enable:
  8785                           	callstack 0
  8786                           
  8787 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  8788 ;; Defined at:
  8789 ;;		line 163 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  button          1   32[COMRAM] enum E12923
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;Total ram usage:        1 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    8
  8810 ;; This function calls:
  8811 ;;		_MTOUCH_Button_Initialize
  8812 ;;		_memcpy
  8813 ;; This function is called by:
  8814 ;;		_MTOUCH_Initialize
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text72
  8819  00330A                     __ptext72:
  8820                           	callstack 0
  8821  00330A                     _MTOUCH_Button_InitializeAll:
  8822                           	callstack 19
  8823  00330A                     
  8824                           ;mcc_generated_files/mtouch/mtouch_button.c: 165:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 167:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  8825  00330A  0E74               	movlw	low _mtouch_button
  8826  00330C  6E16               	movwf	memcpy@d1^0,c
  8827  00330E  0E00               	movlw	high _mtouch_button
  8828  003310  6E17               	movwf	(memcpy@d1+1)^0,c
  8829  003312  0E01               	movlw	low _mtouch_button_init
  8830  003314  6E18               	movwf	memcpy@s1^0,c
  8831  003316  0E0F               	movlw	high _mtouch_button_init
  8832  003318  6E19               	movwf	(memcpy@s1+1)^0,c
  8833  00331A  0E00               	movlw	0
  8834  00331C  6E1B               	movwf	(memcpy@n+1)^0,c
  8835  00331E  0E20               	movlw	32
  8836  003320  6E1A               	movwf	memcpy@n^0,c
  8837  003322  ECC4  F016         	call	_memcpy	;wreg free
  8838  003326                     
  8839                           ;mcc_generated_files/mtouch/mtouch_button.c: 169:     for (button = 0; button < 2u; butt
      +                          on++)
  8840  003326  0E00               	movlw	0
  8841  003328  6E21               	movwf	MTOUCH_Button_InitializeAll@button^0,c
  8842  00332A                     l4993:
  8843                           
  8844                           ;mcc_generated_files/mtouch/mtouch_button.c: 170:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 171:         MTOUCH_Button_Initialize(button);
  8845  00332A  5021               	movf	MTOUCH_Button_InitializeAll@button^0,w,c
  8846  00332C  EC2F  F015         	call	_MTOUCH_Button_Initialize
  8847  003330                     
  8848                           ;mcc_generated_files/mtouch/mtouch_button.c: 172:     }
  8849  003330  2A21               	incf	MTOUCH_Button_InitializeAll@button^0,f,c
  8850  003332  0E01               	movlw	1
  8851  003334  6421               	cpfsgt	MTOUCH_Button_InitializeAll@button^0,c
  8852  003336  EF9F  F019         	goto	u3121
  8853  00333A  EFA1  F019         	goto	u3120
  8854  00333E                     u3121:
  8855  00333E  EF95  F019         	goto	l4993
  8856  003342                     u3120:
  8857  003342  0012               	return		;funcret
  8858  003344                     __end_of_MTOUCH_Button_InitializeAll:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function _memcpy *****************
  8862 ;; Defined at:
  8863 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\memcpy.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  d1              2   21[COMRAM] PTR void 
  8866 ;;		 -> mtouch_button(32), mtouch_sensor(18), 
  8867 ;;  s1              2   23[COMRAM] PTR const void 
  8868 ;;		 -> mtouch_button_init(32), mtouch_sensor_init(18), 
  8869 ;;  n               2   25[COMRAM] unsigned int 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  s               2   29[COMRAM] PTR const unsigned char 
  8872 ;;		 -> mtouch_button_init(32), mtouch_sensor_init(18), 
  8873 ;;  d               2   27[COMRAM] PTR unsigned char 
  8874 ;;		 -> mtouch_button(32), mtouch_sensor(18), 
  8875 ;;  tmp             1   31[COMRAM] unsigned char 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  2   21[COMRAM] PTR void 
  8878 ;; Registers used:
  8879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8885 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8886 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8888 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;Total ram usage:       11 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    6
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_MTOUCH_Sensor_InitializeAll
  8896 ;;		_MTOUCH_Button_InitializeAll
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text73
  8901  002D88                     __ptext73:
  8902                           	callstack 0
  8903  002D88                     _memcpy:
  8904                           	callstack 20
  8905  002D88  C018  F01E         	movff	memcpy@s1,memcpy@s
  8906  002D8C  C019  F01F         	movff	memcpy@s1+1,memcpy@s+1
  8907  002D90  C016  F01C         	movff	memcpy@d1,memcpy@d
  8908  002D94  C017  F01D         	movff	memcpy@d1+1,memcpy@d+1
  8909  002D98  EFE1  F016         	goto	l4701
  8910  002D9C                     l4693:
  8911  002D9C  C01E  FFF6         	movff	memcpy@s,tblptrl
  8912  002DA0  C01F  FFF7         	movff	memcpy@s+1,tblptrh
  8913  002DA4                     	if	0	;tblptru may be non-zero
  8914  002DA4                     	endif
  8915  002DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8916  002DA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8917  002DA6  6EF8               	movwf	tblptru,c
  8918  002DA8                     	endif
  8919  002DA8  0008               	tblrd		*
  8920  002DAA  CFF5 F020          	movff	tablat,memcpy@tmp
  8921  002DAE  4A1E               	infsnz	memcpy@s^0,f,c
  8922  002DB0  2A1F               	incf	(memcpy@s+1)^0,f,c
  8923  002DB2  C01C  FFD9         	movff	memcpy@d,fsr2l
  8924  002DB6  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  8925  002DBA  C020  FFDF         	movff	memcpy@tmp,indf2
  8926  002DBE  4A1C               	infsnz	memcpy@d^0,f,c
  8927  002DC0  2A1D               	incf	(memcpy@d+1)^0,f,c
  8928  002DC2                     l4701:
  8929  002DC2  061A               	decf	memcpy@n^0,f,c
  8930  002DC4  A0D8               	btfss	status,0,c
  8931  002DC6  061B               	decf	(memcpy@n+1)^0,f,c
  8932  002DC8  281A               	incf	memcpy@n^0,w,c
  8933  002DCA  E106               	bnz	u2581
  8934  002DCC  281B               	incf	(memcpy@n+1)^0,w,c
  8935  002DCE  A4D8               	btfss	status,2,c
  8936  002DD0  EFEC  F016         	goto	u2581
  8937  002DD4  EFEE  F016         	goto	u2580
  8938  002DD8                     u2581:
  8939  002DD8  EFCE  F016         	goto	l4693
  8940  002DDC                     u2580:
  8941  002DDC  0012               	return		;funcret
  8942  002DDE                     __end_of_memcpy:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _MTOUCH_Button_Initialize *****************
  8946 ;; Defined at:
  8947 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  name            1    wreg     enum E12923
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  name            1   22[COMRAM] enum E12923
  8952 ;;  button          2   23[COMRAM] PTR struct .
  8953 ;;		 -> mtouch_button(32), 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      void 
  8956 ;; Registers used:
  8957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;Total ram usage:        3 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    7
  8970 ;; This function calls:
  8971 ;;		_MTOUCH_Sensor_Calibrate
  8972 ;; This function is called by:
  8973 ;;		_MTOUCH_Button_InitializeAll
  8974 ;;		_Button_Service
  8975 ;;		_Button_State_NotPressed
  8976 ;;		_Button_State_Pressed
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text74
  8981  002A5E                     __ptext74:
  8982                           	callstack 0
  8983  002A5E                     _MTOUCH_Button_Initialize:
  8984                           	callstack 19
  8985                           
  8986                           ;incstack = 0
  8987                           ;MTOUCH_Button_Initialize@name stored from wreg
  8988  002A5E  6E17               	movwf	MTOUCH_Button_Initialize@name^0,c
  8989  002A60                     
  8990                           ;mcc_generated_files/mtouch/mtouch_button.c: 151: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 152: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 153:     mtouch_button_t* button = &mtouch_button[name];
  8991  002A60  5017               	movf	MTOUCH_Button_Initialize@name^0,w,c
  8992  002A62  0D10               	mullw	16
  8993  002A64  0E74               	movlw	low _mtouch_button
  8994  002A66  24F3               	addwf	243,w,c
  8995  002A68  6E18               	movwf	MTOUCH_Button_Initialize@button^0,c
  8996  002A6A  0E00               	movlw	high _mtouch_button
  8997  002A6C  20F4               	addwfc	prodh,w,c
  8998  002A6E  6E19               	movwf	(MTOUCH_Button_Initialize@button+1)^0,c
  8999  002A70                     
  9000                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  9001  002A70  EE20 F002          	lfsr	2,2
  9002  002A74  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9003  002A76  26D9               	addwf	fsr2l,f,c
  9004  002A78  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9005  002A7A  22DA               	addwfc	fsr2h,f,c
  9006  002A7C  0E00               	movlw	0
  9007  002A7E  6EDF               	movwf	indf2,c
  9008  002A80                     
  9009                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  9010  002A80  EE20 F005          	lfsr	2,5
  9011  002A84  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9012  002A86  26D9               	addwf	fsr2l,f,c
  9013  002A88  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9014  002A8A  22DA               	addwfc	fsr2h,f,c
  9015  002A8C  6ADE               	clrf	postinc2,c
  9016  002A8E  6ADE               	clrf	postinc2,c
  9017  002A90  6ADE               	clrf	postinc2,c
  9018  002A92  6ADD               	clrf	postdec2,c
  9019  002A94                     
  9020                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  9021  002A94  EE20 F00A          	lfsr	2,10
  9022  002A98  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9023  002A9A  26D9               	addwf	fsr2l,f,c
  9024  002A9C  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9025  002A9E  22DA               	addwfc	fsr2h,f,c
  9026  002AA0  0E00               	movlw	0
  9027  002AA2  6EDE               	movwf	postinc2,c
  9028  002AA4  0E00               	movlw	0
  9029  002AA6  6EDD               	movwf	postdec2,c
  9030  002AA8                     
  9031                           ;mcc_generated_files/mtouch/mtouch_button.c: 158:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  9032  002AA8  EE20 F00C          	lfsr	2,12
  9033  002AAC  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9034  002AAE  26D9               	addwf	fsr2l,f,c
  9035  002AB0  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9036  002AB2  22DA               	addwfc	fsr2h,f,c
  9037  002AB4  0E00               	movlw	0
  9038  002AB6  6EDE               	movwf	postinc2,c
  9039  002AB8  0E00               	movlw	0
  9040  002ABA  6EDD               	movwf	postdec2,c
  9041  002ABC                     
  9042                           ;mcc_generated_files/mtouch/mtouch_button.c: 160:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  9043  002ABC  EE20 F001          	lfsr	2,1
  9044  002AC0  5018               	movf	MTOUCH_Button_Initialize@button^0,w,c
  9045  002AC2  26D9               	addwf	fsr2l,f,c
  9046  002AC4  5019               	movf	(MTOUCH_Button_Initialize@button+1)^0,w,c
  9047  002AC6  22DA               	addwfc	fsr2h,f,c
  9048  002AC8  50DF               	movf	indf2,w,c
  9049  002ACA  ECA5  F01A         	call	_MTOUCH_Sensor_Calibrate
  9050  002ACE  0012               	return		;funcret
  9051  002AD0                     __end_of_MTOUCH_Button_Initialize:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  9055 ;; Defined at:
  9056 ;;		line 821 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  sensor          1    wreg     enum E12860
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  sensor          1   21[COMRAM] enum E12860
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      void 
  9063 ;; Registers used:
  9064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;Total ram usage:        1 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:    6
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_MTOUCH_Sensor_Initialize
  9081 ;;		_MTOUCH_Button_Initialize
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text75
  9086  00354A                     __ptext75:
  9087                           	callstack 0
  9088  00354A                     _MTOUCH_Sensor_Calibrate:
  9089                           	callstack 19
  9090                           
  9091                           ;incstack = 0
  9092                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
  9093  00354A  6E16               	movwf	MTOUCH_Sensor_Calibrate@sensor^0,c
  9094  00354C                     
  9095                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 821: void MTOUCH_Sensor_Calibrate(enum mtou
      +                          ch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 822: {;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 823:     if(sensor < 2u)
  9096  00354C  0E02               	movlw	2
  9097  00354E  6016               	cpfslt	MTOUCH_Sensor_Calibrate@sensor^0,c
  9098  003550  EFAC  F01A         	goto	u2191
  9099  003554  EFAE  F01A         	goto	u2190
  9100  003558                     u2191:
  9101  003558  EFB8  F01A         	goto	l372
  9102  00355C                     u2190:
  9103  00355C                     
  9104                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 824:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 825:         mtouch_sensor[sensor].calibrated = 0;
  9105  00355C  5016               	movf	MTOUCH_Sensor_Calibrate@sensor^0,w,c
  9106  00355E  0D09               	mullw	9
  9107  003560  0E9C               	movlw	low (_mtouch_sensor+8)
  9108  003562  24F3               	addwf	243,w,c
  9109  003564  6ED9               	movwf	fsr2l,c
  9110  003566  0E00               	movlw	high (_mtouch_sensor+8)
  9111  003568  20F4               	addwfc	prodh,w,c
  9112  00356A  6EDA               	movwf	fsr2h,c
  9113  00356C  0100               	movlb	0	; () banked
  9114  00356E  96DF               	bcf	indf2,3,c
  9115  003570                     l372:
  9116  003570  0012               	return		;funcret
  9117  003572                     __end_of_MTOUCH_Sensor_Calibrate:
  9118                           	callstack 0
  9119                           
  9120 ;; *************** function _INTERRUPT_Initialize *****************
  9121 ;; Defined at:
  9122 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;		None
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		None
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;Total ram usage:        0 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:    6
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_SYSTEM_Initialize
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text76
  9151  00383E                     __ptext76:
  9152                           	callstack 0
  9153  00383E                     _INTERRUPT_Initialize:
  9154                           	callstack 23
  9155  00383E                     
  9156                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  9157  00383E  9AF2               	bcf	242,5,c	;volatile
  9158  003840  0012               	return		;funcret
  9159  003842                     __end_of_INTERRUPT_Initialize:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function _ADCC_Initialize *****************
  9163 ;; Defined at:
  9164 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;		None
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9182 ;;Total ram usage:        0 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    7
  9185 ;; This function calls:
  9186 ;;		_ADCC_SetADTIInterruptHandler
  9187 ;; This function is called by:
  9188 ;;		_SYSTEM_Initialize
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text77
  9193  002BA6                     __ptext77:
  9194                           	callstack 0
  9195  002BA6                     _ADCC_Initialize:
  9196                           	callstack 22
  9197  002BA6                     
  9198                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  9199  002BA6  0E00               	movlw	0
  9200  002BA8  6E65               	movwf	101,c	;volatile
  9201                           
  9202                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  9203  002BAA  0E00               	movlw	0
  9204  002BAC  6E66               	movwf	102,c	;volatile
  9205                           
  9206                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  9207  002BAE  0E00               	movlw	0
  9208  002BB0  6E67               	movwf	103,c	;volatile
  9209                           
  9210                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  9211  002BB2  0E00               	movlw	0
  9212  002BB4  6E68               	movwf	104,c	;volatile
  9213                           
  9214                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  9215  002BB6  0E00               	movlw	0
  9216  002BB8  6E63               	movwf	99,c	;volatile
  9217                           
  9218                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  9219  002BBA  0E00               	movlw	0
  9220  002BBC  6E64               	movwf	100,c	;volatile
  9221                           
  9222                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  9223  002BBE  0E00               	movlw	0
  9224  002BC0  6E61               	movwf	97,c	;volatile
  9225                           
  9226                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  9227  002BC2  0E00               	movlw	0
  9228  002BC4  010F               	movlb	15	; () banked
  9229  002BC6  6F5A               	movwf	90,b	;volatile
  9230                           
  9231                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  9232  002BC8  0E00               	movlw	0
  9233  002BCA  6F58               	movwf	88,b	;volatile
  9234                           
  9235                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  9236  002BCC  0E00               	movlw	0
  9237  002BCE  6F59               	movwf	89,b	;volatile
  9238                           
  9239                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  9240  002BD0  0E00               	movlw	0
  9241  002BD2  6F54               	movwf	84,b	;volatile
  9242                           
  9243                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x10;
  9244  002BD4  0E10               	movlw	16
  9245  002BD6  6F55               	movwf	85,b	;volatile
  9246                           
  9247                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  9248  002BD8  0E00               	movlw	0
  9249  002BDA  6F56               	movwf	86,b	;volatile
  9250                           
  9251                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  9252  002BDC  0E00               	movlw	0
  9253  002BDE  6E60               	movwf	96,c	;volatile
  9254                           
  9255                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  9256  002BE0  0E00               	movlw	0
  9257  002BE2  6F53               	movwf	83,b	;volatile
  9258                           
  9259                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  9260  002BE4  0E00               	movlw	0
  9261  002BE6  6F51               	movwf	81,b	;volatile
  9262                           
  9263                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
  9264  002BE8  0E00               	movlw	0
  9265  002BEA  6F52               	movwf	82,b	;volatile
  9266                           
  9267                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  9268  002BEC  0E84               	movlw	132
  9269  002BEE  6F5B               	movwf	91,b	;volatile
  9270                           
  9271                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  9272  002BF0  0E00               	movlw	0
  9273  002BF2  6F57               	movwf	87,b	;volatile
  9274  002BF4                     
  9275                           ; BSR set to: 15
  9276                           ;mcc_generated_files/adcc.c: 107:     PIR1bits.ADTIF = 0;
  9277  002BF4  010E               	movlb	14	; () banked
  9278  002BF6  93C6               	bcf	198,1,b	;volatile
  9279  002BF8                     
  9280                           ; BSR set to: 14
  9281                           ;mcc_generated_files/adcc.c: 109:     PIE1bits.ADTIE = 1;
  9282  002BF8  83BE               	bsf	190,1,b	;volatile
  9283  002BFA                     
  9284                           ; BSR set to: 14
  9285                           ;mcc_generated_files/adcc.c: 111:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9286  002BFA  0E4E               	movlw	low _ADCC_DefaultInterruptHandler
  9287  002BFC  6E16               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  9288  002BFE  0E38               	movlw	high _ADCC_DefaultInterruptHandler
  9289  002C00  6E17               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  9290  002C02  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
  9291  002C04  6E18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  9292  002C06  ECEB  F01B         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9293  002C0A  0012               	return		;funcret
  9294  002C0C                     __end_of_ADCC_Initialize:
  9295                           	callstack 0
  9296                           
  9297 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  9298 ;; Defined at:
  9299 ;;		line 308 in file "mcc_generated_files/adcc.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  InterruptHan    3   21[COMRAM] PTR FTN()void 
  9302 ;;		 -> ADCC_DefaultInterruptHandler(1), ADCC_ThresholdISR_mTouch(1), 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2, status,0
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9314 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;Total ram usage:        3 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    6
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_MTOUCH_Sensor_ADCC_Initialize
  9325 ;;		_ADCC_Initialize
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text78
  9330  0037D6                     __ptext78:
  9331                           	callstack 0
  9332  0037D6                     _ADCC_SetADTIInterruptHandler:
  9333                           	callstack 19
  9334  0037D6                     
  9335                           ;mcc_generated_files/adcc.c: 309:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  9336  0037D6  C016  F0F3         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  9337  0037DA  C017  F0F4         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  9338  0037DE  C018  F0F5         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  9339  0037E2  0012               	return		;funcret
  9340  0037E4                     __end_of_ADCC_SetADTIInterruptHandler:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _MTOUCH_Button_SetPressedCallback *****************
  9344 ;; Defined at:
  9345 ;;		line 520 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  callback        3   21[COMRAM] PTR FTN(enum E12923,)voi
  9348 ;;		 -> processButtonTouch(1), 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, status,0
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;Total ram usage:        3 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    6
  9367 ;; This function calls:
  9368 ;;		Nothing
  9369 ;; This function is called by:
  9370 ;;		_main
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text79
  9375  0037E4                     __ptext79:
  9376                           	callstack 0
  9377  0037E4                     _MTOUCH_Button_SetPressedCallback:
  9378                           	callstack 24
  9379  0037E4                     
  9380                           ;mcc_generated_files/mtouch/mtouch_button.c: 520: void MTOUCH_Button_SetPressedCallback(
      +                          void (*callback)(enum mtouch_button_names));mcc_generated_files/mtouch/mtouch_button.c: 
      +                          521: {;mcc_generated_files/mtouch/mtouch_button.c: 522:     callback_pressed = callback;
  9381  0037E4  C016  F0E3         	movff	MTOUCH_Button_SetPressedCallback@callback,_callback_pressed
  9382  0037E8  C017  F0E4         	movff	MTOUCH_Button_SetPressedCallback@callback+1,_callback_pressed+1
  9383  0037EC  C018  F0E5         	movff	MTOUCH_Button_SetPressedCallback@callback+2,_callback_pressed+2
  9384  0037F0  0012               	return		;funcret
  9385  0037F2                     __end_of_MTOUCH_Button_SetPressedCallback:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _MTOUCH_Button_SetNotPressedCallback *****************
  9389 ;; Defined at:
  9390 ;;		line 524 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  callback        3   21[COMRAM] PTR FTN(enum E12923,)voi
  9393 ;;		 -> processButtonRelease(1), 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  1    wreg      void 
  9398 ;; Registers used:
  9399 ;;		wreg, status,2, status,0
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9405 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9409 ;;Total ram usage:        3 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    6
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;;		_main
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text80
  9420  0037F2                     __ptext80:
  9421                           	callstack 0
  9422  0037F2                     _MTOUCH_Button_SetNotPressedCallback:
  9423                           	callstack 24
  9424  0037F2                     
  9425                           ;mcc_generated_files/mtouch/mtouch_button.c: 524: void MTOUCH_Button_SetNotPressedCallba
      +                          ck(void (*callback)(enum mtouch_button_names));mcc_generated_files/mtouch/mtouch_button.
      +                          c: 525: {;mcc_generated_files/mtouch/mtouch_button.c: 526:     callback_notPressed = cal
      +                          lback;
  9426  0037F2  C016  F047         	movff	MTOUCH_Button_SetNotPressedCallback@callback,_callback_notPressed
  9427  0037F6  C017  F048         	movff	MTOUCH_Button_SetNotPressedCallback@callback+1,_callback_notPressed+1
  9428  0037FA  C018  F049         	movff	MTOUCH_Button_SetNotPressedCallback@callback+2,_callback_notPressed+2
  9429  0037FE  0012               	return		;funcret
  9430  003800                     __end_of_MTOUCH_Button_SetNotPressedCallback:
  9431                           	callstack 0
  9432                           
  9433 ;; *************** function _INTERRUPT_InterruptManager *****************
  9434 ;; Defined at:
  9435 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;		None
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      void 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9451 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;Total ram usage:        6 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    5
  9456 ;; This function calls:
  9457 ;;		_ADCC_ThresholdISR
  9458 ;;		_TMR1_ISR
  9459 ;;		_TMR3_ISR
  9460 ;; This function is called by:
  9461 ;;		Interrupt level 2
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	intcode
  9466  000008                     __pintcode:
  9467                           	callstack 0
  9468  000008                     _INTERRUPT_InterruptManager:
  9469                           	callstack 14
  9470                           
  9471                           ;incstack = 0
  9472  000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9473  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  9474  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9475  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  9476  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  9477  00001A  CFF3 F014          	movff	prodl,??_INTERRUPT_InterruptManager+4
  9478  00001E  CFF4 F015          	movff	prodh,??_INTERRUPT_InterruptManager+5
  9479  000022                     
  9480                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9481  000022  ACF2               	btfss	242,6,c	;volatile
  9482  000024  EF16  F000         	goto	i2u377_41
  9483  000028  EF18  F000         	goto	i2u377_40
  9484  00002C                     i2u377_41:
  9485  00002C  EF4F  F000         	goto	i2l1088
  9486  000030                     i2u377_40:
  9487  000030                     
  9488                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
  9489  000030  010E               	movlb	14	; () banked
  9490  000032  A3BE               	btfss	190,1,b	;volatile
  9491  000034  EF1E  F000         	goto	i2u378_41
  9492  000038  EF20  F000         	goto	i2u378_40
  9493  00003C                     i2u378_41:
  9494  00003C  EF2B  F000         	goto	i2l1081
  9495  000040                     i2u378_40:
  9496  000040                     
  9497                           ; BSR set to: 14
  9498  000040  A3C6               	btfss	198,1,b	;volatile
  9499  000042  EF25  F000         	goto	i2u379_41
  9500  000046  EF27  F000         	goto	i2u379_40
  9501  00004A                     i2u379_41:
  9502  00004A  EF2B  F000         	goto	i2l1081
  9503  00004E                     i2u379_40:
  9504  00004E                     
  9505                           ; BSR set to: 14
  9506                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADCC_ThresholdISR();
  9507  00004E  ECDA  F019         	call	_ADCC_ThresholdISR	;wreg free
  9508                           
  9509                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  9510  000052  EF4F  F000         	goto	i2l1088
  9511  000056                     i2l1081:
  9512                           
  9513                           ; BSR set to: 14
  9514  000056  A5C1               	btfss	193,2,b	;volatile
  9515  000058  EF30  F000         	goto	i2u380_41
  9516  00005C  EF32  F000         	goto	i2u380_40
  9517  000060                     i2u380_41:
  9518  000060  EF3D  F000         	goto	i2l1083
  9519  000064                     i2u380_40:
  9520  000064                     
  9521                           ; BSR set to: 14
  9522  000064  A5C9               	btfss	201,2,b	;volatile
  9523  000066  EF37  F000         	goto	i2u381_41
  9524  00006A  EF39  F000         	goto	i2u381_40
  9525  00006E                     i2u381_41:
  9526  00006E  EF3D  F000         	goto	i2l1083
  9527  000072                     i2u381_40:
  9528  000072                     
  9529                           ; BSR set to: 14
  9530                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR3_ISR();
  9531  000072  EC4B  F018         	call	_TMR3_ISR	;wreg free
  9532                           
  9533                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9534  000076  EF4F  F000         	goto	i2l1088
  9535  00007A                     i2l1083:
  9536                           
  9537                           ; BSR set to: 14
  9538  00007A  A1C1               	btfss	193,0,b	;volatile
  9539  00007C  EF42  F000         	goto	i2u382_41
  9540  000080  EF44  F000         	goto	i2u382_40
  9541  000084                     i2u382_41:
  9542  000084  EF4F  F000         	goto	i2l1082
  9543  000088                     i2u382_40:
  9544  000088                     
  9545                           ; BSR set to: 14
  9546  000088  A1C9               	btfss	201,0,b	;volatile
  9547  00008A  EF49  F000         	goto	i2u383_41
  9548  00008E  EF4B  F000         	goto	i2u383_40
  9549  000092                     i2u383_41:
  9550  000092  EF4F  F000         	goto	i2l1082
  9551  000096                     i2u383_40:
  9552  000096                     
  9553                           ; BSR set to: 14
  9554                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR1_ISR();
  9555  000096  EC6C  F018         	call	_TMR1_ISR	;wreg free
  9556                           
  9557                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  9558  00009A  EF4F  F000         	goto	i2l1088
  9559  00009E                     i2l1082:
  9560  00009E                     i2l1088:
  9561  00009E  C015  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  9562  0000A2  C014  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  9563  0000A6  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  9564  0000AA  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  9565  0000AE  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9566  0000B2  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9567  0000B6  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9568  0000B8  0011               	retfie		f
  9569  0000BA                     __end_of_INTERRUPT_InterruptManager:
  9570                           	callstack 0
  9571                           
  9572 ;; *************** function _TMR3_ISR *****************
  9573 ;; Defined at:
  9574 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;		None
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      void 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9592 ;;Total ram usage:        0 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:    1
  9595 ;; This function calls:
  9596 ;;		Absolute function
  9597 ;;		_TMR3_DefaultInterruptHandler
  9598 ;;		i2_TMR3_WriteTimer
  9599 ;; This function is called by:
  9600 ;;		_INTERRUPT_InterruptManager
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text82
  9605  003096                     __ptext82:
  9606                           	callstack 0
  9607  003096                     _TMR3_ISR:
  9608                           	callstack 17
  9609  003096                     
  9610                           ;mcc_generated_files/tmr3.c: 168:     PIR4bits.TMR3IF = 0;
  9611  003096  010E               	movlb	14	; () banked
  9612  003098  95C9               	bcf	201,2,b	;volatile
  9613  00309A                     
  9614                           ; BSR set to: 14
  9615                           ;mcc_generated_files/tmr3.c: 169:     TMR3_WriteTimer(timer3ReloadVal);
  9616  00309A  C043  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
  9617  00309E  C044  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
  9618  0030A2  ECB9  F01A         	call	i2_TMR3_WriteTimer	;wreg free
  9619  0030A6                     
  9620                           ;mcc_generated_files/tmr3.c: 171:     if(TMR3_InterruptHandler)
  9621  0030A6  0100               	movlb	0	; () banked
  9622  0030A8  51ED               	movf	_TMR3_InterruptHandler& (0+255),w,b
  9623  0030AA  11EE               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  9624  0030AC  11EF               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
  9625  0030AE  B4D8               	btfsc	status,2,c
  9626  0030B0  EF5C  F018         	goto	i2u359_41
  9627  0030B4  EF5E  F018         	goto	i2u359_40
  9628  0030B8                     i2u359_41:
  9629  0030B8  EF6B  F018         	goto	i2l1003
  9630  0030BC                     i2u359_40:
  9631  0030BC                     
  9632                           ; BSR set to: 0
  9633                           ;mcc_generated_files/tmr3.c: 172:     {;mcc_generated_files/tmr3.c: 173:         TMR3_In
      +                          terruptHandler();
  9634  0030BC  D802               	call	i2u360_48
  9635  0030BE  EF6B  F018         	goto	i2u360_49
  9636  0030C2                     i2u360_48:
  9637  0030C2  0005               	push	
  9638  0030C4  6EFA               	movwf	pclath,c
  9639  0030C6  51ED               	movf	_TMR3_InterruptHandler& (0+255),w,b
  9640  0030C8  6EFD               	movwf	tosl,c
  9641  0030CA  51EE               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  9642  0030CC  6EFE               	movwf	tosh,c
  9643  0030CE  51EF               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
  9644  0030D0  6EFF               	movwf	tosu,c
  9645  0030D2  50FA               	movf	pclath,w,c
  9646  0030D4  0012               	return		;indir
  9647  0030D6                     i2u360_49:
  9648  0030D6                     i2l1003:
  9649  0030D6  0012               	return		;funcret
  9650  0030D8                     __end_of_TMR3_ISR:
  9651                           	callstack 0
  9652                           
  9653 ;; *************** function i2_TMR3_WriteTimer *****************
  9654 ;; Defined at:
  9655 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  timerVal        2    0[COMRAM] unsigned short 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;		None
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9673 ;;Total ram usage:        2 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		_TMR3_ISR
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text83
  9683  003572                     __ptext83:
  9684                           	callstack 0
  9685  003572                     i2_TMR3_WriteTimer:
  9686                           	callstack 17
  9687  003572                     
  9688                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  9689  003572  A4C8               	btfss	200,2,c	;volatile
  9690  003574  EFBE  F01A         	goto	i2u349_41
  9691  003578  EFC0  F01A         	goto	i2u349_40
  9692  00357C                     i2u349_41:
  9693  00357C  EFC8  F01A         	goto	i2l5321
  9694  003580                     i2u349_40:
  9695  003580                     
  9696                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  9697  003580  90C8               	bcf	200,0,c	;volatile
  9698  003582                     
  9699                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  9700  003582  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  9701  003584  6EC7               	movwf	199,c	;volatile
  9702  003586                     
  9703                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  9704  003586  C001  FFC6         	movff	i2TMR3_WriteTimer@timerVal,4038	;volatile
  9705  00358A                     
  9706                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  9707  00358A  80C8               	bsf	200,0,c	;volatile
  9708                           
  9709                           ;mcc_generated_files/tmr3.c: 140:     }
  9710  00358C  EFCC  F01A         	goto	i2l990
  9711  003590                     i2l5321:
  9712                           
  9713                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  9714  003590  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  9715  003592  6EC7               	movwf	199,c	;volatile
  9716  003594                     
  9717                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  9718  003594  C001  FFC6         	movff	i2TMR3_WriteTimer@timerVal,4038	;volatile
  9719  003598                     i2l990:
  9720  003598  0012               	return		;funcret
  9721  00359A                     __end_ofi2_TMR3_WriteTimer:
  9722                           	callstack 0
  9723                           
  9724 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  9725 ;; Defined at:
  9726 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;		None
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		None
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;Total ram usage:        0 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_TMR3_Initialize
  9750 ;;		_TMR3_ISR
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text84
  9755  00384A                     __ptext84:
  9756                           	callstack 0
  9757  00384A                     _TMR3_DefaultInterruptHandler:
  9758                           	callstack 17
  9759  00384A  0012               	return		;funcret
  9760  00384C                     __end_of_TMR3_DefaultInterruptHandler:
  9761                           	callstack 0
  9762                           
  9763 ;; *************** function _TMR1_ISR *****************
  9764 ;; Defined at:
  9765 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    1
  9786 ;; This function calls:
  9787 ;;		Absolute function
  9788 ;;		_TMR1_DefaultInterruptHandler
  9789 ;;		i2_TMR1_WriteTimer
  9790 ;; This function is called by:
  9791 ;;		_INTERRUPT_InterruptManager
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text85
  9796  0030D8                     __ptext85:
  9797                           	callstack 0
  9798  0030D8                     _TMR1_ISR:
  9799                           	callstack 17
  9800  0030D8                     
  9801                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  9802  0030D8  010E               	movlb	14	; () banked
  9803  0030DA  91C9               	bcf	201,0,b	;volatile
  9804  0030DC                     
  9805                           ; BSR set to: 14
  9806                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  9807  0030DC  C045  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
  9808  0030E0  C046  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
  9809  0030E4  ECCD  F01A         	call	i2_TMR1_WriteTimer	;wreg free
  9810  0030E8                     
  9811                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  9812  0030E8  0100               	movlb	0	; () banked
  9813  0030EA  51F0               	movf	_TMR1_InterruptHandler& (0+255),w,b
  9814  0030EC  11F1               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  9815  0030EE  11F2               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
  9816  0030F0  B4D8               	btfsc	status,2,c
  9817  0030F2  EF7D  F018         	goto	i2u357_41
  9818  0030F6  EF7F  F018         	goto	i2u357_40
  9819  0030FA                     i2u357_41:
  9820  0030FA  EF8C  F018         	goto	i2l939
  9821  0030FE                     i2u357_40:
  9822  0030FE                     
  9823                           ; BSR set to: 0
  9824                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  9825  0030FE  D802               	call	i2u358_48
  9826  003100  EF8C  F018         	goto	i2u358_49
  9827  003104                     i2u358_48:
  9828  003104  0005               	push	
  9829  003106  6EFA               	movwf	pclath,c
  9830  003108  51F0               	movf	_TMR1_InterruptHandler& (0+255),w,b
  9831  00310A  6EFD               	movwf	tosl,c
  9832  00310C  51F1               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  9833  00310E  6EFE               	movwf	tosh,c
  9834  003110  51F2               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
  9835  003112  6EFF               	movwf	tosu,c
  9836  003114  50FA               	movf	pclath,w,c
  9837  003116  0012               	return		;indir
  9838  003118                     i2u358_49:
  9839  003118                     i2l939:
  9840  003118  0012               	return		;funcret
  9841  00311A                     __end_of_TMR1_ISR:
  9842                           	callstack 0
  9843                           
  9844 ;; *************** function i2_TMR1_WriteTimer *****************
  9845 ;; Defined at:
  9846 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  timerVal        2    0[COMRAM] unsigned short 
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;		None
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, status,2
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9864 ;;Total ram usage:        2 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_TMR1_ISR
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text86
  9874  00359A                     __ptext86:
  9875                           	callstack 0
  9876  00359A                     i2_TMR1_WriteTimer:
  9877                           	callstack 17
  9878  00359A                     
  9879                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  9880  00359A  A4CE               	btfss	206,2,c	;volatile
  9881  00359C  EFD2  F01A         	goto	i2u348_41
  9882  0035A0  EFD4  F01A         	goto	i2u348_40
  9883  0035A4                     i2u348_41:
  9884  0035A4  EFDC  F01A         	goto	i2l5307
  9885  0035A8                     i2u348_40:
  9886  0035A8                     
  9887                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  9888  0035A8  90CE               	bcf	206,0,c	;volatile
  9889  0035AA                     
  9890                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  9891  0035AA  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  9892  0035AC  6ECD               	movwf	205,c	;volatile
  9893  0035AE                     
  9894                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  9895  0035AE  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
  9896  0035B2                     
  9897                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  9898  0035B2  80CE               	bsf	206,0,c	;volatile
  9899                           
  9900                           ;mcc_generated_files/tmr1.c: 140:     }
  9901  0035B4  EFE0  F01A         	goto	i2l926
  9902  0035B8                     i2l5307:
  9903                           
  9904                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  9905  0035B8  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  9906  0035BA  6ECD               	movwf	205,c	;volatile
  9907  0035BC                     
  9908                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  9909  0035BC  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
  9910  0035C0                     i2l926:
  9911  0035C0  0012               	return		;funcret
  9912  0035C2                     __end_ofi2_TMR1_WriteTimer:
  9913                           	callstack 0
  9914                           
  9915 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9916 ;; Defined at:
  9917 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;		None
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1    wreg      void 
  9924 ;; Registers used:
  9925 ;;		None
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; This function calls:
  9938 ;;		Nothing
  9939 ;; This function is called by:
  9940 ;;		_TMR1_Initialize
  9941 ;;		_TMR1_ISR
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text87
  9946  00384C                     __ptext87:
  9947                           	callstack 0
  9948  00384C                     _TMR1_DefaultInterruptHandler:
  9949                           	callstack 17
  9950  00384C  0012               	return		;funcret
  9951  00384E                     __end_of_TMR1_DefaultInterruptHandler:
  9952                           	callstack 0
  9953                           
  9954 ;; *************** function _ADCC_ThresholdISR *****************
  9955 ;; Defined at:
  9956 ;;		line 299 in file "mcc_generated_files/adcc.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;		None
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;		None
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9974 ;;Total ram usage:        0 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    4
  9977 ;; This function calls:
  9978 ;;		Absolute function
  9979 ;;		_ADCC_DefaultInterruptHandler
  9980 ;;		_ADCC_ThresholdISR_mTouch
  9981 ;; This function is called by:
  9982 ;;		_INTERRUPT_InterruptManager
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text88
  9987  0033B4                     __ptext88:
  9988                           	callstack 0
  9989  0033B4                     _ADCC_ThresholdISR:
  9990                           	callstack 14
  9991  0033B4                     
  9992                           ;mcc_generated_files/adcc.c: 302:     PIR1bits.ADTIF = 0;
  9993  0033B4  010E               	movlb	14	; () banked
  9994  0033B6  93C6               	bcf	198,1,b	;volatile
  9995  0033B8                     
  9996                           ; BSR set to: 14
  9997                           ;mcc_generated_files/adcc.c: 304:     if (ADCC_ADTI_InterruptHandler)
  9998  0033B8  0100               	movlb	0	; () banked
  9999  0033BA  51F3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 10000  0033BC  11F4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 10001  0033BE  11F5               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 10002  0033C0  B4D8               	btfsc	status,2,c
 10003  0033C2  EFE5  F019         	goto	i2u355_41
 10004  0033C6  EFE7  F019         	goto	i2u355_40
 10005  0033CA                     i2u355_41:
 10006  0033CA  EFF4  F019         	goto	i2l875
 10007  0033CE                     i2u355_40:
 10008  0033CE                     
 10009                           ; BSR set to: 0
 10010                           ;mcc_generated_files/adcc.c: 305:         ADCC_ADTI_InterruptHandler();
 10011  0033CE  D802               	call	i2u356_48
 10012  0033D0  EFF4  F019         	goto	i2u356_49
 10013  0033D4                     i2u356_48:
 10014  0033D4  0005               	push	
 10015  0033D6  6EFA               	movwf	pclath,c
 10016  0033D8  51F3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 10017  0033DA  6EFD               	movwf	tosl,c
 10018  0033DC  51F4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 10019  0033DE  6EFE               	movwf	tosh,c
 10020  0033E0  51F5               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 10021  0033E2  6EFF               	movwf	tosu,c
 10022  0033E4  50FA               	movf	pclath,w,c
 10023  0033E6  0012               	return		;indir
 10024  0033E8                     i2u356_49:
 10025  0033E8                     i2l875:
 10026  0033E8  0012               	return		;funcret
 10027  0033EA                     __end_of_ADCC_ThresholdISR:
 10028                           	callstack 0
 10029                           
 10030 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 10031 ;; Defined at:
 10032 ;;		line 311 in file "mcc_generated_files/adcc.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      void 
 10039 ;; Registers used:
 10040 ;;		None
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; This function calls:
 10053 ;;		Nothing
 10054 ;; This function is called by:
 10055 ;;		_ADCC_Initialize
 10056 ;;		_ADCC_ThresholdISR
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text89
 10061  00384E                     __ptext89:
 10062                           	callstack 0
 10063  00384E                     _ADCC_DefaultInterruptHandler:
 10064                           	callstack 17
 10065  00384E  0012               	return		;funcret
 10066  003850                     __end_of_ADCC_DefaultInterruptHandler:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _ADCC_ThresholdISR_mTouch *****************
 10070 ;; Defined at:
 10071 ;;		line 495 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    3
 10092 ;; This function calls:
 10093 ;;		_MTOUCH_Sensor_Service
 10094 ;; This function is called by:
 10095 ;;		_MTOUCH_Sensor_ADCC_Initialize
 10096 ;;		_ADCC_ThresholdISR
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text90
 10101  00380A                     __ptext90:
 10102                           	callstack 0
 10103  00380A                     _ADCC_ThresholdISR_mTouch:
 10104                           	callstack 14
 10105  00380A                     
 10106                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 498:     PIR1bits.ADTIF = 0;
 10107  00380A  010E               	movlb	14	; () banked
 10108  00380C  93C6               	bcf	198,1,b	;volatile
 10109  00380E                     
 10110                           ; BSR set to: 14
 10111                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 499:     MTOUCH_Sensor_Service();
 10112  00380E  ECA3  F011         	call	_MTOUCH_Sensor_Service	;wreg free
 10113  003812  0012               	return		;funcret
 10114  003814                     __end_of_ADCC_ThresholdISR_mTouch:
 10115                           	callstack 0
 10116                           
 10117 ;; *************** function _MTOUCH_Sensor_Service *****************
 10118 ;; Defined at:
 10119 ;;		line 508 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;		None
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;  sensor          2   13[COMRAM] PTR struct .
 10124 ;;		 -> mtouch_sensor(18), 
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10138 ;;Total ram usage:        4 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    2
 10141 ;; This function calls:
 10142 ;;		_Sensor_autoCalibration
 10143 ;;		_Sensor_setSampled
 10144 ;;		i2_Sensor_SetTrisBit
 10145 ;;		i2_Sensor_isCalibrated
 10146 ;;		i2_Sensor_scheduleNextScan
 10147 ;;		i2_abs
 10148 ;; This function is called by:
 10149 ;;		_ADCC_ThresholdISR_mTouch
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           	psect	text91
 10154  002346                     __ptext91:
 10155                           	callstack 0
 10156  002346                     _MTOUCH_Sensor_Service:
 10157                           	callstack 14
 10158  002346                     
 10159                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 510:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 512:     Sensor_SetTrisBit(currentScanSensor,0);
 10160  002346  0E00               	movlw	0
 10161  002348  6E01               	movwf	i2Sensor_SetTrisBit@TrisBit^0,c
 10162  00234A  5040               	movf	_currentScanSensor^0,w,c
 10163  00234C  ECB8  F017         	call	i2_Sensor_SetTrisBit
 10164  002350                     
 10165                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 514:     if(scanInterrupted)
 10166  002350  503E               	movf	_scanInterrupted^0,w,c	;volatile
 10167  002352  B4D8               	btfsc	status,2,c
 10168  002354  EFAE  F011         	goto	i2u342_41
 10169  002358  EFB0  F011         	goto	i2u342_40
 10170  00235C                     i2u342_41:
 10171  00235C  EFB4  F011         	goto	i2l261
 10172  002360                     i2u342_40:
 10173  002360                     
 10174                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 515:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 516:         ADCON0bits.ADON = 0;
 10175  002360  010F               	movlb	15	; () banked
 10176  002362  9F5B               	bcf	91,7,b	;volatile
 10177                           
 10178                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 517:     }
 10179  002364  EF23  F012         	goto	i2l5221
 10180  002368                     i2l261:
 10181                           
 10182                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 519:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 520:         ADCON0bits.ADON = 0;
 10183  002368  010F               	movlb	15	; () banked
 10184  00236A  9F5B               	bcf	91,7,b	;volatile
 10185  00236C                     
 10186                           ; BSR set to: 15
 10187                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 521:         sensor = &mtouch_sensor[curren
      +                          tScanSensor];
 10188  00236C  5040               	movf	_currentScanSensor^0,w,c
 10189  00236E  0D09               	mullw	9
 10190  002370  0E94               	movlw	low _mtouch_sensor
 10191  002372  24F3               	addwf	243,w,c
 10192  002374  6E0E               	movwf	MTOUCH_Sensor_Service@sensor^0,c
 10193  002376  0E00               	movlw	high _mtouch_sensor
 10194  002378  20F4               	addwfc	prodh,w,c
 10195  00237A  6E0F               	movwf	(MTOUCH_Sensor_Service@sensor+1)^0,c
 10196  00237C                     
 10197                           ; BSR set to: 15
 10198                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 522:         if(!Sensor_isCalibrated(sensor
      +                          ))
 10199  00237C  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,i2Sensor_isCalibrated@sensor
 10200  002380  C00F  F002         	movff	MTOUCH_Sensor_Service@sensor+1,i2Sensor_isCalibrated@sensor+1
 10201  002384  EC68  F01B         	call	i2_Sensor_isCalibrated	;wreg free
 10202  002388  0900               	iorlw	0
 10203  00238A  A4D8               	btfss	status,2,c
 10204  00238C  EFCA  F011         	goto	i2u343_41
 10205  002390  EFCC  F011         	goto	i2u343_40
 10206  002394                     i2u343_41:
 10207  002394  EFD4  F011         	goto	i2l5209
 10208  002398                     i2u343_40:
 10209  002398                     
 10210                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 523:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 524:             Sensor_autoCalibration(sensor);
 10211  002398  C00E  F005         	movff	MTOUCH_Sensor_Service@sensor,Sensor_autoCalibration@sensor
 10212  00239C  C00F  F006         	movff	MTOUCH_Sensor_Service@sensor+1,Sensor_autoCalibration@sensor+1
 10213  0023A0  EC5E  F00F         	call	_Sensor_autoCalibration	;wreg free
 10214                           
 10215                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 525:         }
 10216  0023A4  EFDA  F011         	goto	i2l5211
 10217  0023A8                     i2l5209:
 10218                           
 10219                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 527:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 528:             Sensor_setSampled(sensor);
 10220  0023A8  C00E  F001         	movff	MTOUCH_Sensor_Service@sensor,Sensor_setSampled@sensor
 10221  0023AC  C00F  F002         	movff	MTOUCH_Sensor_Service@sensor+1,Sensor_setSampled@sensor+1
 10222  0023B0  ECD5  F01B         	call	_Sensor_setSampled	;wreg free
 10223  0023B4                     i2l5211:
 10224                           
 10225                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 531:         if((mtouch_sensor_packetsample
      +                          _t)
 10226  0023B4  5040               	movf	_currentScanSensor^0,w,c
 10227  0023B6  0D02               	mullw	2
 10228  0023B8  0E35               	movlw	low _packet_sample
 10229  0023BA  24F3               	addwf	243,w,c
 10230  0023BC  6ED9               	movwf	fsr2l,c
 10231  0023BE  0E00               	movlw	high _packet_sample
 10232  0023C0  20F4               	addwfc	prodh,w,c
 10233  0023C2  6EDA               	movwf	fsr2h,c
 10234  0023C4  CFDE F00C          	movff	postinc2,??_MTOUCH_Sensor_Service
 10235  0023C8  CFDD F00D          	movff	postdec2,??_MTOUCH_Sensor_Service+1
 10236  0023CC  506D               	movf	109,w,c	;volatile
 10237  0023CE  5C0C               	subwf	??_MTOUCH_Sensor_Service^0,w,c
 10238  0023D0  6E01               	movwf	i2abs@a^0,c
 10239  0023D2  506E               	movf	110,w,c	;volatile
 10240  0023D4  580D               	subwfb	(??_MTOUCH_Sensor_Service+1)^0,w,c
 10241  0023D6  6E02               	movwf	(i2abs@a+1)^0,c
 10242  0023D8  ECAD  F018         	call	i2_abs	;wreg free
 10243  0023DC  5002               	movf	(?i2_abs+1)^0,w,c
 10244  0023DE  E109               	bnz	i2u344_40
 10245  0023E0  0E65               	movlw	101
 10246  0023E2  5C01               	subwf	?i2_abs^0,w,c
 10247  0023E4  A0D8               	btfss	status,0,c
 10248  0023E6  EFF7  F011         	goto	i2u344_41
 10249  0023EA  EFF9  F011         	goto	i2u344_40
 10250  0023EE                     i2u344_41:
 10251  0023EE  EF05  F012         	goto	i2l5215
 10252  0023F2                     i2u344_40:
 10253  0023F2                     
 10254                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 534:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 535:             mtouch_sensor[currentScanSensor].active = 1;
 10255  0023F2  5040               	movf	_currentScanSensor^0,w,c
 10256  0023F4  0D09               	mullw	9
 10257  0023F6  0E9C               	movlw	low (_mtouch_sensor+8)
 10258  0023F8  24F3               	addwf	243,w,c
 10259  0023FA  6ED9               	movwf	fsr2l,c
 10260  0023FC  0E00               	movlw	high (_mtouch_sensor+8)
 10261  0023FE  20F4               	addwfc	prodh,w,c
 10262  002400  6EDA               	movwf	fsr2h,c
 10263  002402  0100               	movlb	0	; () banked
 10264  002404  84DF               	bsf	indf2,2,c
 10265                           
 10266                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 536:         }
 10267  002406  EF0F  F012         	goto	i2l5217
 10268  00240A                     i2l5215:
 10269                           
 10270                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 538:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 539:             mtouch_sensor[currentScanSensor].active = 0;
 10271  00240A  5040               	movf	_currentScanSensor^0,w,c
 10272  00240C  0D09               	mullw	9
 10273  00240E  0E9C               	movlw	low (_mtouch_sensor+8)
 10274  002410  24F3               	addwf	243,w,c
 10275  002412  6ED9               	movwf	fsr2l,c
 10276  002414  0E00               	movlw	high (_mtouch_sensor+8)
 10277  002416  20F4               	addwfc	prodh,w,c
 10278  002418  6EDA               	movwf	fsr2h,c
 10279  00241A  0100               	movlb	0	; () banked
 10280  00241C  94DF               	bcf	indf2,2,c
 10281  00241E                     i2l5217:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 547:         if(!lowpowerActivated)
 10285  00241E  503D               	movf	_lowpowerActivated^0,w,c
 10286  002420  A4D8               	btfss	status,2,c
 10287  002422  EF15  F012         	goto	i2u345_41
 10288  002426  EF17  F012         	goto	i2u345_40
 10289  00242A                     i2u345_41:
 10290  00242A  EF23  F012         	goto	i2l5221
 10291  00242E                     i2u345_40:
 10292  00242E                     
 10293                           ; BSR set to: 0
 10294                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 548:             packet_sample[currentScanS
      +                          ensor] = ADFLTR;
 10295  00242E  5040               	movf	_currentScanSensor^0,w,c
 10296  002430  0D02               	mullw	2
 10297  002432  0E35               	movlw	low _packet_sample
 10298  002434  24F3               	addwf	243,w,c
 10299  002436  6ED9               	movwf	fsr2l,c
 10300  002438  0E00               	movlw	high _packet_sample
 10301  00243A  20F4               	addwfc	prodh,w,c
 10302  00243C  6EDA               	movwf	fsr2h,c
 10303  00243E  CF6D FFDE          	movff	3949,postinc2	;volatile
 10304  002442  CF6E FFDD          	movff	3950,postdec2	;volatile
 10305  002446                     i2l5221:
 10306                           
 10307                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 550:     Sensor_scheduleNextScan();
 10308  002446  ECCF  F00D         	call	i2_Sensor_scheduleNextScan	;wreg free
 10309  00244A  0012               	return		;funcret
 10310  00244C                     __end_of_MTOUCH_Sensor_Service:
 10311                           	callstack 0
 10312                           
 10313 ;; *************** function i2_Sensor_scheduleNextScan *****************
 10314 ;; Defined at:
 10315 ;;		line 362 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;		None
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  sensor          2    8[COMRAM] PTR struct .
 10320 ;;		 -> mtouch_sensor(18), 
 10321 ;;  skipScan        1    7[COMRAM] _Bool 
 10322 ;;  state           1    6[COMRAM] _Bool 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10333 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;Total ram usage:        6 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    1
 10339 ;; This function calls:
 10340 ;;		i2_MTOUCH_Sensor_isEnabled
 10341 ;;		i2_MTOUCH_Sensor_wasSampled
 10342 ;;		i2_Sensor_SetTrisBit
 10343 ;;		i2_Sensor_isCalibrated
 10344 ;;		i2_Sensor_isCalibratingAcqTime
 10345 ;; This function is called by:
 10346 ;;		_MTOUCH_Sensor_Service
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text92
 10351  001B9E                     __ptext92:
 10352                           	callstack 0
 10353  001B9E                     i2_Sensor_scheduleNextScan:
 10354                           	callstack 14
 10355  001B9E                     
 10356                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 365:     _Bool skipScan = (_Bool)0;
 10357  001B9E  0E00               	movlw	0
 10358  001BA0  6E08               	movwf	i2Sensor_scheduleNextScan@skipScan^0,c
 10359                           
 10360                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     _Bool state = (_Bool)GIE;
 10361  001BA2  0E00               	movlw	0
 10362  001BA4  BEF2               	btfsc	4082,7,c	;volatile
 10363  001BA6  0E01               	movlw	1
 10364  001BA8  6E07               	movwf	i2Sensor_scheduleNextScan@state^0,c
 10365                           
 10366                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 10367  001BAA  EFE9  F00D         	goto	i2l5121
 10368  001BAE                     i2l5117:
 10369                           
 10370                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 370:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 371:         if(++currentScanSensor == 2u)
 10371  001BAE  2A40               	incf	_currentScanSensor^0,f,c
 10372  001BB0  0E02               	movlw	2
 10373  001BB2  1840               	xorwf	_currentScanSensor^0,w,c
 10374  001BB4  A4D8               	btfss	status,2,c
 10375  001BB6  EFDF  F00D         	goto	i2u332_41
 10376  001BBA  EFE1  F00D         	goto	i2u332_40
 10377  001BBE                     i2u332_41:
 10378  001BBE  EFE9  F00D         	goto	i2l5121
 10379  001BC2                     i2u332_40:
 10380  001BC2                     
 10381                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 372:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 373:             currentScanSensor = 0;
 10382  001BC2  0E00               	movlw	0
 10383  001BC4  6E40               	movwf	_currentScanSensor^0,c
 10384                           
 10385                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:             sampling_flag = 0;
 10386  001BC6  0E00               	movlw	0
 10387  001BC8  6E3F               	movwf	_sampling_flag^0,c
 10388                           
 10389                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 375:             skipScan = 1;
 10390  001BCA  0E01               	movlw	1
 10391  001BCC  6E08               	movwf	i2Sensor_scheduleNextScan@skipScan^0,c
 10392                           
 10393                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 376:             break;
 10394  001BCE  EFFF  F00D         	goto	i2l5125
 10395  001BD2                     i2l5121:
 10396                           
 10397                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 10398  001BD2  5040               	movf	_currentScanSensor^0,w,c
 10399  001BD4  EC2A  F019         	call	i2_MTOUCH_Sensor_wasSampled
 10400  001BD8  0900               	iorlw	0
 10401  001BDA  A4D8               	btfss	status,2,c
 10402  001BDC  EFF2  F00D         	goto	i2u333_41
 10403  001BE0  EFF4  F00D         	goto	i2u333_40
 10404  001BE4                     i2u333_41:
 10405  001BE4  EFD7  F00D         	goto	i2l5117
 10406  001BE8                     i2u333_40:
 10407  001BE8  5040               	movf	_currentScanSensor^0,w,c
 10408  001BEA  EC49  F019         	call	i2_MTOUCH_Sensor_isEnabled
 10409  001BEE  0900               	iorlw	0
 10410  001BF0  B4D8               	btfsc	status,2,c
 10411  001BF2  EFFD  F00D         	goto	i2u334_41
 10412  001BF6  EFFF  F00D         	goto	i2u334_40
 10413  001BFA                     i2u334_41:
 10414  001BFA  EFD7  F00D         	goto	i2l5117
 10415  001BFE                     i2u334_40:
 10416  001BFE                     i2l5125:
 10417                           
 10418                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:     if(skipScan==0)
 10419  001BFE  5008               	movf	i2Sensor_scheduleNextScan@skipScan^0,w,c
 10420  001C00  A4D8               	btfss	status,2,c
 10421  001C02  EF05  F00E         	goto	i2u335_41
 10422  001C06  EF07  F00E         	goto	i2u335_40
 10423  001C0A                     i2u335_41:
 10424  001C0A  EF99  F00E         	goto	i2l234
 10425  001C0E                     i2u335_40:
 10426  001C0E                     
 10427                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 383:         sensor = &mtouch_sensor[currentScanSensor];
 10428  001C0E  5040               	movf	_currentScanSensor^0,w,c
 10429  001C10  0D09               	mullw	9
 10430  001C12  0E94               	movlw	low _mtouch_sensor
 10431  001C14  24F3               	addwf	243,w,c
 10432  001C16  6E09               	movwf	i2Sensor_scheduleNextScan@sensor^0,c
 10433  001C18  0E00               	movlw	high _mtouch_sensor
 10434  001C1A  20F4               	addwfc	prodh,w,c
 10435  001C1C  6E0A               	movwf	(i2Sensor_scheduleNextScan@sensor+1)^0,c
 10436  001C1E                     
 10437                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:         if(Sensor_isCalibrated(sensor)
      +                          )
 10438  001C1E  C009  F001         	movff	i2Sensor_scheduleNextScan@sensor,i2Sensor_isCalibrated@sensor
 10439  001C22  C00A  F002         	movff	i2Sensor_scheduleNextScan@sensor+1,i2Sensor_isCalibrated@sensor+1
 10440  001C26  EC68  F01B         	call	i2_Sensor_isCalibrated	;wreg free
 10441  001C2A  0900               	iorlw	0
 10442  001C2C  B4D8               	btfsc	status,2,c
 10443  001C2E  EF1B  F00E         	goto	i2u336_41
 10444  001C32  EF1D  F00E         	goto	i2u336_40
 10445  001C36                     i2u336_41:
 10446  001C36  EF30  F00E         	goto	i2l5133
 10447  001C3A                     i2u336_40:
 10448  001C3A                     
 10449                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 385:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 386:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
 10450  001C3A  EE20 F003          	lfsr	2,3
 10451  001C3E  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10452  001C40  26D9               	addwf	fsr2l,f,c
 10453  001C42  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10454  001C44  22DA               	addwfc	fsr2h,f,c
 10455  001C46  50DF               	movf	indf2,w,c
 10456  001C48  010F               	movlb	15	; () banked
 10457  001C4A  6F57               	movwf	87,b	;volatile
 10458                           
 10459                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 387:             ADPRE = (mtouch_sensor_tim
      +                          e_t)sensor->precharge_time;
 10460  001C4C  EE20 F002          	lfsr	2,2
 10461  001C50  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10462  001C52  26D9               	addwf	fsr2l,f,c
 10463  001C54  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10464  001C56  22DA               	addwfc	fsr2h,f,c
 10465  001C58  50DF               	movf	indf2,w,c
 10466  001C5A  6F59               	movwf	89,b	;volatile
 10467                           
 10468                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 388:         }
 10469  001C5C  EF56  F00E         	goto	i2l5139
 10470  001C60                     i2l5133:
 10471                           
 10472                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 390:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 391:             if(Sensor_isCalibratingAcqTime(sensor))
 10473  001C60  C009  F001         	movff	i2Sensor_scheduleNextScan@sensor,i2Sensor_isCalibratingAcqTime@sensor
 10474  001C64  C00A  F002         	movff	i2Sensor_scheduleNextScan@sensor+1,i2Sensor_isCalibratingAcqTime@sensor+1
 10475  001C68  EC78  F01B         	call	i2_Sensor_isCalibratingAcqTime	;wreg free
 10476  001C6C  0900               	iorlw	0
 10477  001C6E  B4D8               	btfsc	status,2,c
 10478  001C70  EF3C  F00E         	goto	i2u337_41
 10479  001C74  EF3E  F00E         	goto	i2u337_40
 10480  001C78                     i2u337_41:
 10481  001C78  EF51  F00E         	goto	i2l5137
 10482  001C7C                     i2u337_40:
 10483  001C7C                     
 10484                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 392:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 393:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge
      +                          _time;
 10485  001C7C  EE20 F002          	lfsr	2,2
 10486  001C80  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10487  001C82  26D9               	addwf	fsr2l,f,c
 10488  001C84  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10489  001C86  22DA               	addwfc	fsr2h,f,c
 10490  001C88  50DF               	movf	indf2,w,c
 10491  001C8A  010F               	movlb	15	; () banked
 10492  001C8C  6F59               	movwf	89,b	;volatile
 10493                           
 10494                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 394:                 ADACQ = (mtouch_sensor
      +                          _time_t)sensor->acquisition_time;
 10495  001C8E  EE20 F003          	lfsr	2,3
 10496  001C92  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10497  001C94  26D9               	addwf	fsr2l,f,c
 10498  001C96  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10499  001C98  22DA               	addwfc	fsr2h,f,c
 10500  001C9A  50DF               	movf	indf2,w,c
 10501  001C9C  6F57               	movwf	87,b	;volatile
 10502                           
 10503                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:             }
 10504  001C9E  EF56  F00E         	goto	i2l5139
 10505  001CA2                     i2l5137:
 10506                           
 10507                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 397:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 398:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_
      +                          time_t)24 << (uint8_t)3));
 10508  001CA2  0EC0               	movlw	192
 10509  001CA4  010F               	movlb	15	; () banked
 10510  001CA6  6F59               	movwf	89,b	;volatile
 10511                           
 10512                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 399:                 ADACQ = ((mtouch_senso
      +                          r_time_t)((mtouch_sensor_time_t)24 << (uint8_t)3));
 10513  001CA8  0EC0               	movlw	192
 10514  001CAA  6F57               	movwf	87,b	;volatile
 10515  001CAC                     i2l5139:
 10516                           
 10517                           ; BSR set to: 15
 10518                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 403:         ADPRE +=(uint8_t)sample_delay;
 10519  001CAC  503B               	movf	_sample_delay^0,w,c	;volatile
 10520  001CAE  2759               	addwf	89,f,b	;volatile
 10521  001CB0                     
 10522                           ; BSR set to: 15
 10523                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:         ADPCH = (uint8_t)sensor->adpch
      +                          ;
 10524  001CB0  EE20 F001          	lfsr	2,1
 10525  001CB4  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10526  001CB6  26D9               	addwf	fsr2l,f,c
 10527  001CB8  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10528  001CBA  22DA               	addwfc	fsr2h,f,c
 10529  001CBC  50DF               	movf	indf2,w,c
 10530  001CBE  6F5A               	movwf	90,b	;volatile
 10531  001CC0                     
 10532                           ; BSR set to: 15
 10533                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:         ADRPT = (uint8_t)(sensor->over
      +                          sampling>>1);
 10534  001CC0  EE20 F004          	lfsr	2,4
 10535  001CC4  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10536  001CC6  26D9               	addwf	fsr2l,f,c
 10537  001CC8  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10538  001CCA  22DA               	addwfc	fsr2h,f,c
 10539  001CCC  50DF               	movf	indf2,w,c
 10540  001CCE  6E05               	movwf	??i2_Sensor_scheduleNextScan^0,c
 10541  001CD0  90D8               	bcf	status,0,c
 10542  001CD2  3005               	rrcf	??i2_Sensor_scheduleNextScan^0,w,c
 10543  001CD4  6E61               	movwf	97,c	;volatile
 10544  001CD6                     
 10545                           ; BSR set to: 15
 10546                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 406:         ADCAP = (uint8_t)sensor->addca
      +                          p;
 10547  001CD6  EE20 F005          	lfsr	2,5
 10548  001CDA  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10549  001CDC  26D9               	addwf	fsr2l,f,c
 10550  001CDE  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10551  001CE0  22DA               	addwfc	fsr2h,f,c
 10552  001CE2  50DF               	movf	indf2,w,c
 10553  001CE4  6F58               	movwf	88,b	;volatile
 10554  001CE6                     
 10555                           ; BSR set to: 15
 10556                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 407:         ADCON0bits.ADON = 1;
 10557  001CE6  8F5B               	bsf	91,7,b	;volatile
 10558  001CE8                     
 10559                           ; BSR set to: 15
 10560                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 408:         sampling_flag= 1;
 10561  001CE8  0E01               	movlw	1
 10562  001CEA  6E3F               	movwf	_sampling_flag^0,c
 10563  001CEC                     
 10564                           ; BSR set to: 15
 10565                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 409:         Sensor_SetTrisBit(currentScanS
      +                          ensor,1);
 10566  001CEC  0E01               	movlw	1
 10567  001CEE  6E01               	movwf	i2Sensor_SetTrisBit@TrisBit^0,c
 10568  001CF0  5040               	movf	_currentScanSensor^0,w,c
 10569  001CF2  ECB8  F017         	call	i2_Sensor_SetTrisBit
 10570  001CF6                     
 10571                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 410:         GIE = 0;
 10572  001CF6  9EF2               	bcf	4082,7,c	;volatile
 10573  001CF8                     
 10574                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 411:         ADCON0bits.GO = 1;
 10575  001CF8  010F               	movlb	15	; () banked
 10576  001CFA  815B               	bsf	91,0,b	;volatile
 10577  001CFC                     
 10578                           ; BSR set to: 15
 10579                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 412:         ADACC = ((mtouch_sensor_packet
      +                          sample_t)(sensor->oversampling)<<9);
 10580  001CFC  EE20 F004          	lfsr	2,4
 10581  001D00  5009               	movf	i2Sensor_scheduleNextScan@sensor^0,w,c
 10582  001D02  26D9               	addwf	fsr2l,f,c
 10583  001D04  500A               	movf	(i2Sensor_scheduleNextScan@sensor+1)^0,w,c
 10584  001D06  22DA               	addwfc	fsr2h,f,c
 10585  001D08  50DF               	movf	indf2,w,c
 10586  001D0A  6E05               	movwf	??i2_Sensor_scheduleNextScan^0,c
 10587  001D0C  6A06               	clrf	(??i2_Sensor_scheduleNextScan+1)^0,c
 10588  001D0E  0E09               	movlw	9
 10589  001D10                     i2u338_45:
 10590  001D10  90D8               	bcf	status,0,c
 10591  001D12  3605               	rlcf	??i2_Sensor_scheduleNextScan^0,f,c
 10592  001D14  3606               	rlcf	(??i2_Sensor_scheduleNextScan+1)^0,f,c
 10593  001D16  2EE8               	decfsz	wreg,f,c
 10594  001D18  EF88  F00E         	goto	i2u338_45
 10595  001D1C  C005  FF6B         	movff	??i2_Sensor_scheduleNextScan,3947	;volatile
 10596  001D20  C006  FF6C         	movff	??i2_Sensor_scheduleNextScan+1,3948	;volatile
 10597  001D24                     
 10598                           ; BSR set to: 15
 10599                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 413:         GIE = state;
 10600  001D24  B007               	btfsc	i2Sensor_scheduleNextScan@state^0,0,c
 10601  001D26  D002               	bra	i2u339_45
 10602  001D28  9EF2               	bcf	4082,7,c	;volatile
 10603  001D2A  D001               	bra	i2u339_46
 10604  001D2C                     i2u339_45:
 10605  001D2C  8EF2               	bsf	4082,7,c	;volatile
 10606  001D2E                     i2u339_46:
 10607  001D2E                     
 10608                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 414:         scanInterrupted = 0;
 10609  001D2E  0E00               	movlw	0
 10610  001D30  6E3E               	movwf	_scanInterrupted^0,c	;volatile
 10611  001D32                     i2l234:
 10612  001D32  0012               	return		;funcret
 10613  001D34                     __end_ofi2_Sensor_scheduleNextScan:
 10614                           	callstack 0
 10615                           
 10616 ;; *************** function i2_Sensor_isCalibrated *****************
 10617 ;; Defined at:
 10618 ;;		line 837 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  sensor          2    0[COMRAM] PTR struct .
 10621 ;;		 -> mtouch_sensor(18), 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      _Bool 
 10626 ;; Registers used:
 10627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10637 ;;Total ram usage:        2 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_MTOUCH_Sensor_Service
 10643 ;;		i2_Sensor_scheduleNextScan
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text93
 10648  0036D0                     __ptext93:
 10649                           	callstack 0
 10650  0036D0                     i2_Sensor_isCalibrated:
 10651                           	callstack 14
 10652  0036D0                     
 10653                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 837: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          838: {;mcc_generated_files/mtouch/mtouch_sensor.c: 839:     return (_Bool)sensor->calibr
      +                          ated;
 10654  0036D0  EE20 F008          	lfsr	2,8
 10655  0036D4  5001               	movf	i2Sensor_isCalibrated@sensor^0,w,c
 10656  0036D6  26D9               	addwf	fsr2l,f,c
 10657  0036D8  5002               	movf	(i2Sensor_isCalibrated@sensor+1)^0,w,c
 10658  0036DA  22DA               	addwfc	fsr2h,f,c
 10659  0036DC  B6DF               	btfsc	indf2,3,c
 10660  0036DE  EF73  F01B         	goto	i2u306_41
 10661  0036E2  EF76  F01B         	goto	i2u306_40
 10662  0036E6                     i2u306_41:
 10663  0036E6  0E01               	movlw	1
 10664  0036E8  EF77  F01B         	goto	i2u306_46
 10665  0036EC                     i2u306_40:
 10666  0036EC  0E00               	movlw	0
 10667  0036EE                     i2u306_46:
 10668  0036EE  0012               	return		;funcret
 10669  0036F0                     __end_ofi2_Sensor_isCalibrated:
 10670                           	callstack 0
 10671                           
 10672 ;; *************** function i2_Sensor_SetTrisBit *****************
 10673 ;; Defined at:
 10674 ;;		line 212 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  sensor          1    wreg     enum E12860
 10677 ;;  TrisBit         1    0[COMRAM] unsigned char 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  sensor          1    3[COMRAM] enum E12860
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      void 
 10682 ;; Registers used:
 10683 ;;		wreg, status,2, status,0
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10689 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10693 ;;Total ram usage:        4 bytes
 10694 ;; Hardware stack levels used:    1
 10695 ;; This function calls:
 10696 ;;		Nothing
 10697 ;; This function is called by:
 10698 ;;		_MTOUCH_Sensor_Service
 10699 ;;		i2_Sensor_scheduleNextScan
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text94
 10704  002F70                     __ptext94:
 10705                           	callstack 0
 10706  002F70                     i2_Sensor_SetTrisBit:
 10707                           	callstack 14
 10708                           
 10709                           ;incstack = 0
 10710                           ;i2Sensor_SetTrisBit@sensor stored from wreg
 10711  002F70  6E04               	movwf	i2Sensor_SetTrisBit@sensor^0,c
 10712  002F72                     
 10713                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 212: static void Sensor_SetTrisBit(enum mto
      +                          uch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/mtouch/mtouch_sensor.c: 213
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 214:     switch(sensor)
 10714  002F72  EFC9  F017         	goto	i2l4929
 10715  002F76                     i2l184:
 10716                           
 10717                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 217:             TRISAbits.TRISA2 = TrisBit
      +                          ;
 10718  002F76  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 10719  002F78  D002               	bra	i2u302_45
 10720  002F7A  9487               	bcf	135,2,c	;volatile
 10721  002F7C  D001               	bra	i2u302_46
 10722  002F7E                     i2u302_45:
 10723  002F7E  8487               	bsf	135,2,c	;volatile
 10724  002F80                     i2u302_46:
 10725                           
 10726                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 218:             break;
 10727  002F80  EFDE  F017         	goto	i2l188
 10728  002F84                     i2l186:
 10729                           
 10730                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 220:             TRISDbits.TRISD7 = TrisBit
      +                          ;
 10731  002F84  B001               	btfsc	i2Sensor_SetTrisBit@TrisBit^0,0,c
 10732  002F86  D002               	bra	i2u303_45
 10733  002F88  9E8A               	bcf	138,7,c	;volatile
 10734  002F8A  D001               	bra	i2u303_46
 10735  002F8C                     i2u303_45:
 10736  002F8C  8E8A               	bsf	138,7,c	;volatile
 10737  002F8E                     i2u303_46:
 10738                           
 10739                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 221:             break;
 10740  002F8E  EFDE  F017         	goto	i2l188
 10741  002F92                     i2l4929:
 10742  002F92  5004               	movf	i2Sensor_SetTrisBit@sensor^0,w,c
 10743  002F94  6E02               	movwf	??i2_Sensor_SetTrisBit^0,c
 10744  002F96  6A03               	clrf	(??i2_Sensor_SetTrisBit+1)^0,c
 10745                           
 10746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10747                           ; Switch size 1, requested type "simple"
 10748                           ; Number of cases is 1, Range of values is 0 to 0
 10749                           ; switch strategies available:
 10750                           ; Name         Instructions Cycles
 10751                           ; simple_byte            4     3 (average)
 10752                           ;	Chosen strategy is simple_byte
 10753  002F98  5003               	movf	(??i2_Sensor_SetTrisBit+1)^0,w,c
 10754  002F9A  0A00               	xorlw	0	; case 0
 10755  002F9C  B4D8               	btfsc	status,2,c
 10756  002F9E  EFD3  F017         	goto	i2l6045
 10757  002FA2  EFDE  F017         	goto	i2l188
 10758  002FA6                     i2l6045:
 10759                           
 10760                           ; Switch size 1, requested type "simple"
 10761                           ; Number of cases is 2, Range of values is 0 to 1
 10762                           ; switch strategies available:
 10763                           ; Name         Instructions Cycles
 10764                           ; simple_byte            7     4 (average)
 10765                           ;	Chosen strategy is simple_byte
 10766  002FA6  5002               	movf	??i2_Sensor_SetTrisBit^0,w,c
 10767  002FA8  0A00               	xorlw	0	; case 0
 10768  002FAA  B4D8               	btfsc	status,2,c
 10769  002FAC  EFBB  F017         	goto	i2l184
 10770  002FB0  0A01               	xorlw	1	; case 1
 10771  002FB2  B4D8               	btfsc	status,2,c
 10772  002FB4  EFC2  F017         	goto	i2l186
 10773  002FB8  EFDE  F017         	goto	i2l188
 10774  002FBC                     i2l188:
 10775  002FBC  0012               	return		;funcret
 10776  002FBE                     __end_ofi2_Sensor_SetTrisBit:
 10777                           	callstack 0
 10778                           
 10779 ;; *************** function i2_MTOUCH_Sensor_wasSampled *****************
 10780 ;; Defined at:
 10781 ;;		line 877 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  sensor          1    wreg     enum E12860
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  sensor          1    0[COMRAM] enum E12860
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      _Bool 
 10788 ;; Registers used:
 10789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10799 ;;Total ram usage:        1 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; This function calls:
 10802 ;;		Nothing
 10803 ;; This function is called by:
 10804 ;;		i2_Sensor_scheduleNextScan
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text95
 10809  003254                     __ptext95:
 10810                           	callstack 0
 10811  003254                     i2_MTOUCH_Sensor_wasSampled:
 10812                           	callstack 14
 10813                           
 10814                           ;incstack = 0
 10815                           ;i2MTOUCH_Sensor_wasSampled@sensor stored from wreg
 10816  003254  6E01               	movwf	i2MTOUCH_Sensor_wasSampled@sensor^0,c
 10817  003256                     
 10818                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 877: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 878: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 879:     if(sensor < 2u)
 10819  003256  0E02               	movlw	2
 10820  003258  6001               	cpfslt	i2MTOUCH_Sensor_wasSampled@sensor^0,c
 10821  00325A  EF31  F019         	goto	i2u308_41
 10822  00325E  EF33  F019         	goto	i2u308_40
 10823  003262                     i2u308_41:
 10824  003262  EF47  F019         	goto	i2l4963
 10825  003266                     i2u308_40:
 10826  003266                     
 10827                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 880:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 10828  003266  5001               	movf	i2MTOUCH_Sensor_wasSampled@sensor^0,w,c
 10829  003268  0D09               	mullw	9
 10830  00326A  0E9C               	movlw	low (_mtouch_sensor+8)
 10831  00326C  24F3               	addwf	243,w,c
 10832  00326E  6ED9               	movwf	fsr2l,c
 10833  003270  0E00               	movlw	high (_mtouch_sensor+8)
 10834  003272  20F4               	addwfc	prodh,w,c
 10835  003274  6EDA               	movwf	fsr2h,c
 10836  003276  0100               	movlb	0	; () banked
 10837  003278  B2DF               	btfsc	indf2,1,c
 10838  00327A  EF41  F019         	goto	i2u309_41
 10839  00327E  EF44  F019         	goto	i2u309_40
 10840  003282                     i2u309_41:
 10841  003282  0E01               	movlw	1
 10842  003284  EF45  F019         	goto	i2u309_46
 10843  003288                     i2u309_40:
 10844  003288  0E00               	movlw	0
 10845  00328A                     i2u309_46:
 10846  00328A  EF48  F019         	goto	i2l398
 10847  00328E                     i2l4963:
 10848                           
 10849                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 882:         return 0;
 10850  00328E  0E00               	movlw	0
 10851  003290                     i2l398:
 10852  003290  0012               	return		;funcret
 10853  003292                     __end_ofi2_MTOUCH_Sensor_wasSampled:
 10854                           	callstack 0
 10855                           
 10856 ;; *************** function i2_MTOUCH_Sensor_isEnabled *****************
 10857 ;; Defined at:
 10858 ;;		line 765 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  sensor          1    wreg     enum E12860
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  sensor          1    0[COMRAM] enum E12860
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      _Bool 
 10865 ;; Registers used:
 10866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10876 ;;Total ram usage:        1 bytes
 10877 ;; Hardware stack levels used:    1
 10878 ;; This function calls:
 10879 ;;		Nothing
 10880 ;; This function is called by:
 10881 ;;		i2_Sensor_scheduleNextScan
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text96
 10886  003292                     __ptext96:
 10887                           	callstack 0
 10888  003292                     i2_MTOUCH_Sensor_isEnabled:
 10889                           	callstack 14
 10890                           
 10891                           ;incstack = 0
 10892                           ;i2MTOUCH_Sensor_isEnabled@sensor stored from wreg
 10893  003292  6E01               	movwf	i2MTOUCH_Sensor_isEnabled@sensor^0,c
 10894  003294                     
 10895                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 765: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 766: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 767:     if(sensor < 2u)
 10896  003294  0E02               	movlw	2
 10897  003296  6001               	cpfslt	i2MTOUCH_Sensor_isEnabled@sensor^0,c
 10898  003298  EF50  F019         	goto	i2u304_41
 10899  00329C  EF52  F019         	goto	i2u304_40
 10900  0032A0                     i2u304_41:
 10901  0032A0  EF66  F019         	goto	i2l4943
 10902  0032A4                     i2u304_40:
 10903  0032A4                     
 10904                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 768:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
 10905  0032A4  5001               	movf	i2MTOUCH_Sensor_isEnabled@sensor^0,w,c
 10906  0032A6  0D09               	mullw	9
 10907  0032A8  0E9C               	movlw	low (_mtouch_sensor+8)
 10908  0032AA  24F3               	addwf	243,w,c
 10909  0032AC  6ED9               	movwf	fsr2l,c
 10910  0032AE  0E00               	movlw	high (_mtouch_sensor+8)
 10911  0032B0  20F4               	addwfc	prodh,w,c
 10912  0032B2  6EDA               	movwf	fsr2h,c
 10913  0032B4  0100               	movlb	0	; () banked
 10914  0032B6  B0DF               	btfsc	indf2,0,c
 10915  0032B8  EF60  F019         	goto	i2u305_41
 10916  0032BC  EF63  F019         	goto	i2u305_40
 10917  0032C0                     i2u305_41:
 10918  0032C0  0E01               	movlw	1
 10919  0032C2  EF64  F019         	goto	i2u305_46
 10920  0032C6                     i2u305_40:
 10921  0032C6  0E00               	movlw	0
 10922  0032C8                     i2u305_46:
 10923  0032C8  EF67  F019         	goto	i2l350
 10924  0032CC                     i2l4943:
 10925                           
 10926                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 770:         return 0;
 10927  0032CC  0E00               	movlw	0
 10928  0032CE                     i2l350:
 10929  0032CE  0012               	return		;funcret
 10930  0032D0                     __end_ofi2_MTOUCH_Sensor_isEnabled:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function _Sensor_setSampled *****************
 10934 ;; Defined at:
 10935 ;;		line 890 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  sensor          2    0[COMRAM] PTR struct .
 10938 ;;		 -> mtouch_sensor(18), 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;		None
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1    wreg      void 
 10943 ;; Registers used:
 10944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10954 ;;Total ram usage:        2 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_MTOUCH_Sensor_Service
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text97
 10964  0037AA                     __ptext97:
 10965                           	callstack 0
 10966  0037AA                     _Sensor_setSampled:
 10967                           	callstack 15
 10968  0037AA                     
 10969                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 890: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 891
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 892:     sensor->sampled = 1;
 10970  0037AA  EE20 F008          	lfsr	2,8
 10971  0037AE  5001               	movf	Sensor_setSampled@sensor^0,w,c
 10972  0037B0  26D9               	addwf	fsr2l,f,c
 10973  0037B2  5002               	movf	(Sensor_setSampled@sensor+1)^0,w,c
 10974  0037B4  22DA               	addwfc	fsr2h,f,c
 10975  0037B6  82DF               	bsf	indf2,1,c
 10976  0037B8  0012               	return		;funcret
 10977  0037BA                     __end_of_Sensor_setSampled:
 10978                           	callstack 0
 10979                           
 10980 ;; *************** function _Sensor_autoCalibration *****************
 10981 ;; Defined at:
 10982 ;;		line 425 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  sensor          2    4[COMRAM] PTR struct .
 10985 ;;		 -> mtouch_sensor(18), 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  name            1   10[COMRAM] enum E12860
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      enum E12863
 10990 ;; Registers used:
 10991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11000 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11001 ;;Total ram usage:        7 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    1
 11004 ;; This function calls:
 11005 ;;		_Sensor_setCalibratAcqTime
 11006 ;;		_Sensor_setCalibrated
 11007 ;;		i2_Sensor_isCalibratingAcqTime
 11008 ;;		i2_abs
 11009 ;; This function is called by:
 11010 ;;		_MTOUCH_Sensor_Service
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text98
 11015  001EBC                     __ptext98:
 11016                           	callstack 0
 11017  001EBC                     _Sensor_autoCalibration:
 11018                           	callstack 14
 11019  001EBC                     
 11020                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 425: static enum mtouch_sensor_error Sensor
      +                          _autoCalibration(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 42
      +                          6: {;mcc_generated_files/mtouch/mtouch_sensor.c: 427:     enum mtouch_sensor_names name 
      +                          = sensor->sensor_name;
 11021  001EBC  C005  FFD9         	movff	Sensor_autoCalibration@sensor,fsr2l
 11022  001EC0  C006  FFDA         	movff	Sensor_autoCalibration@sensor+1,fsr2h
 11023  001EC4  50DF               	movf	indf2,w,c
 11024  001EC6  6E0B               	movwf	Sensor_autoCalibration@name^0,c
 11025  001EC8                     
 11026                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 430:     if(!Sensor_isCalibratingAcqTime(se
      +                          nsor))
 11027  001EC8  C005  F001         	movff	Sensor_autoCalibration@sensor,i2Sensor_isCalibratingAcqTime@sensor
 11028  001ECC  C006  F002         	movff	Sensor_autoCalibration@sensor+1,i2Sensor_isCalibratingAcqTime@sensor+1
 11029  001ED0  EC78  F01B         	call	i2_Sensor_isCalibratingAcqTime	;wreg free
 11030  001ED4  0900               	iorlw	0
 11031  001ED6  A4D8               	btfss	status,2,c
 11032  001ED8  EF70  F00F         	goto	i2u322_41
 11033  001EDC  EF72  F00F         	goto	i2u322_40
 11034  001EE0                     i2u322_41:
 11035  001EE0  EFA4  F00F         	goto	i2l5081
 11036  001EE4                     i2u322_40:
 11037  001EE4                     
 11038                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 431:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 432:         if(ADFLTR > ((mtouch_sensor_packetsample_t)(sensor->oversamplin
      +                          g)<<9))
 11039  001EE4  EE20 F004          	lfsr	2,4
 11040  001EE8  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11041  001EEA  26D9               	addwf	fsr2l,f,c
 11042  001EEC  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11043  001EEE  22DA               	addwfc	fsr2h,f,c
 11044  001EF0  50DF               	movf	indf2,w,c
 11045  001EF2  6E07               	movwf	??_Sensor_autoCalibration^0,c
 11046  001EF4  6A08               	clrf	(??_Sensor_autoCalibration+1)^0,c
 11047  001EF6  0E09               	movlw	9
 11048  001EF8                     i2u323_45:
 11049  001EF8  90D8               	bcf	status,0,c
 11050  001EFA  3607               	rlcf	??_Sensor_autoCalibration^0,f,c
 11051  001EFC  3608               	rlcf	(??_Sensor_autoCalibration+1)^0,f,c
 11052  001EFE  2EE8               	decfsz	wreg,f,c
 11053  001F00  EF7C  F00F         	goto	i2u323_45
 11054  001F04  506D               	movf	109,w,c	;volatile
 11055  001F06  5C07               	subwf	??_Sensor_autoCalibration^0,w,c
 11056  001F08  506E               	movf	110,w,c	;volatile
 11057  001F0A  5808               	subwfb	(??_Sensor_autoCalibration+1)^0,w,c
 11058  001F0C  B0D8               	btfsc	status,0,c
 11059  001F0E  EF8B  F00F         	goto	i2u324_41
 11060  001F12  EF8D  F00F         	goto	i2u324_40
 11061  001F16                     i2u324_41:
 11062  001F16  EF9C  F00F         	goto	i2l5077
 11063  001F1A                     i2u324_40:
 11064  001F1A                     
 11065                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 433:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 434:             if(++(sensor->addcap) >= (mtouch_sensor_addcap_t)31)
 11066  001F1A  EE20 F005          	lfsr	2,5
 11067  001F1E  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11068  001F20  26D9               	addwf	fsr2l,f,c
 11069  001F22  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11070  001F24  22DA               	addwfc	fsr2h,f,c
 11071  001F26  2ADF               	incf	indf2,f,c
 11072  001F28  0E1E               	movlw	30
 11073  001F2A  64DF               	cpfsgt	indf2,c
 11074  001F2C  EF9A  F00F         	goto	i2u325_41
 11075  001F30  EF9C  F00F         	goto	i2u325_40
 11076  001F34                     i2u325_41:
 11077  001F34  EF01  F010         	goto	i2l241
 11078  001F38                     i2u325_40:
 11079  001F38                     i2l5077:
 11080                           
 11081                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 435:                 Sensor_setCalibratAcqT
      +                          ime(sensor);
 11082  001F38  C005  F001         	movff	Sensor_autoCalibration@sensor,Sensor_setCalibratAcqTime@sensor
 11083  001F3C  C006  F002         	movff	Sensor_autoCalibration@sensor+1,Sensor_setCalibratAcqTime@sensor+1
 11084  001F40  EC27  F01A         	call	_Sensor_setCalibratAcqTime	;wreg free
 11085  001F44  EF01  F010         	goto	i2l246
 11086  001F48                     i2l5081:
 11087                           
 11088                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 444:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 445:         if((mtouch_sensor_packetsample_t)abs(packet_sample[name] - ADFL
      +                          TR) < ((mtouch_sensor_packetsample_t)(sensor->oversampling)<<1))
 11089  001F48  EE20 F004          	lfsr	2,4
 11090  001F4C  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11091  001F4E  26D9               	addwf	fsr2l,f,c
 11092  001F50  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11093  001F52  22DA               	addwfc	fsr2h,f,c
 11094  001F54  50DF               	movf	indf2,w,c
 11095  001F56  6E07               	movwf	??_Sensor_autoCalibration^0,c
 11096  001F58  6A08               	clrf	(??_Sensor_autoCalibration+1)^0,c
 11097  001F5A  90D8               	bcf	status,0,c
 11098  001F5C  3607               	rlcf	??_Sensor_autoCalibration^0,f,c
 11099  001F5E  3608               	rlcf	(??_Sensor_autoCalibration+1)^0,f,c
 11100  001F60  500B               	movf	Sensor_autoCalibration@name^0,w,c
 11101  001F62  0D02               	mullw	2
 11102  001F64  0E35               	movlw	low _packet_sample
 11103  001F66  24F3               	addwf	243,w,c
 11104  001F68  6ED9               	movwf	fsr2l,c
 11105  001F6A  0E00               	movlw	high _packet_sample
 11106  001F6C  20F4               	addwfc	prodh,w,c
 11107  001F6E  6EDA               	movwf	fsr2h,c
 11108  001F70  CFDE F009          	movff	postinc2,??_Sensor_autoCalibration+2
 11109  001F74  CFDD F00A          	movff	postdec2,??_Sensor_autoCalibration+3
 11110  001F78  506D               	movf	109,w,c	;volatile
 11111  001F7A  5C09               	subwf	(??_Sensor_autoCalibration+2)^0,w,c
 11112  001F7C  6E01               	movwf	i2abs@a^0,c
 11113  001F7E  506E               	movf	110,w,c	;volatile
 11114  001F80  580A               	subwfb	(??_Sensor_autoCalibration+3)^0,w,c
 11115  001F82  6E02               	movwf	(i2abs@a+1)^0,c
 11116  001F84  ECAD  F018         	call	i2_abs	;wreg free
 11117  001F88  5007               	movf	??_Sensor_autoCalibration^0,w,c
 11118  001F8A  5C01               	subwf	?i2_abs^0,w,c
 11119  001F8C  5008               	movf	(??_Sensor_autoCalibration+1)^0,w,c
 11120  001F8E  5802               	subwfb	(?i2_abs+1)^0,w,c
 11121  001F90  B0D8               	btfsc	status,0,c
 11122  001F92  EFCD  F00F         	goto	i2u326_41
 11123  001F96  EFCF  F00F         	goto	i2u326_40
 11124  001F9A                     i2u326_41:
 11125  001F9A  EFDF  F00F         	goto	i2l5087
 11126  001F9E                     i2u326_40:
 11127  001F9E                     
 11128                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 446:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 447:             sensor->precharge_time = ((mtouch_sensor_time_t)((mtouc
      +                          h_sensor_time_t)24 << (uint8_t)3));
 11129  001F9E  EE20 F002          	lfsr	2,2
 11130  001FA2  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11131  001FA4  26D9               	addwf	fsr2l,f,c
 11132  001FA6  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11133  001FA8  22DA               	addwfc	fsr2h,f,c
 11134  001FAA  0EC0               	movlw	192
 11135  001FAC  6EDF               	movwf	indf2,c
 11136  001FAE                     i2l5085:
 11137                           
 11138                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 448:             Sensor_setCalibrated(senso
      +                          r);
 11139  001FAE  C005  F001         	movff	Sensor_autoCalibration@sensor,Sensor_setCalibrated@sensor
 11140  001FB2  C006  F002         	movff	Sensor_autoCalibration@sensor+1,Sensor_setCalibrated@sensor+1
 11141  001FB6  EC88  F01B         	call	_Sensor_setCalibrated	;wreg free
 11142                           
 11143                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 449:         }
 11144  001FBA  EF01  F010         	goto	i2l246
 11145  001FBE                     i2l5087:
 11146                           
 11147                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 451:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 452:             if((sensor->acquisition_time) >= (mtouch_sensor_time_t)
      +                          (((mtouch_sensor_time_t)((mtouch_sensor_time_t)24 << (uint8_t)3)) - ((mtouch_sensor_time
      +                          _t)2 << (uint8_t)3)))
 11148  001FBE  EE20 F003          	lfsr	2,3
 11149  001FC2  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11150  001FC4  26D9               	addwf	fsr2l,f,c
 11151  001FC6  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11152  001FC8  22DA               	addwfc	fsr2h,f,c
 11153  001FCA  0EAF               	movlw	175
 11154  001FCC  64DF               	cpfsgt	indf2,c
 11155  001FCE  EFEB  F00F         	goto	i2u327_41
 11156  001FD2  EFED  F00F         	goto	i2u327_40
 11157  001FD6                     i2u327_41:
 11158  001FD6  EFF7  F00F         	goto	i2l5093
 11159  001FDA                     i2u327_40:
 11160  001FDA                     
 11161                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 453:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 454:                 sensor->precharge_time = ((mtouch_sensor_time_t
      +                          )((mtouch_sensor_time_t)24 << (uint8_t)3));
 11162  001FDA  EE20 F002          	lfsr	2,2
 11163  001FDE  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11164  001FE0  26D9               	addwf	fsr2l,f,c
 11165  001FE2  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11166  001FE4  22DA               	addwfc	fsr2h,f,c
 11167  001FE6  0EC0               	movlw	192
 11168  001FE8  6EDF               	movwf	indf2,c
 11169  001FEA  EFD7  F00F         	goto	i2l5085
 11170  001FEE                     i2l5093:
 11171                           
 11172                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 458:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 461:                 sensor->acquisition_time += ((mtouch_sensor_tim
      +                          e_t)2 << (uint8_t)3);
 11173  001FEE  EE20 F003          	lfsr	2,3
 11174  001FF2  5005               	movf	Sensor_autoCalibration@sensor^0,w,c
 11175  001FF4  26D9               	addwf	fsr2l,f,c
 11176  001FF6  5006               	movf	(Sensor_autoCalibration@sensor+1)^0,w,c
 11177  001FF8  22DA               	addwfc	fsr2h,f,c
 11178  001FFA  0E10               	movlw	16
 11179  001FFC  26DF               	addwf	indf2,f,c
 11180  001FFE  EF01  F010         	goto	i2l246
 11181  002002                     i2l241:
 11182  002002                     i2l246:
 11183  002002  0012               	return		;funcret
 11184  002004                     __end_of_Sensor_autoCalibration:
 11185                           	callstack 0
 11186                           
 11187 ;; *************** function i2_abs *****************
 11188 ;; Defined at:
 11189 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  a               2    0[COMRAM] int 
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;		None
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  2    0[COMRAM] int 
 11196 ;; Registers used:
 11197 ;;		wreg, status,2, status,0
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11207 ;;Total ram usage:        4 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_Sensor_autoCalibration
 11213 ;;		_MTOUCH_Sensor_Service
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text99
 11218  00315A                     __ptext99:
 11219                           	callstack 0
 11220  00315A                     i2_abs:
 11221                           	callstack 15
 11222  00315A  BE02               	btfsc	(i2abs@a+1)^0,7,c
 11223  00315C  EFBA  F018         	goto	i2u310_40
 11224  003160  5002               	movf	(i2abs@a+1)^0,w,c
 11225  003162  E106               	bnz	i2u310_41
 11226  003164  0401               	decf	i2abs@a^0,w,c
 11227  003166  B0D8               	btfsc	status,0,c
 11228  003168  EFB8  F018         	goto	i2u310_41
 11229  00316C  EFBA  F018         	goto	i2u310_40
 11230  003170                     i2u310_41:
 11231  003170  EFC8  F018         	goto	i2l2206
 11232  003174                     i2u310_40:
 11233  003174  C001  F003         	movff	i2abs@a,??i2_abs
 11234  003178  C002  F004         	movff	i2abs@a+1,??i2_abs+1
 11235  00317C  1E03               	comf	??i2_abs^0,f,c
 11236  00317E  1E04               	comf	(??i2_abs+1)^0,f,c
 11237  003180  4A03               	infsnz	??i2_abs^0,f,c
 11238  003182  2A04               	incf	(??i2_abs+1)^0,f,c
 11239  003184  C003  F001         	movff	??i2_abs,?i2_abs
 11240  003188  C004  F002         	movff	??i2_abs+1,?i2_abs+1
 11241  00318C  EFCC  F018         	goto	i2l2209
 11242  003190                     i2l2206:
 11243  003190  C001  F001         	movff	i2abs@a,?i2_abs
 11244  003194  C002  F002         	movff	i2abs@a+1,?i2_abs+1
 11245  003198                     i2l2209:
 11246  003198  0012               	return		;funcret
 11247  00319A                     __end_ofi2_abs:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function i2_Sensor_isCalibratingAcqTime *****************
 11251 ;; Defined at:
 11252 ;;		line 855 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  sensor          2    0[COMRAM] PTR struct .
 11255 ;;		 -> mtouch_sensor(18), 
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;		None
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  1    wreg      _Bool 
 11260 ;; Registers used:
 11261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;Total ram usage:        2 bytes
 11272 ;; Hardware stack levels used:    1
 11273 ;; This function calls:
 11274 ;;		Nothing
 11275 ;; This function is called by:
 11276 ;;		_Sensor_autoCalibration
 11277 ;;		i2_Sensor_scheduleNextScan
 11278 ;; This function uses a non-reentrant model
 11279 ;;
 11280                           
 11281                           	psect	text100
 11282  0036F0                     __ptext100:
 11283                           	callstack 0
 11284  0036F0                     i2_Sensor_isCalibratingAcqTime:
 11285                           	callstack 14
 11286  0036F0                     
 11287                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 855: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_se
      +                          nsor.c: 856: {;mcc_generated_files/mtouch/mtouch_sensor.c: 857:     return (_Bool)sensor
      +                          ->acqTime_cal;
 11288  0036F0  EE20 F008          	lfsr	2,8
 11289  0036F4  5001               	movf	i2Sensor_isCalibratingAcqTime@sensor^0,w,c
 11290  0036F6  26D9               	addwf	fsr2l,f,c
 11291  0036F8  5002               	movf	(i2Sensor_isCalibratingAcqTime@sensor+1)^0,w,c
 11292  0036FA  22DA               	addwfc	fsr2h,f,c
 11293  0036FC  B8DF               	btfsc	indf2,4,c
 11294  0036FE  EF83  F01B         	goto	i2u307_41
 11295  003702  EF86  F01B         	goto	i2u307_40
 11296  003706                     i2u307_41:
 11297  003706  0E01               	movlw	1
 11298  003708  EF87  F01B         	goto	i2u307_46
 11299  00370C                     i2u307_40:
 11300  00370C  0E00               	movlw	0
 11301  00370E                     i2u307_46:
 11302  00370E  0012               	return		;funcret
 11303  003710                     __end_ofi2_Sensor_isCalibratingAcqTime:
 11304                           	callstack 0
 11305                           
 11306 ;; *************** function _Sensor_setCalibrated *****************
 11307 ;; Defined at:
 11308 ;;		line 842 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  sensor          2    0[COMRAM] PTR struct .
 11311 ;;		 -> mtouch_sensor(18), 
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;		None
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      void 
 11316 ;; Registers used:
 11317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;Total ram usage:        2 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; This function calls:
 11330 ;;		Nothing
 11331 ;; This function is called by:
 11332 ;;		_Sensor_autoCalibration
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text101
 11337  003710                     __ptext101:
 11338                           	callstack 0
 11339  003710                     _Sensor_setCalibrated:
 11340                           	callstack 14
 11341  003710                     
 11342                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 842: static void Sensor_setCalibrated(mtouc
      +                          h_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 843: {;mcc_generated_fil
      +                          es/mtouch/mtouch_sensor.c: 844:     sensor->calibrated = 1;
 11343  003710  EE20 F008          	lfsr	2,8
 11344  003714  5001               	movf	Sensor_setCalibrated@sensor^0,w,c
 11345  003716  26D9               	addwf	fsr2l,f,c
 11346  003718  5002               	movf	(Sensor_setCalibrated@sensor+1)^0,w,c
 11347  00371A  22DA               	addwfc	fsr2h,f,c
 11348  00371C  86DF               	bsf	indf2,3,c
 11349                           
 11350                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 845:     sensor->acqTime_cal = 0;
 11351  00371E  EE20 F008          	lfsr	2,8
 11352  003722  5001               	movf	Sensor_setCalibrated@sensor^0,w,c
 11353  003724  26D9               	addwf	fsr2l,f,c
 11354  003726  5002               	movf	(Sensor_setCalibrated@sensor+1)^0,w,c
 11355  003728  22DA               	addwfc	fsr2h,f,c
 11356  00372A  98DF               	bcf	indf2,4,c
 11357  00372C  0012               	return		;funcret
 11358  00372E                     __end_of_Sensor_setCalibrated:
 11359                           	callstack 0
 11360                           
 11361 ;; *************** function _Sensor_setCalibratAcqTime *****************
 11362 ;; Defined at:
 11363 ;;		line 848 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  sensor          2    0[COMRAM] PTR struct .
 11366 ;;		 -> mtouch_sensor(18), 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;		None
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1    wreg      void 
 11371 ;; Registers used:
 11372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11382 ;;Total ram usage:        2 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; This function calls:
 11385 ;;		Nothing
 11386 ;; This function is called by:
 11387 ;;		_Sensor_autoCalibration
 11388 ;; This function uses a non-reentrant model
 11389 ;;
 11390                           
 11391                           	psect	text102
 11392  00344E                     __ptext102:
 11393                           	callstack 0
 11394  00344E                     _Sensor_setCalibratAcqTime:
 11395                           	callstack 14
 11396  00344E                     
 11397                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 848: static void Sensor_setCalibratAcqTime(
      +                          mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 849: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 850:     sensor->acqTime_cal = 1;
 11398  00344E  EE20 F008          	lfsr	2,8
 11399  003452  5001               	movf	Sensor_setCalibratAcqTime@sensor^0,w,c
 11400  003454  26D9               	addwf	fsr2l,f,c
 11401  003456  5002               	movf	(Sensor_setCalibratAcqTime@sensor+1)^0,w,c
 11402  003458  22DA               	addwfc	fsr2h,f,c
 11403  00345A  88DF               	bsf	indf2,4,c
 11404                           
 11405                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 851:     sensor->acquisition_time = ((mtouc
      +                          h_sensor_time_t)((mtouch_sensor_time_t)1 << (uint8_t)3));
 11406  00345C  EE20 F003          	lfsr	2,3
 11407  003460  5001               	movf	Sensor_setCalibratAcqTime@sensor^0,w,c
 11408  003462  26D9               	addwf	fsr2l,f,c
 11409  003464  5002               	movf	(Sensor_setCalibratAcqTime@sensor+1)^0,w,c
 11410  003466  22DA               	addwfc	fsr2h,f,c
 11411  003468  0E08               	movlw	8
 11412  00346A  6EDF               	movwf	indf2,c
 11413                           
 11414                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 852:     sensor->precharge_time = ((mtouch_
      +                          sensor_time_t)((mtouch_sensor_time_t)24 << (uint8_t)3));
 11415  00346C  EE20 F002          	lfsr	2,2
 11416  003470  5001               	movf	Sensor_setCalibratAcqTime@sensor^0,w,c
 11417  003472  26D9               	addwf	fsr2l,f,c
 11418  003474  5002               	movf	(Sensor_setCalibratAcqTime@sensor+1)^0,w,c
 11419  003476  22DA               	addwfc	fsr2h,f,c
 11420  003478  0EC0               	movlw	192
 11421  00347A  6EDF               	movwf	indf2,c
 11422  00347C  0012               	return		;funcret
 11423  00347E                     __end_of_Sensor_setCalibratAcqTime:
 11424                           	callstack 0
 11425                           
 11426                           	psect	text103
 11427  000000                     __ptext103:
 11428                           	callstack 0
 11429  000000                     
 11430                           	psect	rparam
 11431  0000                     
 11432                           	psect	temp
 11433  00004A                     btemp:
 11434                           	callstack 0
 11435  00004A                     	ds	1
 11436  0000                     int$flags	set	btemp
 11437  0000                     wtemp8	set	btemp+1
 11438  0000                     ttemp5	set	btemp+1
 11439  0000                     ttemp6	set	btemp+4
 11440  0000                     ttemp7	set	btemp+8
 11441                           
 11442                           	psect	idloc
 11443                           
 11444                           ;Config register IDLOC0 @ 0x200000
 11445                           ;	unspecified, using default values
 11446  200000                     	org	2097152
 11447  200000  FFFF               	dw	65535
 11448                           
 11449                           ;Config register IDLOC1 @ 0x200002
 11450                           ;	unspecified, using default values
 11451  200002                     	org	2097154
 11452  200002  FFFF               	dw	65535
 11453                           
 11454                           ;Config register IDLOC2 @ 0x200004
 11455                           ;	unspecified, using default values
 11456  200004                     	org	2097156
 11457  200004  FFFF               	dw	65535
 11458                           
 11459                           ;Config register IDLOC3 @ 0x200006
 11460                           ;	unspecified, using default values
 11461  200006                     	org	2097158
 11462  200006  FFFF               	dw	65535
 11463                           
 11464                           ;Config register IDLOC4 @ 0x200008
 11465                           ;	unspecified, using default values
 11466  200008                     	org	2097160
 11467  200008  FFFF               	dw	65535
 11468                           
 11469                           ;Config register IDLOC5 @ 0x20000A
 11470                           ;	unspecified, using default values
 11471  20000A                     	org	2097162
 11472  20000A  FFFF               	dw	65535
 11473                           
 11474                           ;Config register IDLOC6 @ 0x20000C
 11475                           ;	unspecified, using default values
 11476  20000C                     	org	2097164
 11477  20000C  FFFF               	dw	65535
 11478                           
 11479                           ;Config register IDLOC7 @ 0x20000E
 11480                           ;	unspecified, using default values
 11481  20000E                     	org	2097166
 11482  20000E  FFFF               	dw	65535
 11483                           
 11484                           ;Config register IDLOC8 @ 0x200010
 11485                           ;	unspecified, using default values
 11486  200010                     	org	2097168
 11487  200010  FFFF               	dw	65535
 11488                           
 11489                           ;Config register IDLOC9 @ 0x200012
 11490                           ;	unspecified, using default values
 11491  200012                     	org	2097170
 11492  200012  FFFF               	dw	65535
 11493                           
 11494                           ;Config register IDLOC10 @ 0x200014
 11495                           ;	unspecified, using default values
 11496  200014                     	org	2097172
 11497  200014  FFFF               	dw	65535
 11498                           
 11499                           ;Config register IDLOC11 @ 0x200016
 11500                           ;	unspecified, using default values
 11501  200016                     	org	2097174
 11502  200016  FFFF               	dw	65535
 11503                           
 11504                           ;Config register IDLOC12 @ 0x200018
 11505                           ;	unspecified, using default values
 11506  200018                     	org	2097176
 11507  200018  FFFF               	dw	65535
 11508                           
 11509                           ;Config register IDLOC13 @ 0x20001A
 11510                           ;	unspecified, using default values
 11511  20001A                     	org	2097178
 11512  20001A  FFFF               	dw	65535
 11513                           
 11514                           ;Config register IDLOC14 @ 0x20001C
 11515                           ;	unspecified, using default values
 11516  20001C                     	org	2097180
 11517  20001C  FFFF               	dw	65535
 11518                           
 11519                           ;Config register IDLOC15 @ 0x20001E
 11520                           ;	unspecified, using default values
 11521  20001E                     	org	2097182
 11522  20001E  FFFF               	dw	65535
 11523                           
 11524                           ;Config register IDLOC16 @ 0x200020
 11525                           ;	unspecified, using default values
 11526  200020                     	org	2097184
 11527  200020  FFFF               	dw	65535
 11528                           
 11529                           ;Config register IDLOC17 @ 0x200022
 11530                           ;	unspecified, using default values
 11531  200022                     	org	2097186
 11532  200022  FFFF               	dw	65535
 11533                           
 11534                           ;Config register IDLOC18 @ 0x200024
 11535                           ;	unspecified, using default values
 11536  200024                     	org	2097188
 11537  200024  FFFF               	dw	65535
 11538                           
 11539                           ;Config register IDLOC19 @ 0x200026
 11540                           ;	unspecified, using default values
 11541  200026                     	org	2097190
 11542  200026  FFFF               	dw	65535
 11543                           
 11544                           ;Config register IDLOC20 @ 0x200028
 11545                           ;	unspecified, using default values
 11546  200028                     	org	2097192
 11547  200028  FFFF               	dw	65535
 11548                           
 11549                           ;Config register IDLOC21 @ 0x20002A
 11550                           ;	unspecified, using default values
 11551  20002A                     	org	2097194
 11552  20002A  FFFF               	dw	65535
 11553                           
 11554                           ;Config register IDLOC22 @ 0x20002C
 11555                           ;	unspecified, using default values
 11556  20002C                     	org	2097196
 11557  20002C  FFFF               	dw	65535
 11558                           
 11559                           ;Config register IDLOC23 @ 0x20002E
 11560                           ;	unspecified, using default values
 11561  20002E                     	org	2097198
 11562  20002E  FFFF               	dw	65535
 11563                           
 11564                           ;Config register IDLOC24 @ 0x200030
 11565                           ;	unspecified, using default values
 11566  200030                     	org	2097200
 11567  200030  FFFF               	dw	65535
 11568                           
 11569                           ;Config register IDLOC25 @ 0x200032
 11570                           ;	unspecified, using default values
 11571  200032                     	org	2097202
 11572  200032  FFFF               	dw	65535
 11573                           
 11574                           ;Config register IDLOC26 @ 0x200034
 11575                           ;	unspecified, using default values
 11576  200034                     	org	2097204
 11577  200034  FFFF               	dw	65535
 11578                           
 11579                           ;Config register IDLOC27 @ 0x200036
 11580                           ;	unspecified, using default values
 11581  200036                     	org	2097206
 11582  200036  FFFF               	dw	65535
 11583                           
 11584                           ;Config register IDLOC28 @ 0x200038
 11585                           ;	unspecified, using default values
 11586  200038                     	org	2097208
 11587  200038  FFFF               	dw	65535
 11588                           
 11589                           ;Config register IDLOC29 @ 0x20003A
 11590                           ;	unspecified, using default values
 11591  20003A                     	org	2097210
 11592  20003A  FFFF               	dw	65535
 11593                           
 11594                           ;Config register IDLOC30 @ 0x20003C
 11595                           ;	unspecified, using default values
 11596  20003C                     	org	2097212
 11597  20003C  FFFF               	dw	65535
 11598                           
 11599                           ;Config register IDLOC31 @ 0x20003E
 11600                           ;	unspecified, using default values
 11601  20003E                     	org	2097214
 11602  20003E  FFFF               	dw	65535
 11603                           
 11604                           ;Config register IDLOC32 @ 0x200040
 11605                           ;	unspecified, using default values
 11606  200040                     	org	2097216
 11607  200040  FFFF               	dw	65535
 11608                           
 11609                           ;Config register IDLOC33 @ 0x200042
 11610                           ;	unspecified, using default values
 11611  200042                     	org	2097218
 11612  200042  FFFF               	dw	65535
 11613                           
 11614                           ;Config register IDLOC34 @ 0x200044
 11615                           ;	unspecified, using default values
 11616  200044                     	org	2097220
 11617  200044  FFFF               	dw	65535
 11618                           
 11619                           ;Config register IDLOC35 @ 0x200046
 11620                           ;	unspecified, using default values
 11621  200046                     	org	2097222
 11622  200046  FFFF               	dw	65535
 11623                           
 11624                           ;Config register IDLOC36 @ 0x200048
 11625                           ;	unspecified, using default values
 11626  200048                     	org	2097224
 11627  200048  FFFF               	dw	65535
 11628                           
 11629                           ;Config register IDLOC37 @ 0x20004A
 11630                           ;	unspecified, using default values
 11631  20004A                     	org	2097226
 11632  20004A  FFFF               	dw	65535
 11633                           
 11634                           ;Config register IDLOC38 @ 0x20004C
 11635                           ;	unspecified, using default values
 11636  20004C                     	org	2097228
 11637  20004C  FFFF               	dw	65535
 11638                           
 11639                           ;Config register IDLOC39 @ 0x20004E
 11640                           ;	unspecified, using default values
 11641  20004E                     	org	2097230
 11642  20004E  FFFF               	dw	65535
 11643                           
 11644                           ;Config register IDLOC40 @ 0x200050
 11645                           ;	unspecified, using default values
 11646  200050                     	org	2097232
 11647  200050  FFFF               	dw	65535
 11648                           
 11649                           ;Config register IDLOC41 @ 0x200052
 11650                           ;	unspecified, using default values
 11651  200052                     	org	2097234
 11652  200052  FFFF               	dw	65535
 11653                           
 11654                           ;Config register IDLOC42 @ 0x200054
 11655                           ;	unspecified, using default values
 11656  200054                     	org	2097236
 11657  200054  FFFF               	dw	65535
 11658                           
 11659                           ;Config register IDLOC43 @ 0x200056
 11660                           ;	unspecified, using default values
 11661  200056                     	org	2097238
 11662  200056  FFFF               	dw	65535
 11663                           
 11664                           ;Config register IDLOC44 @ 0x200058
 11665                           ;	unspecified, using default values
 11666  200058                     	org	2097240
 11667  200058  FFFF               	dw	65535
 11668                           
 11669                           ;Config register IDLOC45 @ 0x20005A
 11670                           ;	unspecified, using default values
 11671  20005A                     	org	2097242
 11672  20005A  FFFF               	dw	65535
 11673                           
 11674                           ;Config register IDLOC46 @ 0x20005C
 11675                           ;	unspecified, using default values
 11676  20005C                     	org	2097244
 11677  20005C  FFFF               	dw	65535
 11678                           
 11679                           ;Config register IDLOC47 @ 0x20005E
 11680                           ;	unspecified, using default values
 11681  20005E                     	org	2097246
 11682  20005E  FFFF               	dw	65535
 11683                           
 11684                           ;Config register IDLOC48 @ 0x200060
 11685                           ;	unspecified, using default values
 11686  200060                     	org	2097248
 11687  200060  FFFF               	dw	65535
 11688                           
 11689                           ;Config register IDLOC49 @ 0x200062
 11690                           ;	unspecified, using default values
 11691  200062                     	org	2097250
 11692  200062  FFFF               	dw	65535
 11693                           
 11694                           ;Config register IDLOC50 @ 0x200064
 11695                           ;	unspecified, using default values
 11696  200064                     	org	2097252
 11697  200064  FFFF               	dw	65535
 11698                           
 11699                           ;Config register IDLOC51 @ 0x200066
 11700                           ;	unspecified, using default values
 11701  200066                     	org	2097254
 11702  200066  FFFF               	dw	65535
 11703                           
 11704                           ;Config register IDLOC52 @ 0x200068
 11705                           ;	unspecified, using default values
 11706  200068                     	org	2097256
 11707  200068  FFFF               	dw	65535
 11708                           
 11709                           ;Config register IDLOC53 @ 0x20006A
 11710                           ;	unspecified, using default values
 11711  20006A                     	org	2097258
 11712  20006A  FFFF               	dw	65535
 11713                           
 11714                           ;Config register IDLOC54 @ 0x20006C
 11715                           ;	unspecified, using default values
 11716  20006C                     	org	2097260
 11717  20006C  FFFF               	dw	65535
 11718                           
 11719                           ;Config register IDLOC55 @ 0x20006E
 11720                           ;	unspecified, using default values
 11721  20006E                     	org	2097262
 11722  20006E  FFFF               	dw	65535
 11723                           
 11724                           ;Config register IDLOC56 @ 0x200070
 11725                           ;	unspecified, using default values
 11726  200070                     	org	2097264
 11727  200070  FFFF               	dw	65535
 11728                           
 11729                           ;Config register IDLOC57 @ 0x200072
 11730                           ;	unspecified, using default values
 11731  200072                     	org	2097266
 11732  200072  FFFF               	dw	65535
 11733                           
 11734                           ;Config register IDLOC58 @ 0x200074
 11735                           ;	unspecified, using default values
 11736  200074                     	org	2097268
 11737  200074  FFFF               	dw	65535
 11738                           
 11739                           ;Config register IDLOC59 @ 0x200076
 11740                           ;	unspecified, using default values
 11741  200076                     	org	2097270
 11742  200076  FFFF               	dw	65535
 11743                           
 11744                           ;Config register IDLOC60 @ 0x200078
 11745                           ;	unspecified, using default values
 11746  200078                     	org	2097272
 11747  200078  FFFF               	dw	65535
 11748                           
 11749                           ;Config register IDLOC61 @ 0x20007A
 11750                           ;	unspecified, using default values
 11751  20007A                     	org	2097274
 11752  20007A  FFFF               	dw	65535
 11753                           
 11754                           ;Config register IDLOC62 @ 0x20007C
 11755                           ;	unspecified, using default values
 11756  20007C                     	org	2097276
 11757  20007C  FFFF               	dw	65535
 11758                           
 11759                           ;Config register IDLOC63 @ 0x20007E
 11760                           ;	unspecified, using default values
 11761  20007E                     	org	2097278
 11762  20007E  FFFF               	dw	65535
 11763                           
 11764                           ;Config register IDLOC64 @ 0x200080
 11765                           ;	unspecified, using default values
 11766  200080                     	org	2097280
 11767  200080  FFFF               	dw	65535
 11768                           
 11769                           ;Config register IDLOC65 @ 0x200082
 11770                           ;	unspecified, using default values
 11771  200082                     	org	2097282
 11772  200082  FFFF               	dw	65535
 11773                           
 11774                           ;Config register IDLOC66 @ 0x200084
 11775                           ;	unspecified, using default values
 11776  200084                     	org	2097284
 11777  200084  FFFF               	dw	65535
 11778                           
 11779                           ;Config register IDLOC67 @ 0x200086
 11780                           ;	unspecified, using default values
 11781  200086                     	org	2097286
 11782  200086  FFFF               	dw	65535
 11783                           
 11784                           ;Config register IDLOC68 @ 0x200088
 11785                           ;	unspecified, using default values
 11786  200088                     	org	2097288
 11787  200088  FFFF               	dw	65535
 11788                           
 11789                           ;Config register IDLOC69 @ 0x20008A
 11790                           ;	unspecified, using default values
 11791  20008A                     	org	2097290
 11792  20008A  FFFF               	dw	65535
 11793                           
 11794                           ;Config register IDLOC70 @ 0x20008C
 11795                           ;	unspecified, using default values
 11796  20008C                     	org	2097292
 11797  20008C  FFFF               	dw	65535
 11798                           
 11799                           ;Config register IDLOC71 @ 0x20008E
 11800                           ;	unspecified, using default values
 11801  20008E                     	org	2097294
 11802  20008E  FFFF               	dw	65535
 11803                           
 11804                           ;Config register IDLOC72 @ 0x200090
 11805                           ;	unspecified, using default values
 11806  200090                     	org	2097296
 11807  200090  FFFF               	dw	65535
 11808                           
 11809                           ;Config register IDLOC73 @ 0x200092
 11810                           ;	unspecified, using default values
 11811  200092                     	org	2097298
 11812  200092  FFFF               	dw	65535
 11813                           
 11814                           ;Config register IDLOC74 @ 0x200094
 11815                           ;	unspecified, using default values
 11816  200094                     	org	2097300
 11817  200094  FFFF               	dw	65535
 11818                           
 11819                           ;Config register IDLOC75 @ 0x200096
 11820                           ;	unspecified, using default values
 11821  200096                     	org	2097302
 11822  200096  FFFF               	dw	65535
 11823                           
 11824                           ;Config register IDLOC76 @ 0x200098
 11825                           ;	unspecified, using default values
 11826  200098                     	org	2097304
 11827  200098  FFFF               	dw	65535
 11828                           
 11829                           ;Config register IDLOC77 @ 0x20009A
 11830                           ;	unspecified, using default values
 11831  20009A                     	org	2097306
 11832  20009A  FFFF               	dw	65535
 11833                           
 11834                           ;Config register IDLOC78 @ 0x20009C
 11835                           ;	unspecified, using default values
 11836  20009C                     	org	2097308
 11837  20009C  FFFF               	dw	65535
 11838                           
 11839                           ;Config register IDLOC79 @ 0x20009E
 11840                           ;	unspecified, using default values
 11841  20009E                     	org	2097310
 11842  20009E  FFFF               	dw	65535
 11843                           
 11844                           ;Config register IDLOC80 @ 0x2000A0
 11845                           ;	unspecified, using default values
 11846  2000A0                     	org	2097312
 11847  2000A0  FFFF               	dw	65535
 11848                           
 11849                           ;Config register IDLOC81 @ 0x2000A2
 11850                           ;	unspecified, using default values
 11851  2000A2                     	org	2097314
 11852  2000A2  FFFF               	dw	65535
 11853                           
 11854                           ;Config register IDLOC82 @ 0x2000A4
 11855                           ;	unspecified, using default values
 11856  2000A4                     	org	2097316
 11857  2000A4  FFFF               	dw	65535
 11858                           
 11859                           ;Config register IDLOC83 @ 0x2000A6
 11860                           ;	unspecified, using default values
 11861  2000A6                     	org	2097318
 11862  2000A6  FFFF               	dw	65535
 11863                           
 11864                           ;Config register IDLOC84 @ 0x2000A8
 11865                           ;	unspecified, using default values
 11866  2000A8                     	org	2097320
 11867  2000A8  FFFF               	dw	65535
 11868                           
 11869                           ;Config register IDLOC85 @ 0x2000AA
 11870                           ;	unspecified, using default values
 11871  2000AA                     	org	2097322
 11872  2000AA  FFFF               	dw	65535
 11873                           
 11874                           ;Config register IDLOC86 @ 0x2000AC
 11875                           ;	unspecified, using default values
 11876  2000AC                     	org	2097324
 11877  2000AC  FFFF               	dw	65535
 11878                           
 11879                           ;Config register IDLOC87 @ 0x2000AE
 11880                           ;	unspecified, using default values
 11881  2000AE                     	org	2097326
 11882  2000AE  FFFF               	dw	65535
 11883                           
 11884                           ;Config register IDLOC88 @ 0x2000B0
 11885                           ;	unspecified, using default values
 11886  2000B0                     	org	2097328
 11887  2000B0  FFFF               	dw	65535
 11888                           
 11889                           ;Config register IDLOC89 @ 0x2000B2
 11890                           ;	unspecified, using default values
 11891  2000B2                     	org	2097330
 11892  2000B2  FFFF               	dw	65535
 11893                           
 11894                           ;Config register IDLOC90 @ 0x2000B4
 11895                           ;	unspecified, using default values
 11896  2000B4                     	org	2097332
 11897  2000B4  FFFF               	dw	65535
 11898                           
 11899                           ;Config register IDLOC91 @ 0x2000B6
 11900                           ;	unspecified, using default values
 11901  2000B6                     	org	2097334
 11902  2000B6  FFFF               	dw	65535
 11903                           
 11904                           ;Config register IDLOC92 @ 0x2000B8
 11905                           ;	unspecified, using default values
 11906  2000B8                     	org	2097336
 11907  2000B8  FFFF               	dw	65535
 11908                           
 11909                           ;Config register IDLOC93 @ 0x2000BA
 11910                           ;	unspecified, using default values
 11911  2000BA                     	org	2097338
 11912  2000BA  FFFF               	dw	65535
 11913                           
 11914                           ;Config register IDLOC94 @ 0x2000BC
 11915                           ;	unspecified, using default values
 11916  2000BC                     	org	2097340
 11917  2000BC  FFFF               	dw	65535
 11918                           
 11919                           ;Config register IDLOC95 @ 0x2000BE
 11920                           ;	unspecified, using default values
 11921  2000BE                     	org	2097342
 11922  2000BE  FFFF               	dw	65535
 11923                           
 11924                           ;Config register IDLOC96 @ 0x2000C0
 11925                           ;	unspecified, using default values
 11926  2000C0                     	org	2097344
 11927  2000C0  FFFF               	dw	65535
 11928                           
 11929                           ;Config register IDLOC97 @ 0x2000C2
 11930                           ;	unspecified, using default values
 11931  2000C2                     	org	2097346
 11932  2000C2  FFFF               	dw	65535
 11933                           
 11934                           ;Config register IDLOC98 @ 0x2000C4
 11935                           ;	unspecified, using default values
 11936  2000C4                     	org	2097348
 11937  2000C4  FFFF               	dw	65535
 11938                           
 11939                           ;Config register IDLOC99 @ 0x2000C6
 11940                           ;	unspecified, using default values
 11941  2000C6                     	org	2097350
 11942  2000C6  FFFF               	dw	65535
 11943                           
 11944                           ;Config register IDLOC100 @ 0x2000C8
 11945                           ;	unspecified, using default values
 11946  2000C8                     	org	2097352
 11947  2000C8  FFFF               	dw	65535
 11948                           
 11949                           ;Config register IDLOC101 @ 0x2000CA
 11950                           ;	unspecified, using default values
 11951  2000CA                     	org	2097354
 11952  2000CA  FFFF               	dw	65535
 11953                           
 11954                           ;Config register IDLOC102 @ 0x2000CC
 11955                           ;	unspecified, using default values
 11956  2000CC                     	org	2097356
 11957  2000CC  FFFF               	dw	65535
 11958                           
 11959                           ;Config register IDLOC103 @ 0x2000CE
 11960                           ;	unspecified, using default values
 11961  2000CE                     	org	2097358
 11962  2000CE  FFFF               	dw	65535
 11963                           
 11964                           ;Config register IDLOC104 @ 0x2000D0
 11965                           ;	unspecified, using default values
 11966  2000D0                     	org	2097360
 11967  2000D0  FFFF               	dw	65535
 11968                           
 11969                           ;Config register IDLOC105 @ 0x2000D2
 11970                           ;	unspecified, using default values
 11971  2000D2                     	org	2097362
 11972  2000D2  FFFF               	dw	65535
 11973                           
 11974                           ;Config register IDLOC106 @ 0x2000D4
 11975                           ;	unspecified, using default values
 11976  2000D4                     	org	2097364
 11977  2000D4  FFFF               	dw	65535
 11978                           
 11979                           ;Config register IDLOC107 @ 0x2000D6
 11980                           ;	unspecified, using default values
 11981  2000D6                     	org	2097366
 11982  2000D6  FFFF               	dw	65535
 11983                           
 11984                           ;Config register IDLOC108 @ 0x2000D8
 11985                           ;	unspecified, using default values
 11986  2000D8                     	org	2097368
 11987  2000D8  FFFF               	dw	65535
 11988                           
 11989                           ;Config register IDLOC109 @ 0x2000DA
 11990                           ;	unspecified, using default values
 11991  2000DA                     	org	2097370
 11992  2000DA  FFFF               	dw	65535
 11993                           
 11994                           ;Config register IDLOC110 @ 0x2000DC
 11995                           ;	unspecified, using default values
 11996  2000DC                     	org	2097372
 11997  2000DC  FFFF               	dw	65535
 11998                           
 11999                           ;Config register IDLOC111 @ 0x2000DE
 12000                           ;	unspecified, using default values
 12001  2000DE                     	org	2097374
 12002  2000DE  FFFF               	dw	65535
 12003                           
 12004                           ;Config register IDLOC112 @ 0x2000E0
 12005                           ;	unspecified, using default values
 12006  2000E0                     	org	2097376
 12007  2000E0  FFFF               	dw	65535
 12008                           
 12009                           ;Config register IDLOC113 @ 0x2000E2
 12010                           ;	unspecified, using default values
 12011  2000E2                     	org	2097378
 12012  2000E2  FFFF               	dw	65535
 12013                           
 12014                           ;Config register IDLOC114 @ 0x2000E4
 12015                           ;	unspecified, using default values
 12016  2000E4                     	org	2097380
 12017  2000E4  FFFF               	dw	65535
 12018                           
 12019                           ;Config register IDLOC115 @ 0x2000E6
 12020                           ;	unspecified, using default values
 12021  2000E6                     	org	2097382
 12022  2000E6  FFFF               	dw	65535
 12023                           
 12024                           ;Config register IDLOC116 @ 0x2000E8
 12025                           ;	unspecified, using default values
 12026  2000E8                     	org	2097384
 12027  2000E8  FFFF               	dw	65535
 12028                           
 12029                           ;Config register IDLOC117 @ 0x2000EA
 12030                           ;	unspecified, using default values
 12031  2000EA                     	org	2097386
 12032  2000EA  FFFF               	dw	65535
 12033                           
 12034                           ;Config register IDLOC118 @ 0x2000EC
 12035                           ;	unspecified, using default values
 12036  2000EC                     	org	2097388
 12037  2000EC  FFFF               	dw	65535
 12038                           
 12039                           ;Config register IDLOC119 @ 0x2000EE
 12040                           ;	unspecified, using default values
 12041  2000EE                     	org	2097390
 12042  2000EE  FFFF               	dw	65535
 12043                           
 12044                           ;Config register IDLOC120 @ 0x2000F0
 12045                           ;	unspecified, using default values
 12046  2000F0                     	org	2097392
 12047  2000F0  FFFF               	dw	65535
 12048                           
 12049                           ;Config register IDLOC121 @ 0x2000F2
 12050                           ;	unspecified, using default values
 12051  2000F2                     	org	2097394
 12052  2000F2  FFFF               	dw	65535
 12053                           
 12054                           ;Config register IDLOC122 @ 0x2000F4
 12055                           ;	unspecified, using default values
 12056  2000F4                     	org	2097396
 12057  2000F4  FFFF               	dw	65535
 12058                           
 12059                           ;Config register IDLOC123 @ 0x2000F6
 12060                           ;	unspecified, using default values
 12061  2000F6                     	org	2097398
 12062  2000F6  FFFF               	dw	65535
 12063                           
 12064                           ;Config register IDLOC124 @ 0x2000F8
 12065                           ;	unspecified, using default values
 12066  2000F8                     	org	2097400
 12067  2000F8  FFFF               	dw	65535
 12068                           
 12069                           ;Config register IDLOC125 @ 0x2000FA
 12070                           ;	unspecified, using default values
 12071  2000FA                     	org	2097402
 12072  2000FA  FFFF               	dw	65535
 12073                           
 12074                           ;Config register IDLOC126 @ 0x2000FC
 12075                           ;	unspecified, using default values
 12076  2000FC                     	org	2097404
 12077  2000FC  FFFF               	dw	65535
 12078                           
 12079                           ;Config register IDLOC127 @ 0x2000FE
 12080                           ;	unspecified, using default values
 12081  2000FE                     	org	2097406
 12082  2000FE  FFFF               	dw	65535
 12083                           
 12084                           	psect	config
 12085                           
 12086                           ;Config register CONFIG1L @ 0x300000
 12087                           ;	External Oscillator mode Selection bits
 12088                           ;	FEXTOSC = OFF, Oscillator not enabled
 12089                           ;	Power-up default value for COSC bits
 12090                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12091  300000                     	org	3145728
 12092  300000  8C                 	db	140
 12093                           
 12094                           ;Config register CONFIG1H @ 0x300001
 12095                           ;	Clock Out Enable bit
 12096                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12097                           ;	Clock Switch Enable bit
 12098                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12099                           ;	Fail-Safe Clock Monitor Enable bit
 12100                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12101  300001                     	org	3145729
 12102  300001  FF                 	db	255
 12103                           
 12104                           ;Config register CONFIG2L @ 0x300002
 12105                           ;	Master Clear Enable bit
 12106                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 12107                           ;	Power-up Timer Enable bit
 12108                           ;	PWRTE = OFF, Power up timer disabled
 12109                           ;	Low-power BOR enable bit
 12110                           ;	LPBOREN = OFF, Low power BOR is disabled
 12111                           ;	Brown-out Reset Enable bits
 12112                           ;	BOREN = NOSLP, Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ign
      +                          ored
 12113  300002                     	org	3145730
 12114  300002  BF                 	db	191
 12115                           
 12116                           ;Config register CONFIG2H @ 0x300003
 12117                           ;	Brown Out Reset Voltage selection bits
 12118                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 12119                           ;	ZCD Disable bit
 12120                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12121                           ;	PPSLOCK bit One-Way Set Enable bit
 12122                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
 12123                           ;	Stack Full/Underflow Reset Enable bit
 12124                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12125                           ;	Extended Instruction Set Enable bit
 12126                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12127  300003                     	org	3145731
 12128  300003  F7                 	db	247
 12129                           
 12130                           ;Config register CONFIG3L @ 0x300004
 12131                           ;	WDT Period Select bits
 12132                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12133                           ;	WDT operating mode
 12134                           ;	WDTE = OFF, WDT Disabled
 12135  300004                     	org	3145732
 12136  300004  9F                 	db	159
 12137                           
 12138                           ;Config register CONFIG3H @ 0x300005
 12139                           ;	WDT Window Select bits
 12140                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12141                           ;	WDT input clock selector
 12142                           ;	WDTCCS = SC, Software Control
 12143  300005                     	org	3145733
 12144  300005  FF                 	db	255
 12145                           
 12146                           ;Config register CONFIG4L @ 0x300006
 12147                           ;	Write Protection Block 0
 12148                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12149                           ;	Write Protection Block 1
 12150                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12151                           ;	Write Protection Block 2
 12152                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12153                           ;	Write Protection Block 3
 12154                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12155                           ;	Write Protection Block 4
 12156                           ;	WRT4 = 0x1, unprogrammed default
 12157                           ;	Write Protection Block 5
 12158                           ;	WRT5 = 0x1, unprogrammed default
 12159                           ;	Write Protection Block 6
 12160                           ;	WRT6 = 0x1, unprogrammed default
 12161                           ;	Write Protection Block 7
 12162                           ;	WRT7 = 0x1, unprogrammed default
 12163  300006                     	org	3145734
 12164  300006  FF                 	db	255
 12165                           
 12166                           ;Config register CONFIG4H @ 0x300007
 12167                           ;	Configuration Register Write Protection bit
 12168                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 12169                           ;	Boot Block Write Protection bit
 12170                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12171                           ;	Data EEPROM Write Protection bit
 12172                           ;	WRTD = OFF, Data EEPROM not write-protected
 12173                           ;	Scanner Enable bit
 12174                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 12175                           ;	Low Voltage Programming Enable bit
 12176                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12177  300007                     	org	3145735
 12178  300007  FF                 	db	255
 12179                           
 12180                           ;Config register CONFIG5L @ 0x300008
 12181                           ;	UserNVM Program Memory Code Protection bit
 12182                           ;	CP = OFF, UserNVM code protection disabled
 12183                           ;	DataNVM Memory Code Protection bit
 12184                           ;	CPD = OFF, DataNVM code protection disabled
 12185  300008                     	org	3145736
 12186  300008  FF                 	db	255
 12187                           
 12188                           ;Config register CONFIG5H @ 0x300009
 12189                           ;	unspecified, using default values
 12190  300009                     	org	3145737
 12191  300009  FF                 	db	255
 12192                           
 12193                           ;Config register CONFIG6L @ 0x30000A
 12194                           ;	Table Read Protection Block 0
 12195                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12196                           ;	Table Read Protection Block 1
 12197                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12198                           ;	Table Read Protection Block 2
 12199                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12200                           ;	Table Read Protection Block 3
 12201                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12202                           ;	Table Read Protection Block 4
 12203                           ;	EBTR4 = 0x1, unprogrammed default
 12204                           ;	Table Read Protection Block 5
 12205                           ;	EBTR5 = 0x1, unprogrammed default
 12206                           ;	Table Read Protection Block 6
 12207                           ;	EBTR6 = 0x1, unprogrammed default
 12208                           ;	Table Read Protection Block 7
 12209                           ;	EBTR7 = 0x1, unprogrammed default
 12210  30000A                     	org	3145738
 12211  30000A  FF                 	db	255
 12212                           
 12213                           ;Config register CONFIG6H @ 0x30000B
 12214                           ;	Boot Block Table Read Protection bit
 12215                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12216  30000B                     	org	3145739
 12217  30000B  FF                 	db	255
 12218                           tosu	equ	0xFFF
 12219                           tosh	equ	0xFFE
 12220                           tosl	equ	0xFFD
 12221                           stkptr	equ	0xFFC
 12222                           pclatu	equ	0xFFB
 12223                           pclath	equ	0xFFA
 12224                           pcl	equ	0xFF9
 12225                           tblptru	equ	0xFF8
 12226                           tblptrh	equ	0xFF7
 12227                           tblptrl	equ	0xFF6
 12228                           tablat	equ	0xFF5
 12229                           prodh	equ	0xFF4
 12230                           prodl	equ	0xFF3
 12231                           indf0	equ	0xFEF
 12232                           postinc0	equ	0xFEE
 12233                           postdec0	equ	0xFED
 12234                           preinc0	equ	0xFEC
 12235                           plusw0	equ	0xFEB
 12236                           fsr0h	equ	0xFEA
 12237                           fsr0l	equ	0xFE9
 12238                           wreg	equ	0xFE8
 12239                           indf1	equ	0xFE7
 12240                           postinc1	equ	0xFE6
 12241                           postdec1	equ	0xFE5
 12242                           preinc1	equ	0xFE4
 12243                           plusw1	equ	0xFE3
 12244                           fsr1h	equ	0xFE2
 12245                           fsr1l	equ	0xFE1
 12246                           bsr	equ	0xFE0
 12247                           indf2	equ	0xFDF
 12248                           postinc2	equ	0xFDE
 12249                           postdec2	equ	0xFDD
 12250                           preinc2	equ	0xFDC
 12251                           plusw2	equ	0xFDB
 12252                           fsr2h	equ	0xFDA
 12253                           fsr2l	equ	0xFD9
 12254                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    50
    Data        22
    BSS         148
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160     52     150
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    Button_StateMachine$0	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    memcpy@d1	PTR void  size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), mtouch_sensor(BANK0[18]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), mtouch_sensor(BANK0[18]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), mtouch_sensor_init(CODE[18]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), mtouch_sensor_init(CODE[18]), 

    RGBLed_SetColor@AdiodeArray	PTR unsigned long  size(2) Largest target is 64
		 -> DiodeArray(BANK1[64]), 

    RGBLed_InitDiode@AdiodeArray	PTR unsigned long  size(2) Largest target is 64
		 -> DiodeArray(BANK1[64]), 

    RGBLed_SetDiode@AdiodeArray	PTR unsigned long  size(2) Largest target is 64
		 -> DiodeArray(BANK1[64]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), ADCC_ThresholdISR_mTouch(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), ADCC_DefaultInterruptHandler(), ADCC_ThresholdISR_mTouch(), 

    MTOUCH_Button_SetNotPressedCallback@callback	PTR FTN(enum E12923,)void  size(3) Largest target is 1
		 -> processButtonRelease(), 

    MTOUCH_Button_SetPressedCallback@callback	PTR FTN(enum E12923,)void  size(3) Largest target is 1
		 -> processButtonTouch(), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_Service@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(3) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E12923,)void  size(3) Largest target is 1
		 -> processButtonRelease(), Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E12923,)void  size(3) Largest target is 1
		 -> processButtonTouch(), Button_DefaultCallback(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_isCalibratingAcqTime@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_setCalibratAcqTime@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_setCalibrated@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_isCalibrated@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    MTOUCH_Sensor_Service@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_autoCalibration@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    Sensor_scheduleNextScan@sensor	PTR struct . size(2) Largest target is 18
		 -> mtouch_sensor(BANK0[18]), 

    sp__memcpy	PTR void  size(2) Largest target is 32
		 -> mtouch_button(BANK0[32]), mtouch_sensor(BANK0[18]), 

    callback_sampled	PTR FTN(enum E12860,)void  size(3) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMRAM

    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Sensor_FrequencyHopping->_Sensor_FrequencyHopping_Autotune_Process
    _Sensor_FrequencyHopping_Autotune_Process->_abs
    _MTOUCH_Sensor_postAcquisitionProcess->_Sensor_RawSample_Update
    _Sensor_RawSample_Update->_medianFilter
    _MTOUCH_Sensor_isSamplingComplete->_Sensor_scheduleNextScan
    _Sensor_scheduleNextScan->_Sensor_SetTrisBit
    _updateLED->_FillScreen
    _FillScreen->_RGBLed_SetDiode
    _RGBLed_SetDiode->_RGBLed_InitDiode
    _RGBLed_InitDiode->_reverse
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_memcpy
    _MTOUCH_Sensor_Initialize->_Sensor_Sampled_Reset
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Button_Initialize->_MTOUCH_Sensor_Calibrate
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR3_ISR->i2_TMR3_WriteTimer
    _TMR1_ISR->i2_TMR1_WriteTimer
    _ADCC_ThresholdISR_mTouch->_MTOUCH_Sensor_Service
    _MTOUCH_Sensor_Service->_Sensor_autoCalibration
    i2_Sensor_scheduleNextScan->i2_Sensor_SetTrisBit
    _Sensor_autoCalibration->i2_abs

Critical Paths under _main in BANK0

    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Pressed
    _Button_State_Pressed->_processButtonRelease
    _processButtonRelease->_updateLED
    _updateLED->_FillScreen
    _FillScreen->_RGBLed_SetDiode

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14954
_MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Button_SetPressedCallback
                  _SYSTEM_Initialize
                    _applicationTask
 ---------------------------------------------------------------------------------
 (1) _applicationTask                                      0     0      0   12133
            _MTOUCH_Service_Mainloop
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Service_Mainloop                              0     0      0   12133
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_needReburst                                   1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Tick                                          0     0      0     232
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Tick                                   1     1      0     232
                                             25 COMRAM     1     1      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (5) _Button_Tick_helper                                   4     2      2     164
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_SampleAll                              0     0      0    2502
   _MTOUCH_Sensor_isSamplingComplete
_MTOUCH_Sensor_postAcquisitionProces
            _Sensor_FrequencyHopping
 ---------------------------------------------------------------------------------
 (4) _Sensor_FrequencyHopping                              0     0      0     719
_Sensor_FrequencyHopping_Autotune_Pr
             _Sensor_setSamplePeriod
 ---------------------------------------------------------------------------------
 (5) _Sensor_setSamplePeriod                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Sensor_FrequencyHopping_Autotune_Process            16    16      0     719
                                             25 COMRAM    16    16      0
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     242
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_postAcquisitionProcess                 1     1      0     761
                                             33 COMRAM     1     1      0
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
 ---------------------------------------------------------------------------------
 (5) _Sensor_RawSample_Update                              4     2      2     649
                                             29 COMRAM     4     2      2
                       _medianFilter
 ---------------------------------------------------------------------------------
 (6) _medianFilter                                         8     6      2     462
                                             21 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isSamplingComplete                     1     1      0    1022
                                             31 COMRAM     1     1      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_isSampling
           _MTOUCH_Sensor_wasSampled
            _Sensor_scheduleNextScan
 ---------------------------------------------------------------------------------
 (5) _Sensor_scheduleNextScan                              6     6      0     844
                                             25 COMRAM     6     6      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
                  _Sensor_SetTrisBit
                _Sensor_isCalibrated
        _Sensor_isCalibratingAcqTime
 ---------------------------------------------------------------------------------
 (6) _Sensor_isCalibratingAcqTime                          2     0      2     148
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_isCalibrated                                  2     0      2     148
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_SetTrisBit                                    4     3      1     192
                                             21 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_isEnabled                              1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isSampling                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_ServiceAll                             1     1      0    6887
                                             51 BANK0      1     1      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (4) _Button_Service                                       4     4      0    6788
                                             47 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_wasSampled                             1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isCalibrated                           1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Button_State_Pressed                                 7     5      2    3699
                                             40 BANK0      7     5      2
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
               _processButtonRelease *
 ---------------------------------------------------------------------------------
 (6) _processButtonRelease                                 5     5      0    3147
                                             35 BANK0      5     5      0
                     _TMR1_ReadTimer
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
                     _TMR3_ReadTimer
                     _TMR3_StopTimer
                    _TMR3_WriteTimer
                 _getBrightnessLevel
                       _getColorMask
                          _updateLED
 ---------------------------------------------------------------------------------
 (7) _updateLED                                           21    18      3    2330
                                             14 BANK0     21    18      3
                         _FillScreen
                 _getBrightnessLevel (ARG)
                       _getColorMask (ARG)
 ---------------------------------------------------------------------------------
 (8) _FillScreen                                           5     1      4    1778
                                             51 COMRAM     1     1      0
                                             10 BANK0      4     0      4
                    _RGBLed_SetDiode
 ---------------------------------------------------------------------------------
 (9) _RGBLed_SetDiode                                     12     6      6    1558
                                             49 COMRAM     2     2      0
                                              0 BANK0     10     4      6
                   _RGBLed_InitDiode
                  _RGBLed_ResetDelay
                    _RGBLed_SetColor
 ---------------------------------------------------------------------------------
 (10) _RGBLed_SetColor                                     6     4      2     727
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (10) _RGBLed_ResetDelay                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RGBLed_InitDiode                                   25    19      6     397
                                             24 COMRAM    25    19      6
                            _reverse
 ---------------------------------------------------------------------------------
 (11) _reverse                                             3     3      0     157
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _getColorMask                                         5     2      3       0
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (7) _getBrightnessLevel                                   2     2      0       0
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR3_WriteTimer                                      2     0      2     290
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR3_ReadTimer                                       8     6      2      69
                                             21 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     290
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2      69
                                             21 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Button_State_NotPressed                              5     3      2    1023
                                             40 BANK0      5     3      2
             _Button_Baseline_Update
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
                 _processButtonTouch *
 ---------------------------------------------------------------------------------
 (6) _processButtonTouch                                   3     3      0      22
                                             21 COMRAM     3     3      0
                    _TMR1_StartTimer
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (7) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Button_DefaultCallback                               1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_State_Initializing                            6     4      2     793
                                             40 BANK0      6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (6) _Button_Baseline_Update                               6     4      2     328
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _Button_Baseline_Initialize                           6     4      2     186
                                             24 COMRAM     6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update                                2     0      2     470
                                             28 COMRAM     2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (6) _Button_Reading_Update_Helper                         4     2      2     350
                                             24 COMRAM     4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_RawSample_Get                          3     1      2      44
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _Button_Deviation_Update                             16    14      2     256
                                             21 COMRAM    16    14      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2625
                    _ADCC_Initialize
               _INTERRUPT_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0      98
                                             24 COMRAM     2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             3     0      3      98
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             24 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3      98
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Initialize                                    0     0      0    2255
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Scan_Initialize                        0     0      0     174
      _MTOUCH_Sensor_ADCC_Initialize
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_ADCC_Initialize                        0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     242
                                             23 COMRAM     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_InitializeAll                          1     1      0     995
                                             32 COMRAM     1     1      0
           _MTOUCH_Sensor_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Initialize                             1     1      0     328
                                             23 COMRAM     1     1      0
            _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_Enable                                 1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_InitializeAll                          1     1      0     844
                                             32 COMRAM     1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     599
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Button_Initialize                             3     3      0     177
                                             22 COMRAM     3     3      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_Calibrate                              1     1      0      44
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetPressedCallback                     3     0      3      98
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetNotPressedCallback                  3     0      3      98
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          6     6      0    2316
                                             15 COMRAM     6     6      0
                  _ADCC_ThresholdISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR3_ISR                                            0     0      0     114
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR1_ISR                                            0     0      0     114
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0    2088
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
           _ADCC_ThresholdISR_mTouch *
 ---------------------------------------------------------------------------------
 (14) _ADCC_ThresholdISR_mTouch                            0     0      0    2088
              _MTOUCH_Sensor_Service
 ---------------------------------------------------------------------------------
 (15) _MTOUCH_Sensor_Service                               4     4      0    2088
                                             11 COMRAM     4     4      0
             _Sensor_autoCalibration
                  _Sensor_setSampled
                i2_Sensor_SetTrisBit
              i2_Sensor_isCalibrated
          i2_Sensor_scheduleNextScan
                              i2_abs
 ---------------------------------------------------------------------------------
 (16) i2_Sensor_scheduleNextScan                           6     6      0     622
                                              4 COMRAM     6     6      0
          i2_MTOUCH_Sensor_isEnabled
         i2_MTOUCH_Sensor_wasSampled
                i2_Sensor_SetTrisBit
              i2_Sensor_isCalibrated
      i2_Sensor_isCalibratingAcqTime
 ---------------------------------------------------------------------------------
 (17) i2_Sensor_isCalibrated                               2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_Sensor_SetTrisBit                                 4     3      1     118
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (17) i2_MTOUCH_Sensor_wasSampled                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_MTOUCH_Sensor_isEnabled                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _Sensor_setSampled                                   2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _Sensor_autoCalibration                              7     5      2     991
                                              4 COMRAM     7     5      2
          _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
      i2_Sensor_isCalibratingAcqTime
                              i2_abs
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2     118
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_Sensor_isCalibratingAcqTime                       2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _Sensor_setCalibrated                                2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _Sensor_setCalibratAcqTime                           2     0      2     218
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Button_SetPressedCallback
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _INTERRUPT_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_Enable
           _Sensor_Sampled_Reset
         _memcpy
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
         _MTOUCH_Sensor_ADCC_Initialize
           _ADCC_SetADTIInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _applicationTask
     _MTOUCH_Service_Mainloop
       _MTOUCH_Button_ServiceAll
         _Button_Service
           _Button_Deviation_Update
           _Button_Reading_Update
             _Button_Reading_Update_Helper
               _MTOUCH_Sensor_RawSample_Get
           _Button_State_Initializing *
             _Button_Baseline_Initialize
               _MTOUCH_Sensor_RawSample_Get
             _Button_Baseline_Update
           _Button_State_NotPressed *
             _Button_Baseline_Update
             _Button_DefaultCallback *
             _MTOUCH_Button_Initialize *
               _MTOUCH_Sensor_Calibrate
             _processButtonTouch *
               _TMR1_StartTimer
               _TMR3_StartTimer
           _Button_State_Pressed *
             _Button_DefaultCallback *
             _MTOUCH_Button_Initialize *
               _MTOUCH_Sensor_Calibrate
             _processButtonRelease *
               _TMR1_ReadTimer
               _TMR1_StopTimer
               _TMR1_WriteTimer
               _TMR3_ReadTimer
               _TMR3_StopTimer
               _TMR3_WriteTimer
               _getBrightnessLevel
               _getColorMask
               _updateLED
                 _FillScreen
                   _RGBLed_SetDiode
                     _RGBLed_InitDiode
                       _reverse
                     _RGBLed_ResetDelay
                     _RGBLed_SetColor
                 _getBrightnessLevel (ARG)
                 _getColorMask (ARG)
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_isCalibrated *
           _MTOUCH_Sensor_wasSampled *
       _MTOUCH_Initialize
         _MTOUCH_Button_InitializeAll
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
           _memcpy
         _MTOUCH_Sensor_InitializeAll
           _MTOUCH_Sensor_Initialize
             _MTOUCH_Sensor_Calibrate
             _MTOUCH_Sensor_Enable
             _Sensor_Sampled_Reset
           _memcpy
         _MTOUCH_Sensor_Sampled_ResetAll
           _Sensor_Sampled_Reset
         _MTOUCH_Sensor_Scan_Initialize
           _MTOUCH_Sensor_ADCC_Initialize
             _ADCC_SetADTIInterruptHandler
       _MTOUCH_Sensor_SampleAll
         _MTOUCH_Sensor_isSamplingComplete
           _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_isSampling
           _MTOUCH_Sensor_wasSampled
           _Sensor_scheduleNextScan
             _MTOUCH_Sensor_isEnabled
             _MTOUCH_Sensor_wasSampled
             _Sensor_SetTrisBit
             _Sensor_isCalibrated
             _Sensor_isCalibratingAcqTime
         _MTOUCH_Sensor_postAcquisitionProcess
           _Sensor_DefaultCallback
           _Sensor_RawSample_Update
             _medianFilter
         _Sensor_FrequencyHopping
           _Sensor_FrequencyHopping_Autotune_Process
             _abs
           _Sensor_setSamplePeriod
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Tick
         _MTOUCH_Button_Tick
           _Button_Tick_helper
       _MTOUCH_needReburst

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ThresholdISR
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCC_ThresholdISR_mTouch *
       _MTOUCH_Sensor_Service
         _Sensor_autoCalibration
           _Sensor_setCalibratAcqTime
           _Sensor_setCalibrated
           i2_Sensor_isCalibratingAcqTime
           i2_abs
         _Sensor_setSampled
         i2_Sensor_SetTrisBit
         i2_Sensor_isCalibrated
         i2_Sensor_scheduleNextScan
           i2_MTOUCH_Sensor_isEnabled
           i2_MTOUCH_Sensor_wasSampled
           i2_Sensor_SetTrisBit
           i2_Sensor_isCalibrated
           i2_Sensor_isCalibratingAcqTime
         i2_abs
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     i2_TMR3_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      34        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      33        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      28        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Oct 01 11:08:04 2020

                                    ?_MTOUCH_Sensor_RawSample_Get 0016  
                                         ?_Sensor_autoCalibration 0005  
                                                              l51 3828  
                                                              l44 3008  
                                                              l38 3798  
                                                              l48 381E  
                                       _Sensor_setCalibratAcqTime 344E  
                                                             l203 2CD2  
                                                             l222 3824  
                                                             l207 35E6  
                                                             l402 37A8  
                                                             l234 1B9C  
                                                             l306 3808  
                                                             l180 360A  
                                                             l500 2530  
                                                             l252 2E2E  
                                                             l332 182E  
                                                             l350 31D6  
                                                             l318 1752  
                                                             l191 2F6E  
                                                             l511 1E66  
                                                             l335 3846  
                                                             l408 382C  
                                                             l184 2EDA  
                                                             l272 34D0  
                                                             l601 278E  
                                                             l521 2344  
                                                             l346 3548  
                                                             l506 2616  
                                                             l186 2EE8  
                                                             l515 1EBA  
                                                             l531 2C6E  
                                                             l372 3570  
                                                             l196 3308  
                                                             l276 33B2  
                                                             l604 2D30  
                                                             l188 2F20  
                                                             l380 368E  
                                                             l526 34A8  
                                                             l631 37FE  
                                                             l295 164E  
                                                             l287 2D86  
                                                             l704 2A5C  
                                                             l376 3252  
                                                             l609 223C  
                                                             l625 3848  
                                                             l490 3342  
                                                             l394 2ED2  
                                                             l628 37F0  
                                                             l580 212C  
                                                             l485 2ACE  
                                                             l389 366E  
                                                             l398 3214  
                                                             l495 362C  
                                                             l912 3094  
                                                             l921 36CE  
                                                             l915 383C  
                                                             l596 344C  
                                                             l790 2C0A  
                                                             l942 37D4  
                                                             l918 3834  
                                                             l926 3520  
                                                             l878 37E2  
                                                             l982 3830  
                                                             l990 34F8  
                                                             l976 304E  
                                                             l985 36AE  
                                                             l979 3838  
                                                             _GIE 007F97  
                                                 _timer1ReloadVal 0045  
                                                             _abs 311A  
                                         __size_of_PMD_Initialize 001C  
                                                             prod 000FF3  
                                                             tosl 000FFD  
                                                             wreg 000FE8  
                                ??_MTOUCH_Sensor_Sampled_ResetAll 0018  
                                 ?_MTOUCH_Sensor_Sampled_ResetAll 0001  
                                __size_of_MTOUCH_Sensor_SampleAll 0026  
                               __size_of_MTOUCH_Sensor_Initialize 0024  
                                       ?_MTOUCH_Sensor_Initialize 0001  
                                 __size_of_Sensor_setSamplePeriod 0028  
                                                            l1006 37C6  
                                                            l1201 1A06  
                                                            l1050 364E  
                                                            ?_abs 0016  
                                                            l1053 3760  
                                                            l1301 0FA0  
                                                            l1302 0FA2  
                                                            l1311 0FD6  
                                                            l1303 0FA8  
                                                            l1056 3748  
                                                            l1312 0FD8  
                                                            l1304 0FAA  
                                                            l1241 26E0  
                                                            l1401 11BC  
                                                            l1321 100C  
                                                            l1313 0FDE  
                                                            l1226 282E  
                                                            l1402 11BE  
                                                            l1322 100E  
                                                            l1314 0FE0  
                                                            l1306 0FC6  
                                                            l1075 3840  
                                                            l1411 11F2  
                                                            l1403 11C4  
                                                            l1331 1042  
                                                            l1323 1014  
                                                            l1412 11F4  
                                                            l1404 11C6  
                                                            l1332 1044  
                                                            l1324 1016  
                                                            l1316 0FFC  
                                                            l1252 2BA4  
                                                            l1180 2866  
                                                            l1501 13D8  
                                                            l1421 1228  
                                                            l1413 11FA  
                                                            l1341 1078  
                                                            l1333 104A  
                                                            l1502 13DA  
                                                            l1422 122A  
                                                            l1414 11FC  
                                                            l1406 11E2  
                                                            l1342 107A  
                                                            l1334 104C  
                                                            l1326 1032  
                                                            l1190 289A  
                                                            l2206 3150  
                                                            l2215 2DDC  
                                                            l1511 140E  
                                                            l1503 13E0  
                                                            l1431 125E  
                                                            l1423 1230  
                                                            l1351 10AE  
                                                            l1343 1080  
                                                            l1175 2852  
                                                            l1512 1410  
                                                            l1504 13E2  
                                                            l1432 1260  
                                                            l1424 1232  
                                                            l1416 1218  
                                                            l1352 10B0  
                                                            l1344 1082  
                                                            l1336 1068  
                                                            l1521 1444  
                                                            l1513 1416  
                                                            l1441 1294  
                                                            l1433 1266  
                                                            l1361 10E4  
                                                            l1353 10B6  
                                                            l1185 2886  
                                                            l1193 28CA  
                                                            l2209 3158  
                                                            l1169 3818  
                                                            l1282 29E0  
                                                            l1522 1446  
                                                            l1514 1418  
                                                            l1506 13FE  
                                                            l1442 1296  
                                                            l1434 1268  
                                                            l1426 124E  
                                                            l1362 10E6  
                                                            l1354 10B8  
                                                            l1346 109E  
                                                            l1274 337A  
                                                            l1178 2864  
                                                            l1523 144C  
                                                            l1451 12CA  
                                                            l1443 129C  
                                                            l1371 111A  
                                                            l1363 10EC  
                                                            l1291 0F6A  
                                                 _timer3ReloadVal 0043  
                                                            l1524 144E  
                                                            l1516 1434  
                                                            l1452 12CC  
                                                            l1444 129E  
                                                            l1436 1284  
                                                            l1372 111C  
                                                            l1364 10EE  
                                                            l1356 10D4  
                                                            l1292 0F6C  
                                                            l1188 2898  
                                                            l1269 2E80  
                                                            l1525 145C  
                                                            l1461 1300  
                                                            l1453 12D2  
                                                            l1381 1150  
                                                            l1373 1122  
                                                            l4101 10D6  
                                                            l1293 0F72  
                                                            l1462 1302  
                                                            l1454 12D4  
                                                            l1446 12BA  
                                                            l1382 1152  
                                                            l1374 1124  
                                                            l1366 110A  
                                                            l1294 0F74  
                                                            l1286 0F5A  
                                                            l1471 1336  
                                                            l1463 1308  
                                                            l1391 1186  
                                                            l1383 1158  
                                                            l4111 1114  
                                                            l4103 10DE  
                                                            l1279 2956  
                                                            l1528 3786  
                                                            l1472 1338  
                                                            l1464 130A  
                                                            l1456 12F0  
                                                            l1392 1188  
                                                            l1384 115A  
                                                            l1376 1140  
                                                            l1296 0F90  
                                                            l4033 2E32  
                                                            l4201 137A  
                                                            l1481 136C  
                                                            l1473 133E  
                                                            l1393 118E  
                                                            l4121 115E  
                                                            l4113 1128  
                                                            l4105 10F2  
                                                            l4041 0F34  
                                                            l1482 136E  
                                                            l1474 1340  
                                                            l1466 1326  
                                                            l1394 1190  
                                                            l1386 1176  
                                                            l5003 2EA6  
                                                            l4035 2E7E  
                                                            l4211 13BA  
                                                            l1491 13A2  
                                                            l4203 1384  
                                                            l1483 1374  
                                                            l4131 119E  
                                                            l4123 1168  
                                                            l4115 1132  
                                                            l4107 10FC  
                                                            l4051 0F82  
                                                            l4043 0F4C  
                                                            l5011 347E  
                                                            l1492 13A4  
                                                            l1484 1376  
                                                            l1476 135C  
                                                            l1396 11AC  
                                                            l5005 2EB2  
                                                            l4301 350E  
                                                            l4221 1400  
                                                            l4213 13CA  
                                                            l1493 13AA  
                                                            l4205 1394  
                                                            l4141 11E4  
                                                            l4133 11AE  
                                                            l4125 1178  
                                                            l4117 1142  
                                                            l4109 110C  
                                                            l4061 0FC8  
                                                            l4053 0F92  
                                                            l4045 0F5C  
                                                            l5021 3498  
                                                            l1494 13AC  
                                                            l1486 1392  
                                                            l5007 2EBA  
                                                            l3511 374A  
                                                            l4303 3512  
                                                            l4311 382E  
                                                            l4039 2958  
                                                            l4231 143E  
                                                            l4223 1408  
                                                            l4215 13D2  
                                                            l4207 139C  
                                                            l4151 1222  
                                                            l4143 11EC  
                                                            l4135 11B6  
                                                            l4127 1180  
                                                            l4119 114A  
                                                            l4071 1006  
                                                            l4063 0FD0  
                                                            l4055 0F9A  
                                                            l4047 0F64  
                                                            l5031 2C8A  
                                                            l5023 2C70  
                                                            l1496 13C8  
                                                            l5009 3820  
                                                            l4305 3518  
                                                            l4313 3690  
                                                            l4321 34D2  
                                                            l4401 264C  
                                                            l4233 1452  
                                                            l4225 141C  
                                                            l4217 13E6  
                                                            l4209 13B0  
                                                            l4161 126C  
                                                            l4153 1236  
                                                            l4145 1200  
                                                            l4137 11CA  
                                                            l4129 1194  
                                                            l4081 1050  
                                                            l4073 101A  
                                                            l4065 0FE4  
                                                            l4057 0FAE  
                                                            l4049 0F78  
                                                            l5033 2CA0  
                                                            l5041 2CBE  
                                                            l5017 3482  
                                                            l3507 383E  
                                                            l4307 351C  
                                                            l4315 369A  
                                                            l4323 34E0  
                                                            l4331 34F0  
                                                            l4235 3776  
                                                            l4227 1426  
                                                            l4219 13F0  
                                                            l4171 12AC  
                                                            l4163 1276  
                                                            l4155 1240  
                                                            l4147 120A  
                                                            l4139 11D4  
                                                            l4091 1090  
                                                            l4083 105A  
                                                            l4075 1024  
                                                            l4067 0FEE  
                                                            l4059 0FB8  
                                                            l5043 2CC0  
                                                            l5035 2CB4  
                                                            l5051 3804  
                                                            l5019 3496  
                                                            l3461 2A46  
                                                            l3453 29E2  
                                                            l3509 372E  
                                                            l4309 3836  
                                                            l4317 36A6  
                                                            l4333 34F4  
                                                            l4325 34E2  
                                                            l4341 279A  
                                                            l4413 267C  
                                                            l4405 265C  
                                                            l4229 1436  
                                                            l4181 12F2  
                                                            l4173 12BC  
                                                            l4165 1286  
                                                            l4157 1250  
                                                            l4149 121A  
                                                            l4093 10A0  
                                                            l4085 106A  
                                                            l4077 1034  
                                                            l4069 0FFE  
                                                            l5045 2CD0  
                                                            l5037 2CB8  
                                                            l5029 2C74  
                                                            l5061 2E02  
                                                            l5053 2DDE  
                                                            l3471 2A54  
                                                            l3463 2A48  
                                                            l3455 2A02  
                                                            l5223 37C8  
                                                            l4271 337E  
                                                            l4327 34E6  
                                                            l4335 2790  
                                                            l4423 268C  
                                                            l4191 1330  
                                                            l4183 12FA  
                                                            l4175 12C4  
                                                            l4167 128E  
                                                            l4159 1258  
                                                            l4095 10A8  
                                                            l4087 1072  
                                                            l4079 103C  
                                                            l5063 2E16  
                                                            l3473 2A56  
                                                            l3465 2A4A  
                                                            l3457 2A0E  
                                                            l5225 37BA  
                                                            l4273 338E  
                                                            l4329 34EA  
                                                            l4361 27B8  
                                                            l4353 27AC  
                                                            l4345 27A0  
                                                            l4337 2794  
                                                            l6041 26A2  
                                                            l4409 266C  
                                                            l4193 1344  
                                                            l4185 130E  
                                                            l4177 12D8  
                                                            l4169 12A2  
                                                            l4097 10BC  
                                                            l4089 1086  
                                                            l4441 2ED6  
                                                            l4513 15BE  
                                                            l4505 156C  
                                                            l5065 2E1C  
                                                            l5049 3800  
                                                            l4451 37D6  
                                                            l4267 354C  
                                                            l4435 3524  
                                                            l5163 3788  
                                                            l3467 2A50  
                                                            l3459 2A44  
                                                            l4283 383A  
                                                            l4291 36C6  
                                                            l6043 27E0  
                                                            l4195 134E  
                                                            l4187 1318  
                                                            l4179 12E2  
                                                            l4099 10C6  
                                                            l6035 2F0A  
                                                            l4507 15A2  
                                                            l5067 2E1E  
                                                            l5059 2DE2  
                                                            l5171 35D6  
                                                            l3379 3826  
                                                            l4269 355C  
                                                            l4541 2A80  
                                                            l4701 2DC2  
                                                            l4437 3534  
                                                            l5165 3790  
                                                            l3469 2A52  
                                                            l4285 3832  
                                                            l4365 27BE  
                                                            l4357 27B2  
                                                            l4349 27A6  
                                                            l4197 135E  
                                                            l4189 1328  
                                                            l6037 28B4  
                                                            l4461 3212  
                                                            l4453 31DA  
                                                            l4445 2EF6  
                                                            l4525 1614  
                                                            l4517 15DA  
                                                            l5271 2BFA  
                                                            l4543 2A94  
                                                            l4439 379A  
                                                            l5167 3794  
                                                            l4279 33AA  
                                                            l4551 2D0E  
                                                            l4287 36B0  
                                                            l4295 34FA  
                                                            l4199 1366  
                                                            l6039 19F0  
                                                            l4455 31EA  
                                                            l4711 1A52  
                                                            l4703 1A08  
                                                            l5175 35DC  
                                                            l5353 37E4  
                                                            l5265 2BA6  
                                                            l4545 2AA8  
                                                            l4537 2A60  
                                                            l5281 3080  
                                                            l5273 3050  
                                                            l4561 21C0  
                                                            l4553 212E  
                                                            l4289 36BA  
                                                            l4297 3508  
                                                            l4369 27C4  
                                                            l4393 262C  
                                                            l4473 31D4  
                                                            l4465 319C  
                                                            l4481 3650  
                                                            l4721 1ACA  
                                                            l4713 1A68  
                                                            l4705 1A18  
                                                            l4801 174E  
                                                            l5177 35E0  
                                                            l5169 35C2  
                                                            l5355 37F2  
                                                            l5267 2BF4  
                                                            l4547 2ABC  
                                                            l4539 2A70  
                                                            l5283 3090  
                                                            l5275 3064  
                                                            l5291 3038  
                                                            l4563 26E2  
                                                            l4555 213C  
                                                            l4299 350A  
                                                            l4379 27CA  
                                                            l4387 2618  
                                                            l4571 2832  
                                                            l2883 382A  
                                                            l4467 31AC  
                                                            l4731 1B2A  
                                                            l4723 1AE6  
                                                            l4715 1A78  
                                                            l4707 1A2C  
                                                            l4491 14B8  
                                                            l4811 1770  
                                                            l5179 35E4  
                                                            l5195 381A  
                                                            l5269 2BF8  
                                                            l5277 3068  
                                                            l5293 303A  
                                                            l5285 300A  
                                                            l5381 3632  
                                                            l4565 26FE  
                                                            l4549 2CD4  
                                                            l4557 213E  
                                                            l4397 263C  
                                                            l4389 261C  
                                                            l5701 1872  
                                                            l4581 286C  
                                                            l4573 2836  
                                                            l4477 3670  
                                                            l4741 1B60  
                                                            l4733 1B40  
                                                            l4725 1B0C  
                                                            l4717 1A88  
                                                            l4709 1A3C  
                                                            l4493 14D4  
                                                            l4485 311A  
                                                            l4821 17B4  
                                                            l4813 178E  
                                                            l5279 307E  
                                                            l5295 304A  
                                                            l5287 301E  
                                                            l5391 3646  
                                                            l5383 3636  
                                                            l4567 2732  
                                                            l4559 21BA  
                                                            l5711 18B6  
                                                            l4583 2870  
                                                            l4575 283A  
                                                            l4591 28A0  
                                                            l4743 1B62  
                                                            l4735 1B50  
                                                            l4727 1B16  
                                                            l4719 1AA4  
                                                            l4495 14E4  
                                                            l4487 3134  
                                                            l4831 17D8  
                                                            l4823 17C4  
                                                            l4815 1792  
                                                            l4807 175A  
                                                            l5289 3022  
                                                            l5393 364A  
                                                            l5385 363A  
                                                            l4569 2768  
                                                            l5721 18EC  
                                                            l5713 18BA  
                                                            l5705 188E  
                                                            l4585 2876  
                                                            l4577 2840  
                                                            l5801 223E  
                                                            l4841 3218  
                                                            l4745 1B66  
                                                            l4737 1B52  
                                                            l4729 1B1A  
                                                            l4497 151A  
                                                            l4489 1460  
                                                            l4761 2D58  
                                                            l4833 17DA  
                                                            l4817 1794  
                                                            l4921 2C2A  
                                                            l4691 2D88  
                                                            l4683 2F22  
                                                            l5387 363E  
                                                            l5379 362E  
                                                            l5731 1926  
                                                            l5723 18EE  
                                                            l5715 18CC  
                                                            l5707 189E  
                                                            l4587 2888  
                                                            l4579 2854  
                                                            l5811 2320  
                                                            l5803 2262  
                                                            l4843 3228  
                                                            l4747 1B8E  
                                                            l4739 1B56  
                                                            l4499 1550  
                                                            l4763 2D6C  
                                                            l4755 2D32  
                                                            l4819 17A4  
                                                            l4835 17EE  
                                                            l4771 34C0  
                                                            l4923 2C5A  
                                                            l4693 2D9C  
                                                            l4685 2F58  
                                                            l5389 3642  
                                                            l4861 3440  
                                                            l4853 341E  
                                                            l5661 2916  
                                                            l5653 28CE  
                                                            l5741 1960  
                                                            l5733 192C  
                                                            l5725 190A  
                                                            l5717 18D4  
                                                            l5709 18A6  
                                                            l5805 2270  
                                                            l5821 24B4  
                                                            l5813 2450  
                                                            l4749 1B98  
                                                            l4765 2D72  
                                                            l4757 2D48  
                                                            l4837 1804  
                                                            l4829 17C8  
                                                            l4781 16C0  
                                                            l4773 1650  
                                                            l4695 2DAE  
                                                            l4679 35EA  
                                                            l4687 2F5C  
                                                            l4871 210C  
                                                            l4863 2004  
                                                            l4855 342C  
                                                            l5663 2934  
                                                            l5655 2912  
                                                            l5671 3344  
                                                            l5751 199E  
                                                            l5743 1970  
                                                            l5735 192E  
                                                            l5727 190E  
                                                            l5719 18DA  
                                                            l5807 2298  
                                                            l5823 24C0  
                                                            l5815 2462  
                                                            l4759 2D56  
                                                            l4839 1820  
                                                            l4791 1706  
                                                            l4783 16D6  
                                                            l4767 34AA  
                                                            l4919 2C0C  
                                                            l4697 2DB2  
                                                            l4689 2F5E  
                                                            l4873 211C  
                                                            l4865 20B8  
                                                            l4857 342E  
                                                            l5665 2936  
                                                            l5681 336A  
                                                            l5753 19A6  
                                                            l5745 1978  
                                                            l5737 1944  
                                                            l5729 191A  
                                                            l5809 22E8  
                                                            l4849 3250  
                                                            l5825 24DE  
                                                            l5817 2484  
                                                            l4793 1724  
                                                            l4785 16DE  
                                                            l4769 34BC  
                                                            l5841 2FBE  
                                                            l4699 2DBE  
                                                            l4971 32D0  
                                                            l4867 20D8  
                                                            l4859 343A  
                                                            l5667 2946  
                                                            l5683 2B40  
                                                            l5747 1988  
                                                            l5755 19AC  
                                                            l5691 183C  
                                                            l5763 19DA  
                                                            l5771 2558  
                                                            l5827 24EC  
                                                            l5819 24A8  
                                                            l5835 3612  
                                                            l4795 1724  
                                                            l4787 16E0  
                                                            l4779 165C  
                                                            l5851 2FDA  
                                                            l5843 2FCE  
                                                            l4981 32F6  
                                                            l4973 32EC  
                                                            l4869 20E8  
                                                            l5669 2952  
                                                            l5677 3348  
                                                            l5685 2B92  
                                                            l5757 19BC  
                                                            l5749 198C  
                                                            l5693 1848  
                                                            l5773 2568  
                                                            l5781 1D34  
                                                            l5837 3618  
                                                            l5829 360C  
                                                            l4797 1734  
                                                            l4789 16F0  
                                                            l5861 2FFE  
                                                            l5853 2FEE  
                                                            l5845 2FD2  
                                                            l4983 32F8  
                                                            l5679 3368  
                                                            l5759 19BE  
                                                            l5695 1854  
                                                            l5687 1834  
                                                            l5775 2574  
                                                            l5791 1E06  
                                                            l5783 1D6E  
                                                            l5839 361C  
                                                            l4799 1744  
                                                            l5863 3002  
                                                            l5847 2FD6  
                                                            l4993 332A  
                                                            l4985 330A  
                                                            l5697 185A  
                                                            l5689 1838  
                                                            l5777 2588  
                                                            l5769 2532  
                                                            l5793 1E2A  
                                                            l5785 1DA4  
                                                            l5865 3006  
                                                            l5857 2FF4  
                                                            l5849 2FDA  
                                                            l4995 3330  
                                                            l4987 3326  
                                                            l4979 32F0  
                                                            l5699 185C  
                                                            l5779 25AC  
                                                            l5795 1E52  
                                                            l5787 1DB8  
                                                            l5859 2FF8  
                                                            l5875 3814  
                                                            l5891 3402  
                                                            l5883 33EA  
                                                            l4997 3332  
                                                            l5797 1E9A  
                                                            l5789 1DCA  
                                                            l5893 3412  
                                                            l5885 33EE  
                                                            l4999 2E82  
                                                            l5799 1EAE  
                                                            l5887 33F0  
                                                            l5889 33F2  
                                   ?_Button_Reading_Update_Helper 0019  
                                                            u2000 10D4  
                                                            u2001 10D0  
                                                            u2010 110A  
                                                            u2011 1106  
                                                            u2100 12F0  
                                                            u2020 1140  
                                                            u2101 12EC  
                                                            u2021 113C  
                                                            u2110 1326  
                                                            u2030 1176  
                                                            u2111 1322  
                                                            u2031 1172  
                                                            u2200 338E  
                                                            u2120 135C  
                                                            u2040 11AC  
                                                            u3000 2C2A  
                                                            u2201 338A  
                                                            u2121 1358  
                                                            u2041 11A8  
                                                            u3001 2C26  
                                                            u2210 3508  
                                                            u2130 1392  
                                                            u2050 11E2  
                                                            u3010 2C5A  
                                                            u2211 3504  
                                                            u2131 138E  
                                                            u2051 11DE  
                                                            u3011 2C56  
                                                            u2220 34E0  
                                                            u2140 13C8  
                                                            u2060 1218  
                                                            u2300 368C  
                                                            u2221 34DC  
                                                            u2141 13C4  
                                                            u2061 1214  
                                                            u2301 3686  
                                                            _LATA 000F82  
                                                            u2230 3534  
                                                            u3110 3308  
                                                            u2150 13FE  
                                                            u2070 124E  
                                                            u2310 366C  
                                                            _LATB 000F83  
                                                            u2231 3530  
                                                            u3111 3304  
                                                            u2151 13FA  
                                                            u2071 124A  
                                                            u2311 3666  
                                                            _LATC 000F84  
                                                            u3120 3342  
                                                            u2400 213C  
                                                            u2160 1434  
                                                            u2080 1284  
                                                            u4000 1DA4  
                                                            u3200 2E02  
                                                            u2320 3134  
                                                            _LATD 000F85  
                                                            u3121 333E  
                                                            u2401 2138  
                                                            u2161 1430  
                                                            u2081 1280  
                                                            u4001 1DA0  
                                                            u3201 2DFE  
                                                            u2321 3130  
                                                            _LATE 000F86  
                                                            u3130 2EA2  
                                                            u2410 216A  
                                                            u2090 12BA  
                                                            u4010 1E06  
                                                            u2306 368E  
                                                            u2330 14D4  
                                                            u3210 2E2E  
                                                            u3131 2E9E  
                                                            u2091 12B6  
                                                            u4011 1E02  
                                                            u2331 14D0  
                                                            u3211 2E2A  
                                                            u3140 2ED2  
                                                            u2420 21EC  
                                                            u2260 31EA  
                                                            u4100 24DE  
                                                            u2316 366E  
                                                            u2340 151A  
                                                            u3141 2ECE  
                                                            u2261 31E6  
                                                            u4101 24DA  
                                                            u2245 2EE2  
                                                            u2341 1516  
                                                            u2190 355C  
                                                            u2430 26FE  
                                                            u4030 1E9A  
                                                            u2270 320C  
                                                            u2246 2EE4  
                                                            u2350 1550  
                                                            u3150 34A8  
                                                            u2191 3558  
                                                            u3135 2E94  
                                                            u2431 26FA  
                                                            u2415 2160  
                                                            u4031 1E96  
                                                            u2271 3206  
                                                            u2255 2EF0  
                                                            u2351 154C  
                                                            u3151 34A4  
                                                            u2440 2852  
                                                            u4040 2262  
                                                            u4120 362C  
                                                            u2280 31AC  
                                                            u2256 2EF2  
                                                            u2600 1A52  
                                                            u3160 2C8A  
                                                            u2360 15A2  
                                                            u3400 35D6  
                                                            u3145 2EC4  
                                                            u2425 21E2  
                                                            u2441 284E  
                                                            u4041 225E  
                                                            u4121 3628  
                                                            u2281 31A8  
                                                            u2601 1A4E  
                                                            u3161 2C86  
                                                            u2361 159E  
                                                            u3401 35D2  
                                                            u2450 2864  
                                                            u2290 31CE  
                                                            u2610 1A68  
                                                            u3170 2CA0  
                                                            u2370 1610  
                                                            u4130 2FCE  
                                                            u2451 2860  
                                                            u2291 31C8  
                                                            u2611 1A64  
                                                            u3171 2C9C  
                                                            u2371 160C  
                                                            u4131 2FCA  
                                                            u2460 2886  
                                                            u4060 22E8  
                                                            u4028 1E30  
                                                            u2276 320E  
                                                            u2620 1A78  
                                                            u3180 2CB4  
                                                            u2380 164A  
                                                            u2700 16F0  
                                                            u4140 2FEE  
                                                            u2461 2882  
                                                            u4061 22E4  
                                                            u4029 1E4E  
                                                            u2621 1A74  
                                                            u3181 2CB0  
                                                            u2381 1646  
                                                            u2701 16EC  
                                                            u4141 2FEA  
                                                            u2470 2898  
                                                            u4118 251C  
                                                            u2630 1AA4  
                                                            u3190 2CD0  
                                                            u2710 1706  
                                                            u4207 1036  
                                                            u2471 2894  
                                                            u4119 2530  
                                                            u2631 1AA0  
                                                            u3191 2CCC  
                                                            u2711 1702  
                                                            u4080 2484  
                                                            u2296 31D0  
                                                            u2640 1AE6  
                                                            u2800 1820  
                                                            u2720 1724  
                                                            u4217 106C  
                                                            u4081 2480  
                                                            u2641 1AE2  
                                                            u2801 181C  
                                                            u2721 1720  
                                                            u1930 0F5A  
                                                            u4058 2276  
                                                            u2810 3228  
                                                            u4090 24A8  
                                                            u2730 1744  
                                                            u2395 2D1C  
                                                            u4307 1252  
                                                            u4227 10A2  
                                                            u1931 0F56  
                                                            u4059 2294  
                                                            u2811 3224  
                                                            u4091 24A4  
                                                            u2731 1740  
                                                            u2580 2DDC  
                                                            u1940 0F90  
                                                            u2820 324A  
                                                            u2740 176C  
                                                            u2581 2DD8  
                                                            u4317 1288  
                                                            u4237 10D8  
                                                            u1941 0F8C  
                                                            u2821 3244  
                                                            u2741 1768  
                                                            u2830 342C  
                                                            u1950 0FC6  
                                                            u4078 2326  
                                                            u2590 1A2C  
                                                            u2670 2D56  
                                                            u2750 178E  
                                                            u2831 3428  
                                                            u4407 3778  
                                                            u4327 12BE  
                                                            u4247 110E  
                                                            u1951 0FC2  
                                                            u4167 0F5E  
                                                            u4079 2344  
                                                            u2655 1B7A  
                                                            u2591 1A28  
                                                            u2671 2D52  
                                                            u2751 178A  
                                                            u2840 2030  
                                                            u1960 0FFC  
                                                            u2760 17A4  
                                                            u2680 34BC  
                                                            u4417 3780  
                                                            u4337 12F4  
                                                            u4257 1144  
                                                            u1961 0FF8  
                                                            u4177 0F94  
                                                            u2665 1B96  
                                                            u2761 17A0  
                                                            u2681 34B8  
                                                            u1970 1032  
                                                            u2826 324C  
                                                            u2666 1B98  
                                                            u2770 17B4  
                                                            u2690 16D6  
                                                            u4347 132A  
                                                            u4267 117A  
                                                            u1971 102E  
                                                            u4187 0FCA  
                                                            u2771 17B0  
                                                            u2691 16D2  
                                                            u2860 20D8  
                                                            u1980 1068  
                                                            u3900 18EC  
                                                            u2780 17EA  
                                                            _PMD0 000EDC  
                                                            u2861 20D4  
                                                            u2845 2026  
                                                            u4357 1360  
                                                            u4277 11B0  
                                                            u1981 1064  
                                                            u4197 1000  
                                                            u3901 18E8  
                                                            u2781 17E6  
                                                            _PMD1 000EDD  
                                                            u2870 210C  
                                                            u1990 109E  
                                                            u3910 1944  
                                                            u2790 1804  
                                                            _PMD2 000EDE  
                                                            u2871 2108  
                                                            u2855 208E  
                                                            u4367 1396  
                                                            u4287 11E6  
                                                            u1991 109A  
                                                            u3911 1940  
                                                            u2791 1800  
                                                            _PMD3 000EDF  
                                                            u2856 2098  
                                                            u3840 2946  
                                                            u3920 1970  
                                                            _PMD4 000EE0  
                                                            u2857 20A8  
                                                            u4377 13CC  
                                                            u4297 121C  
                                                            u3841 2942  
                                                            u3921 196C  
                                                            _PMD5 000EE1  
                                                            u3850 337A  
                                                            u3930 1988  
                                                            u4387 1402  
                                                            u3851 3376  
                                                            u3931 1984  
                                                            u3940 199E  
                                                            u3860 1872  
                                                            u4397 1438  
                                                            u3941 199A  
                                                            u3861 186E  
                                                            u3950 19BC  
                                                            u3870 189E  
                                                            u3951 19B8  
                                                            u3871 189A  
                                                            u3880 18B6  
                                                            u3960 2558  
                                                            u3881 18B2  
                                                            u3961 2554  
                                                            u3890 18CC  
                                                            u3970 25AC  
                                                            u3891 18C8  
                                                            u3971 25A8  
                                                            u3980 25D8  
                                                            u3990 1D6E  
                                                            u3991 1D6A  
                                                            u3985 25CE  
                                      Button_State_Pressed@button 00CE  
                                                            _WPUA 000F0B  
                                                            _WPUB 000F13  
                                                            _WPUC 000F1B  
                                                            _WPUD 000F20  
                                                            _WPUE 000F28  
                                             _sensor_medianBuffer 0060  
                                              _MTOUCH_needReburst 3826  
                                                            abs@a 0016  
                                     __size_of_getBrightnessLevel 00A0  
                                                            _main 33EA  
                            __size_of_MTOUCH_Button_InitializeAll 003A  
                                                            fsr2h 000FDA  
                                                            indf1 000FE7  
                                                            indf2 000FDF  
                                                            fsr1l 000FE1  
                                                            fsr2l 000FD9  
                                                            btemp 004A  
                            __size_of_MTOUCH_Sensor_InitializeAll 003A  
                                      __size_ofi2_TMR3_WriteTimer 0028  
                                                            prodh 000FF4  
                                                            prodl 000FF3  
                                                            start 00BA  
                              __size_ofi2_Sensor_scheduleNextScan 0196  
                                                 _TMR3_Initialize 300A  
                                       ??_Sensor_FrequencyHopping 002A  
                                      ??_TMR1_SetInterruptHandler 0019  
                                             ?_MTOUCH_needReburst 0001  
                                                    ___param_bank 000000  
                                                      _DiodeArray 0100  
                                    fp__Button_State_Initializing 0000  
                                                   ?_medianFilter 0016  
                                  __end_of_Sensor_autoCalibration 2004  
                                        ?_MTOUCH_Service_Mainloop 0001  
                                   __size_of_Button_State_Pressed 0108  
                                           fp__processButtonTouch 0000  
                                                           ??_abs 0018  
                          MTOUCH_Sensor_isSamplingComplete@sensor 0020  
                                     ?_Button_Baseline_Initialize 0019  
Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter 006C  
                                   ??_MTOUCH_Sensor_RawSample_Get 0018  
                                   Sensor_RawSample_Update@sensor 001E  
                                   Sensor_RawSample_Update@result 0020  
                                          ??_processButtonRelease 00C9  
                                  __size_of_OSCILLATOR_Initialize 0018  
                                   __end_of_OSCILLATOR_Initialize 3762  
                             __end_of_Sensor_isCalibratingAcqTime 3670  
                                  ?i2_Sensor_isCalibratingAcqTime 0001  
                                     _Sensor_isCalibratingAcqTime 3650  
                                                           _ADACC 000F6B  
                                                           _ADACQ 000F57  
                                                           _ADCAP 000F58  
                                                           _ADACT 000F51  
                                                           ?_main 0001  
                                                           _ADCLK 000F52  
                                                      _FillScreen 3344  
                                                           _ADCNT 000F62  
                                                           _ADPCH 000F5A  
                                                           _ADREF 000F53  
                                                           _ADPRE 000F59  
                                                           _ADRPT 000F61  
                                                 _TMR1_StartTimer 383A  
                                                           _T1CLK 000FD1  
                                                           _T1CON 000FCE  
                                                           _T3CLK 000FCB  
                                                           _T3CON 000FC8  
                                         __size_of_Button_Service 00E6  
                                      _ADCC_ADTI_InterruptHandler 00F3  
                                                           i2l241 2002  
                                                           i2l234 1D32  
                                                           i2l405 37B8  
                                                           i2l261 2368  
                                                           i2l246 2002  
                                                           i2l350 32CE  
                                                           i2l184 2F76  
                                                           i2l186 2F84  
                                                           i2l258 3812  
                                                           i2l188 2FBC  
                                                           i2l380 36EE  
                                                           i2l268 244A  
                                                           i2l383 372C  
                                                           i2l386 347C  
                                                           i2l389 370E  
                                                           i2l398 3290  
                                                           i2l926 35C0  
                                                           i2l881 384E  
                                                           i2l945 384C  
                                                           i2l875 33E8  
                                                           i2l939 3118  
                                                           i2l990 3598  
                                                           _OSCEN 000ED7  
                                                           _TMR1H 000FCD  
                                                           _TMR1L 000FCC  
                                                           _TMR3H 000FC7  
                                                           _TMR3L 000FC6  
                                                           _TRISA 000F87  
                                                           _TRISB 000F88  
                                                           _TRISC 000F89  
                                                           _TRISD 000F8A  
                                                           _TRISE 000F8B  
                                       TMR3_ReadTimer@readValHigh 001C  
                                                           i2_abs 315A  
                                 __size_of_Button_DefaultCallback 0002  
                                             i2_Sensor_SetTrisBit 2F70  
                               __size_of_TMR3_SetInterruptHandler 000E  
                                            ??_MTOUCH_needReburst 0016  
                                       ?_TMR3_SetInterruptHandler 0016  
                                                __end_of_TMR1_ISR 311A  
                                                __end_of_TMR3_ISR 30D8  
                                 __size_of_Sensor_DefaultCallback 0002  
                                  ??_TMR3_DefaultInterruptHandler 0001  
                           __end_of_MTOUCH_Sensor_Scan_Initialize 3826  
                          __size_of_MTOUCH_Sensor_Scan_Initialize 0006  
                                   _MTOUCH_Sensor_Scan_Initialize 3820  
                                         Sensor_setSampled@sensor 0001  
                                 __end_of_Sensor_scheduleNextScan 1B9E  
                                __size_of_Button_State_NotPressed 0188  
                                         __end_of_TMR1_Initialize 3096  
                                                           pclath 000FFA  
                                                           tablat 000FF5  
                                                 __end_of_reverse 2E82  
                                            _Sensor_Sampled_Reset 379A  
                                                           plusw2 000FDB  
                                                           ttemp5 004B  
                                                           ttemp6 004E  
                                                           ttemp7 0052  
                                                           status 000FD8  
                                __size_of_MTOUCH_Sensor_isEnabled 003E  
                                                           wtemp8 004B  
                                            __end_of_getColorMask 26E2  
                                     RGBLed_InitDiode@AdiodeArray 001D  
                                                 _TMR1_WriteTimer 34FA  
                                          ?i2_Sensor_isCalibrated 0001  
                                       __size_of_RGBLed_InitDiode 008A  
                                            ?i2_Sensor_SetTrisBit 0001  
                                    updateLED@replicateBrightness 00C2  
                                                  ??_medianFilter 0018  
                                                 __initialization 2AD0  
                                          _Sensor_setSamplePeriod 34AA  
                                                    __end_of_main 341E  
                                            _Sensor_setCalibrated 3710  
                                     ?_INTERRUPT_InterruptManager 0001  
                                __end_of_MTOUCH_Button_Initialize 2AD0  
                                                          ??_main 0035  
                                                FillScreen@AColor 00B0  
                                                 _TMR3_StartTimer 3836  
                                                   __activetblptr 000003  
                                         _MTOUCH_Sensor_Calibrate 354A  
                                           _TMR3_InterruptHandler 00ED  
                                         ??_Button_Reading_Update 001F  
                                                          ?i2_abs 0001  
                                __end_of_ADCC_ThresholdISR_mTouch 3814  
                            MTOUCH_Sensor_Sampled_ResetAll@sensor 0018  
                                        ?_Button_Deviation_Update 0016  
                                                    ?_MTOUCH_Tick 0001  
                                    Button_Baseline_Update@button 0016  
                                                          _ADACCH 000F6C  
                                                          _ADACCL 000F6B  
                                                          _ADCON0 000F5B  
                                                          _ADCON1 000F54  
                                                          _ADCON2 000F55  
                                                          _ADCON3 000F56  
                                                          _ADFLTR 000F6D  
                                                          _ADERRH 000F6A  
                                                          _ADERRL 000F69  
                            __size_of_MTOUCH_Sensor_RawSample_Get 0038  
                                                          _ADLTHH 000F66  
                                                          _ADLTHL 000F65  
                                                          _ADRESH 000F5F  
                                                          _ADRESL 000F5E  
                                                          _ADSTAT 000F60  
                                                          _ADUTHH 000F68  
                                                          _ADUTHL 000F67  
                                                          _ANSELA 000F0C  
                                                          _ANSELB 000F14  
                                                          _ANSELC 000F1C  
                                                          _ANSELD 000F21  
                                                          _ANSELE 000F29  
                                                          _T1GATE 000FD0  
                                                          _T1GCON 000FCF  
                                                          _T3GATE 000FCA  
                                                          _T3GCON 000FC9  
                                         TMR1_WriteTimer@timerVal 0016  
                                                          _ODCONA 000F0A  
                                                          _ODCONB 000F12  
                                                          _ODCONC 000F1A  
                                                          _ODCOND 000F1F  
                                                          _ODCONE 000F27  
                                                          i2l1003 30D6  
                                                          i2l1009 384A  
                                         __end_of_TMR3_Initialize 3050  
                                                          i2l1081 0056  
                                                          i2l1082 009E  
                                                          i2l1083 007A  
                                                          i2l2206 3190  
                                                          i2l1088 009E  
                                                          i2l2209 3198  
                                                          i2l5121 1BD2  
                                                          i2l5201 2360  
                                                          i2l5131 1C3A  
                                                          i2l5123 1BE8  
                                                          i2l5115 1B9E  
                                                          i2l5211 23B4  
                                                          i2l5203 236C  
                                                          i2l5141 1CB0  
                                                          i2l5133 1C60  
                                                          i2l5125 1BFE  
                                                          i2l5117 1BAE  
                                                          i2l5213 23F2  
                                                          i2l5205 237C  
                                                          i2l5221 2446  
                                                          i2l5301 35AA  
                                                          i2l5071 1EC8  
                                                          i2l5151 1CEC  
                                                          i2l5143 1CC0  
                                                          i2l5135 1C7C  
                                                          i2l5127 1C0E  
                                                          i2l5119 1BC2  
                                                          i2l5215 240A  
                                                          i2l5207 2398  
                                                          i2l5303 35AE  
                                                          i2l5311 3572  
                                                          i2l5073 1EE4  
                                                          i2l5081 1F48  
                                                          i2l5161 1D2E  
                                                          i2l5153 1CF6  
                                                          i2l5145 1CD6  
                                                          i2l5137 1CA2  
                                                          i2l5129 1C1E  
                                                          i2l5217 241E  
                                                          i2l5209 23A8  
                                                          i2l5305 35B2  
                                                          i2l5313 3580  
                                                          i2l5321 3590  
                                                          i2l5083 1F9E  
                                                          i2l5075 1F1A  
                                                          i2l5155 1CF8  
                                                          i2l5147 1CE6  
                                                          i2l5139 1CAC  
                                                          i2l5219 242E  
                                                          i2l5307 35B8  
                                                          i2l5323 3594  
                                                          i2l5315 3582  
                                                          i2l5093 1FEE  
                                                          i2l5085 1FAE  
                                                          i2l5077 1F38  
                                                          i2l5069 1EBC  
                                                          i2l6045 2FA6  
                                                          i2l5157 1CFC  
                                                          i2l5149 1CE8  
                                                          i2l5261 380A  
                                                          i2l5309 35BC  
                                                          i2l5317 3586  
                                                          i2l5087 1FBE  
                                                          i2l5159 1D24  
                                                          i2l5263 380E  
                                                          i2l5319 358A  
                                                          i2l5089 1FDA  
                                                          i2l5097 37AA  
                                                          i2l5361 33CE  
                                                          _INLVLA 000F08  
                                                          _INLVLB 000F10  
                                                          i2l5363 30D8  
                                                          i2l5371 3096  
                                           ?_Sensor_Sampled_Reset 0016  
                                                          _INLVLC 000F18  
                                                          _INLVLD 000F1D  
                                                          i2l5197 2346  
                                                          i2l5357 33B4  
                                                          i2l5365 30DC  
                                                          i2l5373 309A  
                                                          _INLVLE 000F25  
                                                          i2l4751 344E  
                                                          i2l5199 2350  
                                                          i2l5359 33B8  
                                                          i2l5367 30E8  
                                                          i2l5375 30A6  
                                                          i2l4753 3710  
                                                          i2l5297 359A  
                                                          i2l5369 30FE  
                                                          i2l5377 30BC  
                                                          i2l5299 35A8  
                                                          i2l5491 004E  
                                                          i2l4925 2F72  
                                                          i2l5493 0064  
                                                          i2l5485 0022  
                                                          i2l4951 36F0  
                                                          i2l4943 32CC  
                                                          i2l4935 3294  
                                                          i2l5495 0072  
                                                          i2l5487 0030  
                                                          i2l4937 32A4  
                                                          i2l4929 2F92  
                                                          i2l5497 0088  
                                                          i2l5489 0040  
                                                          i2l4963 328E  
                                                          i2l4955 3256  
                                                          i2l4947 36D0  
                                                          i2l5499 0096  
                                                          i2l4957 3266  
                                                          i2l4967 315A  
                                                          i2l4969 3174  
                                                          _OSCFRQ 000ED9  
                               MTOUCH_Button_InitializeAll@button 0021  
                                                          i2abs@a 0001  
                                  ??_Button_Reading_Update_Helper 001B  
                                                 _TMR3_WriteTimer 34D2  
                                           ??i2_Sensor_SetTrisBit 0002  
                                          _Button_DefaultCallback 3848  
                                 __end_of_MTOUCH_Service_Mainloop 300A  
                                             _Sensor_isCalibrated 3670  
                                     MTOUCH_Sensor_Service@sensor 000E  
                            __end_of_TMR1_DefaultInterruptHandler 384E  
                           __size_of_TMR1_DefaultInterruptHandler 0002  
                                    _TMR1_DefaultInterruptHandler 384C  
                                          _Sensor_DefaultCallback 3846  
                                                   _packet_sample 0035  
                                           ?_Sensor_setCalibrated 0001  
                                         __end_of_TMR1_StartTimer 383E  
                                               _ADCC_ThresholdISR 33B4  
                                    Sensor_DefaultCallback@sensor 0001  
                                       i2TMR3_WriteTimer@timerVal 0001  
                                                          _memcpy 2D88  
                                              ?_ADCC_ThresholdISR 0001  
                                                          clear_0 2B14  
                                                          clear_1 2B20  
                                                          clear_2 2B2C  
                                __end_of_MTOUCH_Button_ServiceAll 362E  
                                  __size_of_MTOUCH_Sensor_Service 0106  
                                   __end_of_MTOUCH_Sensor_Service 244C  
                                                     ?_FillScreen 00B0  
                                    Sensor_autoCalibration@sensor 0005  
                                  i2Sensor_scheduleNextScan@state 0007  
                                                 _ADCC_Initialize 2BA6  
                                              _processButtonTouch 2830  
                                                      _gColorMask 0073  
                                                  _PMD_Initialize 372E  
                                                    __pdataCOMRAM 0047  
                                         _MTOUCH_Sensor_SampleAll 35C2  
                                    Button_DefaultCallback@button 0001  
                                             ??_ADCC_ThresholdISR 0010  
                                                    __mediumconst 0000  
                                            ?_Sensor_isCalibrated 0016  
                                                          tblptrh 000FF7  
                                                          tblptrl 000FF6  
                                                          tblptru 000FF8  
                                        ?_Sensor_RawSample_Update 001E  
                                                       ??_reverse 0016  
                                         ?_Button_Baseline_Update 0016  
                                        __size_of_applicationTask 0006  
                        TMR3_SetInterruptHandler@InterruptHandler 0016  
                        TMR1_SetInterruptHandler@InterruptHandler 0016  
                    ADCC_SetADTIInterruptHandler@InterruptHandler 0016  
                              __size_of_Sensor_setCalibratAcqTime 0030  
                                             ?_processButtonTouch 0001  
                        __end_of_MTOUCH_Button_SetPressedCallback 37F2  
                       __size_of_MTOUCH_Button_SetPressedCallback 000E  
                              ??_MTOUCH_Button_SetPressedCallback 0019  
                               ?_MTOUCH_Button_SetPressedCallback 0016  
                                _MTOUCH_Button_SetPressedCallback 37E4  
                                         __end_of_TMR1_WriteTimer 3522  
                                 MTOUCH_Sensor_RawSample_Get@name 0018  
                                   __size_of_INTERRUPT_Initialize 0004  
                                                ?_TMR1_Initialize 0001  
                                               _SYSTEM_Initialize 362E  
                                                      __accesstop 0060  
                                         __end_of__initialization 2B32  
                             __size_of_Button_Baseline_Initialize 005E  
                                  ?_MTOUCH_Sensor_Scan_Initialize 0001  
                                              ?_SYSTEM_Initialize 0001  
                                             _Button_StateMachine 00DA  
                                                   ___rparam_used 000001  
                                      __end_of_Button_Tick_helper 2C70  
                                   MTOUCH_Sensor_Calibrate@sensor 0016  
                                       __end_of_ADCC_ThresholdISR 33EA  
                                                   __end_ofi2_abs 319A  
                                           RGBLed_SetDiode@AColor 00A6  
                               __size_of_MTOUCH_Sensor_isSampling 0004  
                                       ?_MTOUCH_Sensor_isSampling 0001  
                                                  __pcstackCOMRAM 0001  
                                                    __pidataBANK0 3762  
                     __end_of_MTOUCH_Button_SetNotPressedCallback 3800  
                    __size_of_MTOUCH_Button_SetNotPressedCallback 000E  
                           ??_MTOUCH_Button_SetNotPressedCallback 0019  
                            ?_MTOUCH_Button_SetNotPressedCallback 0016  
                             _MTOUCH_Button_SetNotPressedCallback 37F2  
                                            ??_processButtonTouch 0016  
                                             ??_SYSTEM_Initialize 0022  
                                         __end_of_TMR3_StartTimer 383A  
                                                       ?_TMR1_ISR 0001  
                                 fp__TMR1_DefaultInterruptHandler 0000  
                                   ?_TMR1_DefaultInterruptHandler 0001  
                                                       ?_TMR3_ISR 0001  
                                      __end_of_MTOUCH_Button_Tick 34AA  
                                                _gBrightnessLevel 00EC  
                                __end_of_MTOUCH_Sensor_Initialize 360C  
                                        __size_of_RGBLed_SetDiode 008C  
                                        __size_of_RGBLed_SetColor 052A  
                                       ??_MTOUCH_Sensor_Calibrate 0016  
                                __size_of_Sensor_scheduleNextScan 0196  
                                    ??i2_MTOUCH_Sensor_wasSampled 0001  
                                 __end_of_Button_Deviation_Update 212E  
                                          __end_of_PMD_Initialize 374A  
                                                  _Button_Service 244C  
                                      ?_Button_State_Initializing 00CE  
                                            Button_Service@button 00D7  
                                         fp__processButtonRelease 0000  
                                                         ??i2_abs 0003  
                                           ??_Sensor_isCalibrated 0018  
                                  __end_of_Button_Baseline_Update 223E  
                                         __size_of_TMR1_ReadTimer 0020  
       Sensor_FrequencyHopping_Autotune_Process@selectedFrequency 0028  
                                        _MTOUCH_Button_Initialize 2A5E  
                                            __end_of_medianFilter 1650  
                                         _Button_State_NotPressed 1D34  
                                   __size_of_MTOUCH_Sensor_Enable 0028  
                                      fp__Button_State_NotPressed 0000  
                                           __size_of_getColorMask 00CA  
                                       __end_of_SYSTEM_Initialize 3650  
                                               _lowpowerActivated 003D  
                                MTOUCH_Sensor_isCalibrated@sensor 0016  
                                          ??_Sensor_Sampled_Reset 0018  
                                         __end_of_TMR3_WriteTimer 34FA  
                                        _ADCC_ThresholdISR_mTouch 380A  
                                     fp__ADCC_ThresholdISR_mTouch 0000  
                              __size_ofi2_MTOUCH_Sensor_isEnabled 003E  
                                                      __pbssBANK0 0060  
                                                      __pbssBANK1 0100  
                                      ?i2_MTOUCH_Sensor_isEnabled 0001  
                                         _MTOUCH_Sensor_isEnabled 319A  
                                                ?_TMR3_Initialize 0001  
                                                      __pnvCOMRAM 0043  
                                             __size_of_FillScreen 0038  
                                      __end_of_mtouch_button_init 0F21  
                                                _RGBLed_InitDiode 2958  
                             __size_ofi2_MTOUCH_Sensor_wasSampled 003E  
                                          ??_Sensor_setCalibrated 0003  
                                         __size_of_TMR3_ReadTimer 0020  
                                         Sensor_SetTrisBit@sensor 0019  
                                __end_of_TMR3_SetInterruptHandler 37C8  
                                                ?_TMR1_StartTimer 0001  
                                                      ??_TMR1_ISR 0003  
                                                      ??_TMR3_ISR 0003  
                                         __end_of_ADCC_Initialize 2C0C  
                                  MTOUCH_Sensor_wasSampled@sensor 0016  
                                i2MTOUCH_Sensor_wasSampled@sensor 0001  
                                                         _ADFLTRH 000F6E  
                                                         _ADFLTRL 000F6D  
                                          __end_of_Button_Service 2532  
                                                         ?_memcpy 0016  
                                                         _ADPREVH 000F5D  
                                                         _ADPREVL 000F5C  
                             __end_of_MTOUCH_Button_InitializeAll 3344  
                                     _MTOUCH_Button_InitializeAll 330A  
                            __end_of_ADCC_SetADTIInterruptHandler 37E4  
                           __size_of_ADCC_SetADTIInterruptHandler 000E  
                                    _ADCC_SetADTIInterruptHandler 37D6  
                                                         _ADSTPTH 000F64  
                                                         _ADSTPTL 000F63  
                             __end_of_MTOUCH_Sensor_InitializeAll 330A  
                                     _MTOUCH_Sensor_InitializeAll 32D0  
                                       ??_MTOUCH_Sensor_SampleAll 002A  
                                                 ?_PMD_Initialize 0001  
                                 __end_of_Sensor_RawSample_Update 2D88  
                                         __size_of_TMR1_StopTimer 0004  
                               __size_of_MTOUCH_Sensor_wasSampled 003E  
                                                    _getColorMask 2618  
                                       ?_MTOUCH_Sensor_wasSampled 0001  
                                                  updateLED@color 00C5  
                                       Sensor_isCalibrated@sensor 0016  
                               __end_of_Button_State_Initializing 2618  
                                        _MTOUCH_Button_ServiceAll 360C  
                                                         _OSCCON1 000ED3  
                                                         _OSCCON3 000ED5  
                                              __size_of_updateLED 006A  
                                                         _OSCTUNE 000ED8  
                                __size_of_MTOUCH_Service_Mainloop 004C  
                                                         _SLRCONA 000F09  
                                                         _SLRCONB 000F11  
                                                         _SLRCONC 000F19  
                                                         _SLRCOND 000F1E  
                                                         _SLRCONE 000F26  
                                    __end_of_Button_State_Pressed 2346  
                                      i2Sensor_SetTrisBit@TrisBit 0001  
                                Button_Baseline_Initialize@button 0019  
                                 Sensor_setCalibratAcqTime@sensor 0001  
                                      __end_of_getBrightnessLevel 2830  
                                                ?_TMR1_WriteTimer 0016  
                                            __size_of_MTOUCH_Tick 0006  
                            __size_of_Sensor_isCalibratingAcqTime 0020  
                                 ??i2_Sensor_isCalibratingAcqTime 0003  
                                         ??i2_Sensor_isCalibrated 0003  
                               __end_ofi2_MTOUCH_Sensor_isEnabled 32D0  
                                         __size_of_TMR3_StopTimer 0004  
                                               ??_applicationTask 0035  
                                         ?_Sensor_setSamplePeriod 0001  
                                                      _freq_index 003C  
                                                         __Hparam 0000  
                                               _Sensor_SetTrisBit 2ED4  
                                      __size_of_ADCC_ThresholdISR 0036  
                                                         __Lparam 0000  
                                       fp__Button_DefaultCallback 0000  
                                              ?_Sensor_SetTrisBit 0016  
                                       fp__Sensor_DefaultCallback 0000  
                                                ?_TMR3_StartTimer 0001  
                                  MTOUCH_Button_Initialize@button 0018  
                                                    __psmallconst 0F00  
                                                 ?_Button_Service 0001  
                                                         __pcinit 2AD0  
                                                 __size_of_memcpy 0056  
                                                         __ramtop 0F00  
                                        TMR1_ReadTimer@readValLow 001D  
                                                 _scanInterrupted 003E  
                                                         __ptext0 33EA  
                                                         __ptext1 3814  
                                                         __ptext2 2FBE  
                                                         __ptext3 3826  
                                                         __ptext4 381A  
                                                         __ptext5 347E  
                                                         __ptext6 2C0C  
                                                         __ptext7 35C2  
                                                         __ptext8 3800  
                                                         __ptext9 34AA  
                                     Button_Reading_Update@button 001D  
                                             ??_Sensor_SetTrisBit 0017  
                                   __size_of_processButtonRelease 01D8  
                                  ??_TMR1_DefaultInterruptHandler 0001  
                                   ?_ADCC_SetADTIInterruptHandler 0016  
                                       TMR1_ReadTimer@readValHigh 001C  
                                                       _T1CONbits 000FCE  
                                        _MTOUCH_Sensor_Initialize 35E8  
                                           _OSCILLATOR_Initialize 374A  
                                                    __size_of_abs 0040  
                                       RGBLed_InitDiode@ARGBColor 0019  
                                       ??_Button_State_NotPressed 00D0  
                                                       _T3CONbits 000FC8  
                                               ??_RGBLed_SetDiode 00AC  
                               __size_of_TMR1_SetInterruptHandler 000E  
                                               ??_RGBLed_SetColor 0018  
                                        ??_PIN_MANAGER_Initialize 0016  
                                       ?_TMR1_SetInterruptHandler 0016  
                                  __size_of_Button_Reading_Update 0030  
                                     __size_of_MTOUCH_needReburst 0004  
                                                         _reverse 2E30  
                                   __end_of_Button_Reading_Update 344E  
                               MTOUCH_Sensor_InitializeAll@sensor 0021  
                                                _callback_sampled 00E9  
                                       ??_MTOUCH_Sensor_isEnabled 0016  
                                      __size_of_SYSTEM_Initialize 0022  
                                                _callback_pressed 00E3  
                                  MTOUCH_Sensor_Initialize@sensor 0018  
                                   Sensor_scheduleNextScan@sensor 001E  
                                 i2Sensor_scheduleNextScan@sensor 0009  
                                            end_of_initialization 2B32  
                                                ?_TMR3_WriteTimer 0016  
                                         ?_Button_DefaultCallback 0001  
                                                         memcpy@d 001C  
                                                         memcpy@n 001A  
                                                         memcpy@s 001E  
                                  __end_of_Sensor_setSamplePeriod 34D2  
                                      __end_of_mtouch_sensor_init 0F33  
                                        ?_Sensor_FrequencyHopping 0001  
                                       __end_of_Sensor_SetTrisBit 2F22  
                                         ?_Sensor_DefaultCallback 0001  
                                __size_of_Button_Deviation_Update 012A  
                                    ??_MTOUCH_Sensor_isCalibrated 0016  
                                               __end_of_updateLED 2BA6  
                             __end_of_MTOUCH_Sensor_RawSample_Get 33B4  
                                     _MTOUCH_Sensor_RawSample_Get 337C  
                                           TMR3_ReadTimer@readVal 001A  
                                                         postdec1 000FE5  
                                                         postdec2 000FDD  
                                                         postinc0 000FEE  
                                                         postinc1 000FE6  
                                                         postinc2 000FDE  
                                      ?i2_Sensor_scheduleNextScan 0001  
                                         _Sensor_scheduleNextScan 1A08  
                                             _mtouch_request_init 0041  
                                                ?_ADCC_Initialize 0001  
                              __end_ofi2_MTOUCH_Sensor_wasSampled 3292  
                                      i2_MTOUCH_Sensor_wasSampled 3254  
                  Sensor_FrequencyHopping_Autotune_Process@sensor 0027  
                                                    ??_FillScreen 0034  
                                        _TMR3_SetInterruptHandler 37BA  
                                           __size_of_medianFilter 01F2  
                                                  _TMR1_ReadTimer 36B0  
                                   Button_Deviation_Update@button 0016  
                                                       _TRISAbits 000F87  
                                                       _TRISDbits 000F8A  
                        MTOUCH_Button_SetPressedCallback@callback 0016  
                                   MTOUCH_Sensor_isEnabled@sensor 0016  
                                 i2MTOUCH_Sensor_isEnabled@sensor 0001  
                                      MTOUCH_Sensor_Enable@sensor 0016  
                                             _callback_notPressed 0047  
                                __end_of_MTOUCH_Sensor_isSampling 382E  
                             __size_of_MTOUCH_Sensor_isCalibrated 003E  
                                  __end_of_Button_DefaultCallback 384A  
                                     __end_ofi2_Sensor_SetTrisBit 2FBE  
                                      Sensor_setCalibrated@sensor 0001  
                                  __end_of_Sensor_DefaultCallback 3848  
                                       _gWaitingForButton1Release 0070  
                                        ??_Sensor_autoCalibration 0007  
                                       _gWaitingForButton2Release 006F  
                                              medianFilter@sensor 001D  
                                              __end_of_FillScreen 337C  
                                __size_of_Sensor_RawSample_Update 0056  
                           __end_ofi2_Sensor_isCalibratingAcqTime 3710  
                          __size_ofi2_Sensor_isCalibratingAcqTime 0020  
                                   i2_Sensor_isCalibratingAcqTime 36F0  
                                                  _TMR3_ReadTimer 3690  
                                                    _medianFilter 145E  
                                    __end_of_INTERRUPT_Initialize 3842  
                                            _Button_State_Pressed 223E  
                                  ??_ADCC_DefaultInterruptHandler 0001  
                                       i2TMR1_WriteTimer@timerVal 0001  
                           __end_of_MTOUCH_Sensor_ADCC_Initialize 2F70  
                          __size_of_MTOUCH_Sensor_ADCC_Initialize 004E  
                                   _MTOUCH_Sensor_ADCC_Initialize 2F22  
                               __end_ofi2_Sensor_scheduleNextScan 1D34  
                                      ??_MTOUCH_Button_Initialize 0017  
                     MTOUCH_Button_SetNotPressedCallback@callback 0016  
                __end_of_Sensor_FrequencyHopping_Autotune_Process 1830  
               __size_of_Sensor_FrequencyHopping_Autotune_Process 01E0  
                      ??_Sensor_FrequencyHopping_Autotune_Process 001A  
                       ?_Sensor_FrequencyHopping_Autotune_Process 0001  
                        _Sensor_FrequencyHopping_Autotune_Process 1650  
                                 ??_MTOUCH_Sensor_Scan_Initialize 0019  
                                                   __pidataCOMRAM 3842  
                                               __size_of_TMR1_ISR 0042  
                                               __size_of_TMR3_ISR 0042  
                                                  _TMR1_StopTimer 3832  
                                              _Button_Tick_helper 2C0C  
                                                  __end_of_memcpy 2DDE  
                                          ?_OSCILLATOR_Initialize 0001  
                                          __end_of_TMR1_ReadTimer 36D0  
                                             MTOUCH_Button_Tick@i 001A  
                                      ??_ADCC_ThresholdISR_mTouch 0010  
                                     ??_Button_State_Initializing 00D0  
                                        __end_of_RGBLed_InitDiode 29E2  
                                           _MTOUCH_Sensor_Service 2346  
                                             start_initialization 2AD0  
                                         _MTOUCH_Service_Mainloop 2FBE  
                                 __size_of_PIN_MANAGER_Initialize 007C  
                                              _MTOUCH_Button_Tick 347E  
                                             ?_Button_Tick_helper 0016  
                                                     __end_of_abs 315A  
                                 __end_of_Sensor_FrequencyHopping 380A  
                                     ??i2_MTOUCH_Sensor_isEnabled 0001  
                                             ?_MTOUCH_Button_Tick 0001  
                                 Button_State_Initializing@button 00CE  
                                                  _TMR3_StopTimer 382E  
                                          __end_of_TMR3_ReadTimer 36B0  
                                      __size_of_Sensor_SetTrisBit 004E  
                                         medianFilter@bufferIndex 0039  
                                __end_of_MTOUCH_Sensor_wasSampled 3216  
                                       ??_Sensor_scheduleNextScan 001A  
                                            ??_Button_Tick_helper 0018  
                                        __size_of_TMR1_Initialize 0046  
                                    __end_of_MTOUCH_Sensor_Enable 354A  
                                                ??_PMD_Initialize 0016  
             Sensor_FrequencyHopping_Autotune_Process@maxVariance 0025  
                                           ?_Button_State_Pressed 00CE  
                                     __size_of_processButtonTouch 009C  
                                      ??_MTOUCH_Button_ServiceAll 0035  
                                          __end_of_TMR1_StopTimer 3836  
                                      RGBLed_SetColor@AdiodeArray 0016  
                                                     __pdataBANK0 00DA  
                                                        ??_memcpy 001C  
                                     __end_of_Sensor_isCalibrated 3690  
                                    ??_Button_Baseline_Initialize 001B  
                                            ??_MTOUCH_Button_Tick 001A  
                                              _mtouch_button_init 0F01  
                                      Sensor_Sampled_Reset@sensor 0016  
                                                 ?_TMR1_ReadTimer 0016  
                                    ?_Sensor_isCalibratingAcqTime 0016  
                                                     __pbssCOMRAM 0035  
                                                   _sampling_flag 003F  
                                                   __pcstackBANK0 00A6  
                                                 _applicationTask 3814  
                        __end_of_MTOUCH_Sensor_isSamplingComplete 2CD4  
                       __size_of_MTOUCH_Sensor_isSamplingComplete 0064  
                              ??_MTOUCH_Sensor_isSamplingComplete 0020  
                               ?_MTOUCH_Sensor_isSamplingComplete 0001  
                                _MTOUCH_Sensor_isSamplingComplete 2C70  
                                        Sensor_SetTrisBit@TrisBit 0016  
                                  MTOUCH_Button_ServiceAll@button 00D9  
                                          __end_of_TMR3_StopTimer 3832  
                                   __size_of_Sensor_Sampled_Reset 0010  
                                         _Button_Deviation_Update 2004  
                                      ?_Sensor_setCalibratAcqTime 0001  
                                  __size_ofi2_Sensor_isCalibrated 0020  
                                                 ?_TMR3_ReadTimer 0016  
                                   __end_ofi2_Sensor_isCalibrated 36F0  
                                       _Button_State_Initializing 2532  
                                        _MTOUCH_Sensor_isSampling 382A  
                              __end_of_MTOUCH_Sensor_isCalibrated 3254  
                                      _MTOUCH_Sensor_isCalibrated 3216  
                                                       __pnvBANK0 00ED  
                                 __size_of_Sensor_autoCalibration 0148  
                                               _Sensor_setSampled 37AA  
                                         RGBLed_SetColor@tempData 0018  
                                          _PIN_MANAGER_Initialize 29E2  
                                                ??_Button_Service 00D5  
                                        ?_MTOUCH_Sensor_Calibrate 0001  
                                        __size_of_TMR3_Initialize 0046  
                                              ?_Sensor_setSampled 0001  
                                              _getBrightnessLevel 2790  
                                                       __pintcode 0008  
                              Button_Reading_Update_Helper@button 0019  
                                __end_of_TMR1_SetInterruptHandler 37D6  
                                      ??_MTOUCH_Sensor_Initialize 0018  
                                   __size_of_Sensor_setCalibrated 001E  
                                                 _RGBLed_SetDiode 28CC  
                                                       __ptext100 36F0  
                                                       __ptext101 3710  
                                                       __ptext102 344E  
                                                       __ptext103 0000  
                                                 _RGBLed_SetColor 0F34  
                                                 ?_TMR1_StopTimer 0001  
                                       i2_MTOUCH_Sensor_isEnabled 3292  
                                    ??_INTERRUPT_InterruptManager 0010  
                                             ??_Sensor_setSampled 0003  
                                             ?_getBrightnessLevel 0001  
                                       ??_MTOUCH_Service_Mainloop 0035  
                                          ?_MTOUCH_Sensor_Service 0001  
                                                     __smallconst 0F00  
                                  ?_MTOUCH_Sensor_ADCC_Initialize 0001  
                                        __size_of_TMR1_StartTimer 0004  
                                                  __size_ofi2_abs 0040  
                    __end_of_MTOUCH_Sensor_postAcquisitionProcess 2E30  
                   __size_of_MTOUCH_Sensor_postAcquisitionProcess 0052  
                          ??_MTOUCH_Sensor_postAcquisitionProcess 0022  
                           ?_MTOUCH_Sensor_postAcquisitionProcess 0001  
                            _MTOUCH_Sensor_postAcquisitionProcess 2DDE  
                                   ??_Sensor_isCalibratingAcqTime 0018  
                                                   ??_MTOUCH_Tick 001B  
                                                        ?_reverse 0001  
                                       i2Sensor_SetTrisBit@sensor 0004  
                                            _INTERRUPT_Initialize 383E  
                                                 ?_TMR3_StopTimer 0001  
                                               _RGBLed_ResetDelay 3776  
                                    __end_of_processButtonRelease 1A08  
                                            ??_getBrightnessLevel 0016  
                                              updateLED@colorMask 00B4  
                                       __end_of_Sensor_setSampled 37BA  
                                                        _LATAbits 000F82  
                                                        _LATBbits 000F83  
                                              ?_RGBLed_ResetDelay 0001  
                                                        _LATDbits 000F85  
                                         _Sensor_RawSample_Update 2D32  
                               __end_of_Sensor_setCalibratAcqTime 347E  
                                                        _PIE1bits 000EBE  
                                                        _PIE4bits 000EC1  
                                        __size_of_TMR1_WriteTimer 0028  
                                                        i2u310_40 3174  
                                                        i2u310_41 3170  
                                                        i2u302_45 2F7E  
                                                        i2u302_46 2F80  
                             __size_of_INTERRUPT_InterruptManager 00B2  
                                                        i2u303_45 2F8C  
                                                        i2u303_46 2F8E  
                                                        i2u304_40 32A4  
                                                        i2u304_41 32A0  
                                                        i2u305_40 32C6  
                                                        i2u305_41 32C0  
                                                        i2u305_46 32C8  
                                                        i2u322_40 1EE4  
                                                        i2u306_40 36EC  
                                                        i2u322_41 1EE0  
                                                        i2u306_41 36E6  
                                                        i2u306_46 36EE  
                                                        i2u307_40 370C  
                                                        i2u307_41 3706  
                                                        i2u323_45 1EF8  
                                                        i2u307_46 370E  
                                                        i2u324_40 1F1A  
                                                        i2u308_40 3266  
                                                        i2u332_40 1BC2  
                                                        i2u324_41 1F16  
                                                        i2u308_41 3262  
                                                        i2u332_41 1BBE  
                                  processButtonRelease@timerCount 00CC  
                                                        i2u325_40 1F38  
                                                        i2u309_40 3288  
                                                        i2u333_40 1BE8  
                                                        i2u325_41 1F34  
                                                        i2u309_41 3282  
                                                        i2u333_41 1BE4  
                                                        i2u309_46 328A  
                                                        i2u326_40 1F9E  
                                                        i2u334_40 1BFE  
                                                        i2u342_40 2360  
                                                        i2u326_41 1F9A  
                                                        i2u334_41 1BFA  
                                                        i2u342_41 235C  
                                                        i2u327_40 1FDA  
                                                        i2u335_40 1C0E  
                                                        i2u343_40 2398  
                                                        i2u327_41 1FD6  
                                                        i2u335_41 1C0A  
                                                        i2u343_41 2394  
                                                        i2u336_40 1C3A  
                                                        i2u344_40 23F2  
                                                        i2u336_41 1C36  
                                                        i2u344_41 23EE  
                                                        i2u337_40 1C7C  
                                                        i2u345_40 242E  
                                                        i2u360_48 30C2  
                                                        i2u337_41 1C78  
                                                        i2u345_41 242A  
                                                        i2u360_49 30D6  
                                                        _PIR1bits 000EC6  
                                                        i2u338_45 1D10  
                                                        i2u355_40 33CE  
                                                        i2u355_41 33CA  
                                                        i2u339_45 1D2C  
                                                        i2u339_46 1D2E  
                                                        i2u348_40 35A8  
                                                        i2u380_40 0064  
                                                        i2u348_41 35A4  
                                                        i2u380_41 0060  
                                                        i2u356_48 33D4  
                                                        i2u357_40 30FE  
                                                        i2u349_40 3580  
                                                        i2u381_40 0072  
                                                        i2u356_49 33E8  
                                                        i2u357_41 30FA  
                                                        i2u349_41 357C  
                                                        i2u381_41 006E  
                                                        i2u382_40 0088  
                                                        i2u382_41 0084  
                                                        i2u358_48 3104  
                                                        i2u359_40 30BC  
                                                        i2u383_40 0096  
                                                        i2u358_49 3118  
                                                        i2u359_41 30B8  
                                                        i2u383_41 0092  
                                                        _PIR4bits 000EC9  
                                      ??_TMR3_SetInterruptHandler 0019  
                                                        i2u377_40 0030  
                                                        i2u377_41 002C  
                                                        i2u378_40 0040  
                                                        i2u378_41 003C  
                                                        i2u379_40 004E  
                                                        i2u379_41 004A  
                                          ??_Button_State_Pressed 00D0  
                                             ??_RGBLed_ResetDelay 0016  
                          __end_of_MTOUCH_Sensor_Sampled_ResetAll 2ED4  
                         __size_of_MTOUCH_Sensor_Sampled_ResetAll 0052  
                                  _MTOUCH_Sensor_Sampled_ResetAll 2E82  
                                        ?_MTOUCH_Sensor_SampleAll 0001  
                                                        _TMR1_ISR 30D8  
                                                        _TMR3_ISR 3096  
                                              _mtouch_sensor_init 0F21  
                                     ??i2_Sensor_scheduleNextScan 0005  
                                     ?i2_MTOUCH_Sensor_wasSampled 0001  
                                        _MTOUCH_Sensor_wasSampled 31D8  
                                              _mtouch_time_toScan 0042  
                                __size_of_Sensor_FrequencyHopping 000A  
                                                       _updateLED 2B3C  
                                        ??_Button_Baseline_Update 0018  
                                         __end_of_applicationTask 381A  
                                               ??_TMR1_Initialize 0019  
          Sensor_FrequencyHopping_Autotune_Process@frequencyIndex 0029  
                                        TMR3_ReadTimer@readValLow 001D  
                                                      _ADCON0bits 000F5B  
                                                      _ADCON1bits 000F54  
                                                      _ADCON2bits 000F55  
                                                      _ADCON3bits 000F56  
                                          _Sensor_autoCalibration 1EBC  
                                      __end_of_MTOUCH_needReburst 382A  
                                        __size_of_TMR3_StartTimer 0004  
                                       __end_of_RGBLed_ResetDelay 3788  
                                            _MTOUCH_Sensor_Enable 3522  
                                                       copy_data0 2AE4  
                                        Button_Tick_helper@button 0016  
                                       ??_Button_Deviation_Update 0018  
                                           ?_INTERRUPT_Initialize 0001  
                                           _Button_Reading_Update 341E  
                                             __end_of_MTOUCH_Tick 3820  
                                               _MTOUCH_Initialize 3788  
                                 __end_of_MTOUCH_Sensor_Calibrate 3572  
                                         __end_of_RGBLed_SetDiode 2958  
                                         __end_of_RGBLed_SetColor 145E  
                                                      _ADSTATbits 000F60  
                                              ?_MTOUCH_Initialize 0001  
                                                        __Hrparam 0000  
                                        __size_of_TMR3_WriteTimer 0028  
                                               i2_TMR1_WriteTimer 359A  
                                                       memcpy@tmp 0020  
                                                        __Lrparam 0000  
                                           TMR1_ReadTimer@readVal 001A  
                                                    _sample_delay 003B  
                                              ?i2_TMR1_WriteTimer 0001  
                        MTOUCH_Sensor_postAcquisitionProcess@name 0022  
                                         ??_OSCILLATOR_Initialize 0016  
                              __end_of_Button_Baseline_Initialize 2D32  
                                      _Button_Baseline_Initialize 2CD4  
                                             ??_MTOUCH_Initialize 0022  
                                                      ?_updateLED 00B4  
                                        processButtonTouch@button 0018  
                                        ?_Button_State_NotPressed 00CE  
                                                 _gButton1Pressed 0072  
                                             RGBLed_SetDiode@ANum 0032  
                                               ??_TMR3_Initialize 0019  
                                        _TMR1_SetInterruptHandler 37C8  
                                                 _gButton2Pressed 0071  
                                     i2Sensor_isCalibrated@sensor 0001  
                                              Button_Service@name 00D6  
                                             ??i2_TMR1_WriteTimer 0003  
                                           _TMR1_InterruptHandler 00F0  
                                        ?_MTOUCH_Sensor_isEnabled 0001  
                                        __size_of_ADCC_Initialize 0066  
                                               ?_RGBLed_InitDiode 0019  
                                           ?_MTOUCH_Sensor_Enable 0001  
                                                        __ptext10 1650  
                                                        __ptext11 311A  
                                                        __ptext20 2ED4  
                                                        __ptext12 2DDE  
                                                        __ptext21 319A  
                                                        __ptext13 2D32  
                                                      _T1GCONbits 000FCF  
                                                        __ptext30 2830  
                                                        __ptext22 382A  
                                                        __ptext14 145E  
                                                        __ptext31 3848  
                                                        __ptext23 360C  
                                                        __ptext15 3846  
                                                        __ptext40 2618  
                                                        __ptext32 1830  
                                                        __ptext24 244C  
                                                        __ptext16 2C70  
                                                        __ptext41 2790  
                                                        __ptext33 2B3C  
                                                        __ptext25 31D8  
                                                        __ptext17 1A08  
                                                        __ptext50 212E  
                                                        __ptext42 34D2  
                                                        __ptext34 3344  
                                                        __ptext26 3216  
                                                        __ptext18 3650  
                                                        __ptext51 2CD4  
                                                        __ptext43 382E  
                                                        __ptext35 28CC  
                                                        __ptext27 1D34  
                                                        __ptext19 3670  
                                                        __ptext60 37C8  
                                                        __ptext52 341E  
                                                        __ptext44 3690  
                                                        __ptext36 0F34  
                                                        __ptext28 2532  
                                                        __ptext61 372E  
                                                        __ptext53 26E2  
                                                        __ptext45 34FA  
                                                        __ptext37 3776  
                                                        __ptext29 223E  
                                                        __ptext70 379A  
                                                        __ptext62 29E2  
                                                        __ptext54 337C  
                                                        __ptext46 3832  
                                                        __ptext38 2958  
                                                        __ptext71 3522  
                                                        __ptext63 374A  
                                                        __ptext55 2004  
                                                        __ptext47 36B0  
                                                        __ptext39 2E30  
                                                        __ptext80 37F2  
                                                        __ptext72 330A  
                                                        __ptext64 3788  
                                                        __ptext56 362E  
                                                        __ptext48 3836  
                                                        __ptext73 2D88  
                                                        __ptext65 3820  
                                                        __ptext57 300A  
                                                        __ptext49 383A  
                                                        __ptext90 380A  
                                                        __ptext82 3096  
                                                        __ptext74 2A5E  
                                                        __ptext66 2F22  
                                                        __ptext58 37BA  
                                                        __ptext91 2346  
                                                        __ptext83 3572  
                                                        __ptext75 354A  
                                                        __ptext67 2E82  
                                                        __ptext59 3050  
                                                        __ptext92 1B9E  
                                                        __ptext84 384A  
                                                        __ptext76 383E  
                                                        __ptext68 32D0  
                                                        __ptext93 36D0  
                                                        __ptext85 30D8  
                                                        __ptext77 2BA6  
                                                        __ptext69 35E8  
                                                        __ptext94 2F70  
                                                        __ptext86 359A  
                                                        __ptext78 37D6  
                                                        __ptext95 3254  
                                                        __ptext87 384C  
                                                        __ptext79 37E4  
                                                        __ptext96 3292  
                                                        __ptext88 33B4  
                                                        __ptext97 37AA  
                                                        __ptext89 384E  
                                                        __ptext98 1EBC  
                                                        __ptext99 315A  
                                                __size_of_reverse 0052  
                                              ??_RGBLed_InitDiode 001F  
                                       i2_Sensor_scheduleNextScan 1B9E  
                                               ??_TMR1_StartTimer 0016  
                                                      _T3GCONbits 000FC9  
                                       __end_of_MTOUCH_Initialize 379A  
                                       ??_Sensor_RawSample_Update 0020  
                                         TMR3_WriteTimer@timerVal 0016  
                                                        _freq_hop 00E6  
                                      __size_of_Sensor_setSampled 0010  
                                               _currentScanSensor 0040  
                                                RGBLed_SetDiode@i 0033  
                                                   __size_of_main 0034  
                                       __end_ofi2_TMR1_WriteTimer 35C2  
                                 __end_of_MTOUCH_Sensor_SampleAll 35E8  
                                      Sensor_autoCalibration@name 000B  
                                    __size_ofi2_Sensor_SetTrisBit 004E  
                                               i2_TMR3_WriteTimer 3572  
                                        updateLED@brightnessLevel 00C8  
                                                ??_TMR1_ReadTimer 0018  
                                                        int$flags 004A  
                                              ?i2_TMR3_WriteTimer 0001  
                              __size_of_Button_State_Initializing 00E6  
                              __end_of_INTERRUPT_InterruptManager 00BA  
                                      _INTERRUPT_InterruptManager 0008  
                                               ??_TMR1_WriteTimer 0018  
                            __end_of_TMR3_DefaultInterruptHandler 384C  
                           __size_of_TMR3_DefaultInterruptHandler 0002  
                                    _TMR3_DefaultInterruptHandler 384A  
                                 __size_of_Button_Baseline_Update 0110  
                                    ?_MTOUCH_Button_InitializeAll 0001  
                                                ?_applicationTask 0001  
                                      RGBLed_SetDiode@AdiodeArray 00AA  
                                    ?_MTOUCH_Sensor_InitializeAll 0001  
                                                   ?_getColorMask 0016  
                                            _processButtonRelease 1830  
                                             ??i2_TMR3_WriteTimer 0003  
                                                   _mtouch_button 0074  
                                                      _INTCONbits 000FF2  
                                                   _mtouch_sensor 0094  
                                                        memcpy@d1 0016  
                                                        memcpy@s1 0018  
                                        ??_Sensor_setSamplePeriod 0016  
                                      ??_MTOUCH_Sensor_isSampling 0016  
                                          ??_INTERRUPT_Initialize 0016  
                                                     _MTOUCH_Tick 381A  
                                      __size_of_RGBLed_ResetDelay 0012  
                                          ?_Button_Reading_Update 001D  
                                                ??_TMR3_ReadTimer 0018  
                                Button_Deviation_Update@deviation 0022  
                                      processButtonRelease@button 00CB  
                                    MTOUCH_Button_Initialize@name 0017  
                               __size_of_MTOUCH_Button_Initialize 0072  
                            __end_of_ADCC_DefaultInterruptHandler 3850  
                           __size_of_ADCC_DefaultInterruptHandler 0002  
                                    _ADCC_DefaultInterruptHandler 384E  
                                               ??_TMR3_StartTimer 0016  
                                                     FillScreen@n 0034  
                                                        intlevel2 0000  
                                       ?_MTOUCH_Button_Initialize 0001  
                                         ?_PIN_MANAGER_Initialize 0001  
                               __size_of_ADCC_ThresholdISR_mTouch 000A  
                                     ??_Sensor_setCalibratAcqTime 0003  
                                       ?_ADCC_ThresholdISR_mTouch 0001  
                                     ?_MTOUCH_Sensor_isCalibrated 0001  
                                                ?_RGBLed_SetDiode 00A6  
                                       __end_ofi2_TMR3_WriteTimer 359A  
                Sensor_FrequencyHopping_Autotune_Process@variance 0023  
                                                ?_RGBLed_SetColor 0016  
                                    Sensor_scheduleNextScan@state 001C  
                                                ??_TMR1_StopTimer 0016  
                                      __end_of_processButtonTouch 28CC  
                                                        reverse@b 0018  
                                     __size_of_Button_Tick_helper 0064  
                                 __end_of_Button_State_NotPressed 1EBC  
                                         _Sensor_FrequencyHopping 3800  
                                         ??_MTOUCH_Sensor_Service 000C  
                                    __end_of_Sensor_Sampled_Reset 37AA  
                                         fp__Button_State_Pressed 0000  
                                 __end_of_MTOUCH_Sensor_isEnabled 31D8  
                                                     ??_updateLED 00B7  
                                               ??_TMR3_WriteTimer 0018  
                                                  ??_getColorMask 0019  
                                     __size_of_MTOUCH_Button_Tick 002C  
                                           ?_processButtonRelease 0001  
                                 Sensor_scheduleNextScan@skipScan 001D  
                               i2Sensor_scheduleNextScan@skipScan 0008  
                                 fp__TMR3_DefaultInterruptHandler 0000  
                                   ?_TMR3_DefaultInterruptHandler 0001  
                                   ??_MTOUCH_Button_InitializeAll 0021  
                                        ??_Button_DefaultCallback 0016  
                                   ??_MTOUCH_Sensor_InitializeAll 0021  
                                __size_of_MTOUCH_Sensor_Calibrate 0028  
                                          ??_MTOUCH_Sensor_Enable 0016  
                                                ??_TMR3_StopTimer 0016  
       Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound 0022  
                               Sensor_isCalibratingAcqTime@sensor 0016  
                             i2Sensor_isCalibratingAcqTime@sensor 0001  
                                    __size_of_Sensor_isCalibrated 0020  
                                        ??_Sensor_DefaultCallback 0016  
                                    __end_of_Sensor_setCalibrated 372E  
                            __end_of_Button_Reading_Update_Helper 2790  
                           __size_of_Button_Reading_Update_Helper 00AE  
                                    _Button_Reading_Update_Helper 26E2  
                               __size_of_MTOUCH_Button_ServiceAll 0022  
                                       ?_MTOUCH_Button_ServiceAll 0001  
                                   Button_State_NotPressed@button 00CE  
                                      __size_of_MTOUCH_Initialize 0012  
                                  ??_ADCC_SetADTIInterruptHandler 0019  
                                  __end_of_PIN_MANAGER_Initialize 2A5E  
                                               ??_ADCC_Initialize 0019  
                                          _Button_Baseline_Update 212E  
                                 fp__ADCC_DefaultInterruptHandler 0000  
                                   ?_ADCC_DefaultInterruptHandler 0001  
                                        ?_Sensor_scheduleNextScan 0001  
                                 ??_MTOUCH_Sensor_ADCC_Initialize 0019  
                                      __size_ofi2_TMR1_WriteTimer 0028  
                                      ??_MTOUCH_Sensor_wasSampled 0016  
                                                 _TMR1_Initialize 3050  
                                           i2_Sensor_isCalibrated 36D0  
